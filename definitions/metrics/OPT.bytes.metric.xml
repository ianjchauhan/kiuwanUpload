<?xml version="1.0" encoding="UTF-8"?>

<metric-definition xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.optimyth.com/schema/definitions/metric" 
    version="1.1">

  <metric id="OPT.bytes" unit="" aggregation="sum" aggregationScope="program">

    <!-- Criteria values: better is, scopes, language parsers, etc. -->
    <criteria-values>
      <criterium-value ref="OPT.CRITERIUM_VALUE.METRIC_TYPE.SIZE" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.METRIC_HIERARCHY.SIZE.CODE" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.BETTER_IS.LOWER" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.SCOPE.SYSTEM" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.SCOPE.PROGRAM" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.ABAP" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.ACTIONSCRIPT" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.ASP" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.ASPNET" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.C" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.CL400" />      
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.CSHARP" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.CPP" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.COBOL" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.FOXPRO" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.GO" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.GROOVY" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.HTML" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.INFORMIX" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.JAVA" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.JAVASCRIPT" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.JCL" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.JSP" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.KOTLIN" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.NATURAL" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.OBJECTIVEC" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.ORACLEFORMS" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.PERL" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.PHP" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.PLSQL" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.POWERSCRIPT" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.PYTHON" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.RPG" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.RPG4" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.RUBY" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.SCALA" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.SQL" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.SQLSCRIPT" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.SWIFT" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.TRANSACTSQL" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.VB6" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.VBNET" />
      <criterium-value ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.XML" />
    </criteria-values>

    <!-- Valid range -->
    <range>
      <minimum value="0" included="true" />
      <maximum value="+inf" included="false" />
    </range>

    <!-- Metric thresholds (up to three) -->
    <thresholds />

    <!-- Metric parameters (applies to implementations that reference them) -->
    <parameters />

    <!-- Metric implementations for each language parser -->
    <implementations>

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.ABAP">
        <internal-name id="OPT.ABAP.SIZE.LOC" />
        <java-class>com.als.core.metric.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>
     
      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.ACTIONSCRIPT">
        <internal-name id="OPT.ACTIONSCRIPT.SIZE.LOC" />
        <java-class>com.als.core.metric.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.ASP">
        <internal-name id="OPT.ASP.SIZE.LOC" />
        <java-class>com.als.core.metric.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.ASPNET">
        <internal-name id="OPT.ASPNET.SIZE.LOC" />
        <java-class>com.als.core.metric.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>
      
      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.C">
        <internal-name id="OPT.C.SIZE.LOC" />
        <java-class>com.als.cpp.metrics.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.CSHARP">
        <internal-name id="OPT.CSHARP.SIZE.LOC" />
        <java-class>com.optimyth.csharp.metrics.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.CPP">
        <internal-name id="OPT.CPP.SIZE.LOC" />
        <java-class>com.als.cpp.metrics.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>
      
      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.CL400">
        <internal-name id="OPT.CL400.SIZE.LOC" />
        <java-class>com.als.core.metric.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>      

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.COBOL">
        <internal-name id="OPT.COBOL.SIZE.LOC" />
        <java-class>com.als.cobol.metrics.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.FOXPRO">
        <internal-name id="OPT.FOXPRO.SIZE.LOC" />
        <java-class>com.optimyth.qaking.foxpro.metrics.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.GO">
        <internal-name id="OPT.GO.SIZE.LOC" />
        <java-class>com.kiuwan.qaking.go.metrics.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.GROOVY">
        <internal-name id="OPT.GROOVY.SIZE.LOC" />
        <java-class>com.optimyth.qaking.groovy.metrics.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>         

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.HTML">
        <internal-name id="OPT.HTML.SIZE.LOC" />
        <java-class>com.als.core.metric.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.INFORMIX">
        <internal-name id="OPT.INFORMIX.SIZE.LOC" />
        <java-class>com.als.core.metric.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.JAVA">
        <internal-name id="OPT.JAVA.SIZE.LOC" />
        <java-class>com.als.java.metrics.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.JAVASCRIPT">
        <internal-name id="OPT.JS.LOC" />
        <java-class>com.optimyth.qaking.javascript.metrics.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>
      
      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.JCL">
        <internal-name id="OPT.JCL.SIZE.LOC" />
        <java-class>com.als.jcl.metrics.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.JSP">
        <internal-name id="OPT.JSP.SIZE.LOC" />
        <java-class>com.als.core.metric.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>
      
      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.KOTLIN">
        <internal-name id="OPT.KOTLIN.SIZE.LOC" />
        <java-class>com.kiuwan.qaking.kotlin.metrics.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>       

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.NATURAL">
        <internal-name id="OPT.NATURAL.SIZE.LOC" />
        <java-class>com.optimyth.qaking.natural.metrics.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.OBJECTIVEC">
        <internal-name id="OPT.OBJECTIVEC.LOC" />
        <java-class>com.als.core.metric.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>
      
      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.ORACLEFORMS">
        <internal-name id="OPT.ORACLEFORMS.LOC" />
        <java-class>com.als.core.metric.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>
      
      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.PERL">
        <internal-name id="OPT.PERL.SIZE.LOC" />
        <java-class>com.als.core.metric.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>       
      
      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.PHP">
        <internal-name id="OPT.PHP.LOC" />
        <java-class>com.als.core.metric.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.PLSQL">
        <internal-name id="OPT.PLSQL.SIZE.LOC" />
        <java-class>com.als.core.metric.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.POWERSCRIPT">
        <internal-name id="OPT.POWERSCRIPT.SIZE.LOC" />
        <java-class>com.optimyth.qaking.powerscript.metrics.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>
      
      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.PYTHON">
        <internal-name id="OPT.PYTHON.SIZE.LOC" />
        <java-class>com.optimyth.python.metrics.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>       

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.RPG">
        <internal-name id="OPT.RPG.LOC" />
        <java-class>com.als.core.metric.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.RPG4">
        <internal-name id="OPT.RPG4.LOC" />
        <java-class>com.als.core.metric.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>
      
      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.RUBY">
        <internal-name id="OPT.RUBY.LOC" />
        <java-class>com.als.core.metric.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>
      
      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.SCALA">
        <internal-name id="OPT.SCALA.SIZE.LOC" />
        <java-class>com.kiuwan.qaking.scala.metrics.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>       

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.SQL">
        <internal-name id="OPT.SQL.SIZE.LOC" />
        <java-class>com.optimyth.sql.metrics.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>
      
      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.SQLSCRIPT">
        <internal-name id="OPT.SQLSCRIPT.SIZE.LOC" />
        <java-class>com.optimyth.sql.metrics.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>      
      
      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.SWIFT">
        <internal-name id="OPT.SWIFT.SIZE.LOC" />
        <java-class>com.optimyth.qaking.swift.metrics.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>         

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.TRANSACTSQL">
        <internal-name id="OPT.TRANSACTSQL.SIZE.LOC" />
        <java-class>com.optimyth.qaking.tsql.metrics.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.VB6">
        <internal-name id="OPT.VB6.SIZE.LOC" />
        <java-class>com.optimyth.qaking.vb6.metrics.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.VBNET">
        <internal-name id="OPT.VBNET.SIZE.LOC" />
        <java-class>com.optimyth.vbnet.metrics.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.XML">
        <internal-name id="OPT.XML.SIZE.LOC" />
        <java-class>com.optimyth.xml.metrics.LocMetricRule</java-class>
        <java-version>1.5</java-version>
        <parameters />
      </language-parser>

      
      <reference><![CDATA[Optimyth (http://www.optimyth.com)]]></reference>
    </implementations>

    <!-- Code examples for each language parser -->
    <code-examples>

     <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.ABAP">
        <code-example name="metricCodeExampleAbap" result-value="318">
<![CDATA[
loop at it_sflight into wa_sflight.
 read table it_spfli into wa_spfli
 with key
 carrid = wa_sflight-carrid
 binary search.
 if sy-subrc = 0.
  it_sflight = NULL.
  wa_sflight-cityfrom = wa_spfli-cityfrom.
  wa_sflight-cityto = wa_spfli-cityto.
 endif.
endloop.
]]>
       </code-example>
      </language-parser>
     <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.ASP">
        <code-example name="metricCodeExampleAsp" result-value="948">
<![CDATA[
<!--#include file="constantes.inc.asp" -->
<!--#include file="conectores.inc.asp" -->
<!--#include file="adovbs.inc"-->
<%

Function AbreCaja(vAncho,vTitulo)
    dim ancho, Titulo
    if vAncho <> "" then ancho = "style='width:"&vAncho&"'" end if
    if vTitulo <> "" then Titulo = "<h1>"&vTitulo&"</h1>" end if
    %>
    <div id="box" <%=ancho%>>   <!--- box border -->

        <div id="lb">
        <div id="rb">
        <div id="bb"><div id="blc"><div id="brc">
        <div id="tb"><div id="tlc"><div id="trc">
        <!--  -->
        <div id="content">
        <%=Titulo%>
        <div style="margin-right:10px">
        <%
End Function

Function CierraCaja()
        %>
        </div>
        </div>
        <!--- end
        of box border --></div></div></div></div>
        </div></div></div></div>
        <!-- -->
    </div>
    <%
End Function
%>
]]>
       </code-example>
      </language-parser>
     <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.ASPNET">
        <code-example name="metricCodeExampleAspnet" result-value="81">
<![CDATA[
<%@ Application Codebehind="Global.asax.cs" Inherits="DatasetToExcel.Global" %>
]]>
       </code-example>
      </language-parser>
      
      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.C">
        <code-example name="metricCodeExampleC" result-value="187"><![CDATA[
#include <stdio.h>
#define LAST 10

int main()
{
  int i, sum = 0;
   
  for ( i = 1; i <= LAST; i++ ) {
    sum += i;
  }
  
  printf("sum = %d\n", sum);
  return 0;
}
]]>
        </code-example>
      </language-parser>
            
      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.CSHARP">
        <code-example name="metricCodeExampleCsharp" result-value="2106">
<![CDATA[
using System;

class Stress {

    static string mode = "unchecked";

    static string [] types = {
        "int",   "uint",
        "short", "ushort",
        "long",  "ulong",
        "sbyte", "byte", "char"
        };


    static void w (string s)
    {
        Console.Write (s);
    }

    static void wl (string s)
    {
        Console.WriteLine (s);
    }

    static void generate_receptors ()
    {
        foreach (string t in types){
            w ("\tstatic void receive_" + t + " (" + t + " a)\n\t{\n");
            w ("\t\tConsole.Write (\"        \");\n");
            w ("\t\tConsole.WriteLine (a);\n");
            w ("\t}\n\n");
        }

    }

    static void var (string type, string name, string init)
    {
        w ("\t\t" + type + " " + name + " = (" + type + ") " + init + ";\n");
    }

    static void call (string type, string name)
    {
        w ("\t\treceive_" + type + " (" + mode + "((" + type + ") " + name + "));\n");
    }
    static void generate_main ()
    {
        wl ("\tstatic void Main ()\n\t{");

        foreach (string t in types){
            w ("\t\tprobe_" + t + " ();\n");
        }
        wl ("\t}");
    }

    static void Main (string [] args)
    {
        foreach (string arg in args){
            if (arg == "-h" || arg == "--help"){
                Console.WriteLine ("-h, --help     Shows help");
                Console.WriteLine ("-c, --checked  Generate checked contexts");
                return;
            }
            if (arg == "--checked" || arg == "-c"){
                mode = "checked";
                continue;
            }
        }
        wl ("using System;\nclass Test {\n");

        generate_receptors ();
        generate_emision ();

        generate_main ();

        wl ("}\n");
    }
}
class MatchingNames
{

      int someField;
      string varOne, varTwo;

      void SomeMethod () {
        int i, someField; // FALSO NEGATIVO
        string varTwo; // FALSO NEGATIVO
      }
}
]]>
       </code-example>
      </language-parser>
     <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.CPP">
        <code-example name="metricCodeExampleCpp" result-value="1382">
<![CDATA[
template<typename Graph1, typename Graph2>
void run_test()
{
   typedef typename boost::property_map<Graph1, boost::vertex_index_t>::type
           IndexMap1;
   typedef typename boost::property_map<Graph2, boost::vertex_index_t>::type
           IndexMap2;
   Graph1 g1(24);
   Graph2 g2(24);
   IndexMap1 index_map1 = boost::get(boost::vertex_index_t(), g1);
   IndexMap2 index_map2 = boost::get(boost::vertex_index_t(), g2);
   BGL_FORALL_EDGES_T(e, g3, Graph2) {
     edge_pairs_g3.push_back(
       std::make_pair(get(index_map3, source(e, g3)),
                      get(index_map3, target(e, g3))));
   }
   BOOST_CHECK(edge_pairs_g1 == edge_pairs_g3);
}

template <typename Graph>
void test_remove_edges()
{
    using namespace boost;
    // Make sure we don't decrement the edge count if the edge doesn't actually
    // exist.
    remove_edge(vertex(0, g), vertex(1, g), g);
    BOOST_CHECK(num_edges(g) == 0);
}

int test_main(int, char*[])
{
        // Use setS to keep out edges in order, so they match the adjacency_matrix.
    typedef boost::adjacency_list<boost::setS, boost::vecS, boost::undirectedS>
            UGraph1;
    typedef boost::adjacency_matrix<boost::undirectedS>
            UGraph2;
    run_test<UGraph1, UGraph2>();
    test_remove_edges<UGraph2>();
    test_remove_edges<BGraph2>();
    return 0;
}


]]>
       </code-example>
      </language-parser>
     <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.COBOL">
        <code-example name="metricCodeExampleCobol" result-value="1970">
<![CDATA[
      * **********************                                          00002000
       IDENTIFICATION DIVISION.                                         00003000
      ************************                                          00004000
       PROGRAM-ID. JGUPR18.                                             00007001
       ENVIRONMENT DIVISION.                                            00157000
      ***********************                                           00158000
       CONFIGURATION SECTION.                                           00159000
       SPECIAL-NAMES. DECIMAL-POINT IS COMMA.                           00160000
      ****************                                                  00164000
       DATA DIVISION.                                                   00165000
      ****************                                                  00166000
       WORKING-STORAGE SECTION.                                         00168000
      **************************                                        00169000

       01  TAUGARCA.                                                    00376000
           03 FILLER OCCURS 60 TIMES.                                   00377000
              05 ICORR            PIC S999      COMP-3.                 00378000
              05 CAPGARAN         PIC S9(4)V99  COMP-3.                 00379000
              05 PRNETA           PIC S9(9)V99  COMP-3.                 00380000
       77  WPML                   PIC S9(10)V99 COMP-3 VALUE ZEROS.     00308000

      *********************                                             03375000
       PROCEDURE DIVISION.                                              03376000
      *********************                                             03377000
       INICIO-PROGRAMA.                                                 03379000
@OGC       MOVE 'PR16'     TO WPR9046-PANELORIG                         21177000
]]>
       </code-example>
      </language-parser>

     <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.CL400">
        <code-example name="metricCodeExampleHtml" result-value="2101">
<![CDATA[
              PGM (&TOMATE &PATATA)

 /*******************************************/
 /* DECLARE STATIC VARIABLES FOR TEST CALL  */
 /*******************************************/
              DCL        VAR(&FILE) TYPE(*CHAR) LEN(10) VALUE(QCUSTCDT)
              DCL        VAR(&LIB) TYPE(*CHAR) LEN(10) VALUE(QIWS)
              DCL        VAR(&MBR) TYPE(*CHAR) LEN(10) VALUE(*FIRST)
              DCL        VAR(&TOEMAIL) TYPE(*CHAR) LEN(255) VALUE('richard@rjssoft.com')
              DCL        VAR(&FROMEMAIL) TYPE(*CHAR) LEN(255) VALUE('richard@rjssoft.com')
              DCL        VAR(&SUBJECT) TYPE(*CHAR) LEN(255) VALUE('This is a Test call to SMTPDB2')
              DCL        VAR(&MESSAGE) TYPE(*CHAR) LEN(5000) VALUE('This is a test message')

 /***************************************************************/
 /* GO TO ERROR HANDLER IF ERRORS OCCUR                         */
 /***************************************************************/
              MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(ERRORS))

 /*******************************************/
 /* SEND AS/400 FILE TO EMAIL RECIPIENT NOW */
 /*******************************************/
              SMTPDB2    FILE(&LIB/&FILE) MBR(&MBR) TOADDR(&TOEMAIL) +
                           FROMADDR(&FROMEMAIL) SUBJECT(&SUBJECT) +
                           MESSAGE(&MESSAGE) INTFILE(*AS400FILE) +
                           SMTPHOST(*DEFAULT) RCDDLM(*CRLF) +
                           LASTRCDDLM(*YES) DTAFMT(*CSV) +
                           FLDDLM(*COMMA) COLHDG(*NO) QUOTES(*YES) +
                           CONTYPE('text/plain') LOG(*NO)

              RETURN

  /********************************************************************/
  /* HANDLE ERRORS */
  /********************************************************************/
  ERRORS:

    /* SEND EXIT MESSAGE ON ERROR */
              SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Errors +
                           occurred while creating email') +
                           MSGTYPE(*ESCAPE)

              ENDPGM 
]]>
       </code-example>
      </language-parser>      

     <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.FOXPRO">
        <code-example name="metricCodeExampleHtml" result-value="315">
<![CDATA[
*-- Common include
#define APLXXXXX           .T.

#include ..\..\comun\includes\foxpro.h
#include ..\..\comun\includes\msjlib.h
#include ..\..\comun\includes\msjmenu.h

#define PROC_OPEN_COMPANY    "   1"
#define PROC_OPEN_ENTRY    "   2"

#define INVOICE_NEW      .t.

#define FORM_ENTRY_EDITAR  .f.
]]>
       </code-example>
     </language-parser>

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.GO">
        <code-example name="metricCodeExampleGo" result-value="755">
          <![CDATA[
package main

import "fmt"

const favColor string = "blue"

func main() {
    var guess string
    // Create an input loop
    for {
        // Ask the user to guess my favorite color
        fmt.Println("Guess my favorite color:")
        // Try to read a line of input from the user. Print out the error 0
        if _, err := fmt.Scanln(&guess); err != nil {
            fmt.Printf("%s\n", err)
            return
        }
        // Did they guess the correct color?
        if favColor == guess {
            // They guessed it!
            fmt.Printf("%q is my favorite color!\n", favColor)
            return
        }
        // Wrong! Have them guess again.
        fmt.Printf("Sorry, %q is not my favorite color. Guess again.\n", guess)
    }
}
]]>
        </code-example>
      </language-parser>

      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.GROOVY">
        <code-example name="metricCodeExampleGroovy" result-value="832">
<![CDATA[
    /*
    * Block comment
    */
    File includes = new File((String)properties.basedir, 'includes')

    includes.eachDir{File platform ->
      if(platform.name=='CVS') return
      File indexFile = new File(platform, "index.list")
      int count = 0;

      //  inline comment
      indexFile.withPrintWriter { PrintWriter w ->
        int p = platform.absolutePath.length()+1
        platform.eachFileRecurse { File header ->
          if(!header.file) return;
          String headerName = header.absolutePath.substring(p).replace('\\', '/')
          if(headerName.startsWith('CVS')) return;
          w.println("${headerName}")
          count++;
        }
      }
      // inline comment
      println "Found ${count} header files for platform ${platform.name}. Index ${indexFile} generated."
    }
]]>
       </code-example>
      </language-parser>      
      
     <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.HTML">
        <code-example name="metricCodeExampleHtml" result-value="399">
<![CDATA[
<HTML>
<BODY>
  <!--   SELECT,
     INPUT TYPE=BUTTON,
INPUT TYPE=PASSWORD -->
<FORM name="formulario" action="">
  <input type="checkbox" name="pasa" value="tv" />TV                      <!-- OK -->
  <input type="radio" value="libros"name="musica" />Libros                <!-- OK -->
  <input type="radio" value="libros" />Libros
  <!-- otra
violacion
mas-->  </FORM>
</BODY>
</HTML>
]]>
       </code-example>
      </language-parser>
    <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.INFORMIX">
      <code-example name="metricCodeExampleInformix" result-value="639">
<![CDATA[
# ------------------------------------------------------------------
# @1    
# ------------------------------------------------------------------ 

DATABASE dummy

define wtime                                        datetime year to second

MAIN

   LET wtime = current year to second
   LET wmessage = "Start -  : ",wtime clipped
   DISPLAY wmessage clipped

   LET ls_sql =" Select  numinvoice from invoices "
   PREPARE psel_invoices FROM ls_sql  
   DECLARE qsel_concprefact cursor with hold for psel_invoices   

   LET wtime = current year to second
   LET wmessage = "End - ", wtime clipped
   DISPLAY wmessage clipped

END MAIN     
]]>
       </code-example>
    </language-parser>
    <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.JAVA">
        <code-example name="metricCodeExampleJava" result-value="796">
<![CDATA[
package frim.ci.cliente;

import frim.ci.componentes.*;
/**
 * <b>Autor:</b> Consulting  <b>Fecha:</b> 22/12/1998
 */
public class CITabObjetoInmueble extends zurich.ae.presentacion.AqTab implements zurich.ci.componentes.CIPanelObjeto {
    public final int NUM_PANELES_OBJ_INMUEBLE = 2;
private boolean completarMensajeGrabacion(zurich.ci.componentes.CIEstructuraDatosGrid datos) {
    CIPanelObjeto panelActual = null;
    boolean completadoCorrectamente = true;
    for (int i = 0; i < NUM_PANELES_OBJ_INMUEBLE; i++) {  //prueba
        panelActual = (CIPanelObjeto) devolverPanel(i);
        completadoCorrectamente = panelActual.completarMensajeGrabacion(datos);
        if (!completadoCorrectamente) break;
    }
    return completadoCorrectamente;
}
}
]]>
       </code-example>
      </language-parser>
   <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.JAVASCRIPT">
        <code-example name="metricCodeExampleJavascript" result-value="237">
<![CDATA[
function f(x) { //PROGRAM
  if(x==3) {
    return 3;
  } else {
    return 5;
  }

}

var f2 = function(x) { // This function has a single return !!!
  var inner = function(x) {
    return x*x;
  }

  return inner(x);
}
]]>
       </code-example>
      </language-parser>
   <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.JCL">
        <code-example name="metricCodeExampleJcl" result-value="345">
<![CDATA[
//DKP00615 EXEC PGM=ICEGENER
//SYSUT1 DD DSN=MBVP.EI.FIX.UNLOAD.EIDTMAEC,DISP=SHR
//SYSUT2 DD DSN=MBVP.DK.GDG.EIDTMAEC.RESPALDO(+1),
// DISP=(NEW,CATLG,DELETE),
// SPACE=(CYL,(100,50),RLSE),UNIT=3390,
// DCB=(BKUX.MODEL,DSORG=PS,RECFM=FB,LRECL=324,BLKSIZE=0)

//*
//SYSPRINT DD SYSOUT=*
//SYSOUT DD SYSOUT=*
//SYSABOUT DD SYSOUT=*
//*
]]>
       </code-example>
      </language-parser>
   <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.JSP">
        <code-example name="metricCodeExampleJsp" result-value="2261">
<![CDATA[
<?xml version='1.0' encoding='iso-8859-15' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
                      "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<f:view locale="#{excepcionesController.userContext.locale}">
<f:loadBundle basename="i18n.messagesExcepciones" var="msg" />
<head>
<title>#{msg.tituloBrowser}</title>
<meta http-equiv="Content-Type"
    content="application/xhtml+xml; charset=ISO-8859-15" />
<link rel="stylesheet" type="text/css"
    href="${request.contextPath}/docs/arqos/css/Comun.css" />
<script type="text/javascript" src="${request.contextPath}/docs/comun/js_excepciones/filtroBusquedaExcepciones.js"></script>
</head>
    <body onload="verifyErrors(); deshabilitarBotones()">
    <h:form id ="form_excepciones">
    <rich:panel styleClass="superContainer">
        <rich:panel styleClass="containerWithoutMenu">
            <h:outputText styleClass="search_title" value="#{msg['selecexcepciones.subtitulo']}" />
                <rich:panel styleClass="exit_data">
                  <h:panelGrid columns="1"  style="width:90%;margin-left:1%;margin-right:1%;">
                        <rich:panel>

                            <h:outputText>
                                <B><h:outputText value="#{msg['selecexcepciones.detalle.tipCombi']} " /></B>
                            </h:outputText>
                            <h:outputText value="#{excepcionesController.atributos}" />
                        </rich:panel><!-- FIN PANEL CABECERA-->
                    </h:panelGrid>
                </rich:panel>
                <!-- CONSULTA DE EXCEPCIONES DE ASIGNACION ** LISTA EXCEPCIONES ** -->
                <a4j:keepAlive beanName="excepcionesController"></a4j:keepAlive>
                <!-- FIN
        DE ESTA
        TABLA --></rich:panel>
        </rich:panel>
        </h:form>
    </body>
</f:view>
</html>
]]>
       </code-example>
  </language-parser>
  <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.KOTLIN">
    <code-example name="metricCodeExampleKotlin" result-value="371">
<![CDATA[
import java.sql.DriverManager

class SourceInSink {

    /* 
     * Comment
     * block
     * line
     */
    fun main(args: Array<String>) {
        val sql = args[0]
        val db = DriverManager.getConnection("jdbc:sqlite::memory:")
        val statement = db.createStatement()
        // sink
        val rs = statement.executeQuery(sql)  
    }
}
]]>
     </code-example>
  </language-parser>  
  <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.NATURAL">
        <code-example name="metricCodeExampleNatural" result-value="3783">
<![CDATA[
 3600 DEFINE SUBROUTINE CARGAR-ANO-TABLA
 3650 DECIDE FOR FIRST CONDITION
 3660   WHEN TAR(WI) EQ 625
 3670     MOVE 2002                   TO WANO-AUX
 3680     FOR I=1 TO 20
 3690       MOVE WANO-AUX TO ANO-625(I)
 3700       ADD 1 TO WANO-AUX
 3710       IF AÑO-625(I) EQ WANO
 3720         ESCAPE BOTTOM
 3730       END-IF
 3740     END-FOR
 3750   WHEN TAR(WI) EQ 651
 3760     MOVE 2002                   TO WANO-AUX
 3770     FOR I=1 TO 20
 3780       MOVE WANO-AUX TO ANO-651(I)
 3790       ADD 1 TO WANO-AUX
 3800       IF ANO-651(I) EQ WANO
 3810         ESCAPE BOTTOM
 3820       END-IF
 3830     END-FOR
 4110   WHEN NONE
 4120     IGNORE
 4130 END-DECIDE
 4140 END-SUBROUTINE
 4150 ************************************************************************
 4160 END     /* -------------   FIN DEL PROGRAMA   -------------------------
 4170 ************************************************************************
 ]]>
       </code-example>
      </language-parser>
     <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.OBJECTIVEC">
       <code-example name="metricCodeExampleObjectiveC" result-value="231">
<![CDATA[
@implementation QAMyProgram

@synthesize initialized = _initialized;

- (id)initWithValue:(NSString *)initialValue
{
    if ((self = [super init])) 
    {
        _initialized = NO;
    }
    
    return self;
}

@end
]]>
       </code-example>
     </language-parser>
     <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.ORACLEFORMS">
        <code-example name="metricCodeExampleOracleForms" result-value="2467">
<![CDATA[
<?xml version = '1.0' encoding = 'UTF-8'?>
<Module version="101020002" xmlns="http://xmlns.oracle.com/Forms">
   <FormModule>
      <ProgramUnit Name="CARGAR_LISTAS" ProgramUnitType="Procedimiento" ProgramUnitText="PROCEDURE CARGAR_LISTAS IS&amp;#10;BEGIN&amp;#10;	:BLACTUPLANCO01.T_TIPCUENTA  := '*';		&amp;#10;	:BLACTUPLANCO01.T_TIPIVA     := '*';		&amp;#10;	--:BLACTUPLANCO02.T_TIPCUENTA  := '*';		&amp;#10;	:BLACTUPLANCO02.T_TIPCUENTA  := null;		&amp;#10;	:BLACTUPLANCO02.T_TIPIVA     := '*';   	&amp;#10;END;"/>
      <ProgramUnit Name="ACTIVAR_ITEM" ProgramUnitType="Procedimiento" ProgramUnitText="Procedure ACTIVAR_ITEM ( Bloque In Varchar2,&amp;#10;                         Item   In Varchar2,&amp;#10;                         SiNo   In Boolean ) Is&amp;#10;  BloqueItem     Varchar2(50) := Bloque||'.'||Item;                         &amp;#10;Begin	&amp;#10;  If Get_Item_Property(BloqueItem, Insert_Allowed) = 'TRUE' And Not SiNo Then&amp;#10;  	Set_Item_Property(BloqueItem, Insert_Allowed, Property_False);&amp;#10;  	Set_Item_Property(BloqueItem, Update_Allowed, Property_False);&amp;#10;  	Set_Item_Property(BloqueItem, Navigable     , Property_False);&amp;#10;  ElsIf Get_Item_Property(BloqueItem, Insert_Allowed) = 'FALSE' And SiNo Then	                                                          &amp;#10;  	Set_Item_Property(BloqueItem, Insert_Allowed, Property_True);&amp;#10;  	Set_Item_Property(BloqueItem, Update_Allowed, Property_True);&amp;#10;  	Set_Item_Property(BloqueItem, Navigable     , Property_True);&amp;#10;  End If;&amp;#10;End;"/>
      <ProgramUnit Name="BACKGROUND_ITEM" ProgramUnitType="Procedimiento" ProgramUnitText="Procedure BACKGROUND_ITEM ( Bloque In Varchar2,&amp;#10;                            Item   In Varchar2,&amp;#10;                            Color  In Varchar2 ) Is&amp;#10;  /* r225g225b225 Gray12 &amp;#10;     r255g255b255 White  */                            &amp;#10;  BloqueItem     Varchar2(50) := Bloque||'.'||Item;                         &amp;#10;Begin	&amp;#10;  If Get_Item_Property(BloqueItem, BackGround_Color) = 'r225g225b225' And Color = 'r255g255b255' Then&amp;#10;  	Set_Item_Property(BloqueItem, Visual_Attribute, 'ATT_WHITE');  	  	&amp;#10;  ElsIf Get_Item_Property(BloqueItem, BackGround_Color) = 'r255g255b255' And Color = 'r225g225b225' Then&amp;#10;  	Set_Item_Property(BloqueItem, Visual_Attribute, 'ATT_GRAY12');   	&amp;#10;  End If;&amp;#10;End;"/>
   </FormModule>
</Module>
]]>
       </code-example>
      </language-parser>       
      
     <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.PERL">
        <code-example name="metricCodeExamplePerl" result-value="343">
<![CDATA[
package AroundPlugin;
use Mojo::Base 'Mojolicious::Plugin';

sub register {
  my ($self, $app) = @_;

  # Render return value
  $app->hook(
    around_action => sub {
      my ($next, $c, $action, $last) = @_;
      my $value = $next->();
      $c->render(text => $value) if $last && $c->stash->{return};
      return $value;
    }
  );
}

1;
]]>
       </code-example>
     </language-parser>       
     <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.PHP">
        <code-example name="metricCodeExamplePhp" result-value="227">
<![CDATA[
<?php

class FatalTest extends PHPUnit_Framework_TestCase
{
    public function testFatalError()
    {
        if(extension_loaded('xdebug')) {
            xdebug_disable();
        }

        non_existing_function();
    }

}
]]>
       </code-example>
      </language-parser>      
     <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.PLSQL">
        <code-example name="metricCodeExamplePlsql" result-value="449">
<![CDATA[
SET ECHO OFF
SET HEAD OFF
SET PAGESIZE 0
SET LINESIZE 375
SET FEEDBACK OFF
SET COLSEP '|'

SPOOL &1/&5\_01a_sel_alarma.rpt

var fecha_corte_alarma VARCHAR2(20);

exec :fecha_corte_alarma := to_date('01/01/'
--||to_char(&2 - &6)
, 'dd/mm/yyyy');


  SELECT A.NOMBRE
    FROM orprv.prv_alarma a
    WHERE   a.CODIGO IN (SELECT * FROM TABLE PRESTAMOS );

SPOOL OFF
SET HEAD ON
SET FEEDBACK ON
SET ECHO ON
DISCONNECT;
EXIT;
]]>
       </code-example>
      </language-parser>
     <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.POWERSCRIPT">
        <code-example name="metricCodeExamplePowerscript" result-value="1252">
<![CDATA[
$PBExportHeader$n_application_globalparameter.sru
forward
global type n_application_globalparameter from n_globalparameter
end type
end forward

global type n_application_globalparameter from n_globalparameter
end type
global n_application_globalparameter n_application_globalparameter

on n_application_globalparameter.create
call super::create
end on

on n_application_globalparameter.destroy
call super::destroy
end on

event ue_decimal_separator_changed;call super::ue_decimal_separator_changed;/*////////////////////////////////////////////////////////
 Event   :  n_application_globalparameter.ue_Decimal_separator_changed
 Scope: <ACCESS>public</ACCESS>
 Returns: <RETURN>(None)</RETURN>
 Parameters:  <ARGS>
          String as_new_decimal_separator:  El nuevo separador decimal del Sistema operativo y de la aplicación
 </ARGS>
 Description: <DESC>  Llamamos a la funcion global que comprueba si 
 si el separador decimal coincide con el definidio en la userdll</DESC>
//////////////////////////////////////////////////////////
 01/12/2004 Initial version by <AUTH> JMN </AUTH>
////////////////////////////////////////////////////////// */
string ls_type = "FRAME"
post gf_test_decimal_separator(ls_type)
end event
]]>
       </code-example>
     </language-parser>
     <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.PYTHON">
        <code-example name="metricCodeExamplePython" result-value="625">
<![CDATA[
#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
requests.certs
~~~~~~~~~~~~~~

This module returns the preferred default CA certificate bundle.

If you are packaging Requests, e.g., for a Linux distribution or a managed
environment, you can change the definition of where() to return a separately
packaged CA bundle.
"""
import os.path

try:
    from certifi import where
except ImportError:
    def where():
        """Return the preferred certificate bundle."""
        # vendored bundle inside Requests
        return os.path.join(os.path.dirname(__file__), 'cacert.pem')

if __name__ == '__main__':
    print(where())
]]>
       </code-example>
      </language-parser>       
     <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.RUBY">
        <code-example name="metricCodeExampleRuby" result-value="586">
<![CDATA[
module Tester
  class StaticFileReader
    attr_reader :site, :dir, :unfiltered_content
    def initialize(site, dir)
      @site = site
      @dir = dir
      @unfiltered_content = Array.new
    end

    # Read all the files in <source>/<dir>/ for Yaml header and create a new Page
    # object for each file.
    #
    # dir - The String relative path of the directory to read.
    #
    # Returns an array of static files.
    def read(files)
      files.map{ |file| @unfiltered_content << StaticFile.new(@site, @site.source, @dir, file)}
      @unfiltered_content
    end
  end
end
]]>
       </code-example>
      </language-parser>
      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.SCALA">
            <code-example name="metricCodeExampleScala" result-value="747">
<![CDATA[
package gitbucket.core.model

trait AccessTokenComponent { self: Profile =>
  import profile.api._

  lazy val AccessTokens = TableQuery[AccessTokens]

  class AccessTokens(tag: Tag) extends Table[AccessToken](tag, "ACCESS_TOKEN") {
    // in line comment
    val accessTokenId = column[Int]("ACCESS_TOKEN_ID", O AutoInc)
    val userName = column[String]("USER_NAME")
    val tokenHash = column[String]("TOKEN_HASH")
    val note = column[String]("NOTE")
    def * = (accessTokenId, userName, tokenHash, note) <> (AccessToken.tupled, AccessToken.unapply)
  }
}

      /* this
      * is 
      * a 
      * block
      * comment
      */
case class AccessToken(
  accessTokenId: Int = 0,
  userName: String,
  tokenHash: String,
  note: String
)
]]>
       </code-example>
      </language-parser>       
      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.SQL">
        <code-example name="metricCodeExampleSql" result-value="98">
<![CDATA[
-- Des:

drop table liredeci

select * from NWI92330
order by centidad, cseguro, cnegreas
]]>
       </code-example>
      </language-parser>    
      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.SQLSCRIPT">
        <code-example name="metricCodeExampleSql" result-value="0">
       </code-example>
      </language-parser>      
      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.SWIFT">
        <code-example name="metricCodeExampleSwift" result-value="209">
<![CDATA[
import UIKit

class AccountsViewController: UITableViewController {
    // this is a comment
    override func viewDidLoad() {
        super.viewDidLoad()
        // set title
        title = "Title"
    }

}
]]>
       </code-example>
      </language-parser>       
      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.TRANSACTSQL">
        <code-example name="metricCodeExampleTransactsql" result-value="965">
<![CDATA[
/****** Object:  StoredProcedure [dbo].[PR_IMSG_COTA_USUARIO_CARTEIRA]    Script Date: 08/13/2012 11:48:49 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[PR_IMSG_COTA_USUARIO_CARTEIRA]
@p_ID_CADASTRO AS BIGINT = 0 OUTPUT,
@p_ID_PARAMETRO AS INT = NULL,
@p_CD_USUARIO AS VARCHAR(15) = NULL,
@p_CD_USUARIO_ALTERACAO AS VARCHAR(15) = NULL,
@p_DT_INCLUSAO AS DATETIME = NULL,
@p_DT_EXCLUSAO AS DATETIME = NULL,
@p_IC_NOVA AS BIT = 0
AS
BEGIN
DECLARE
    @v_ID_PARAMETRO AS INT,
    @v_CD_USUARIO AS VARCHAR(15),
    @v_CD_USUARIO_ALTERACAO AS VARCHAR(15),
    @v_DT_INCLUSAO AS DATETIME,
    @v_DT_EXCLUSAO AS DATETIME,
    @v_IC_NOVA AS BIT
    /*otro
    comentario*/    SET @v_ID_PARAMETRO = @p_ID_PARAMETRO
    SET @v_CD_USUARIO = @p_CD_USUARIO
    SET @v_CD_USUARIO_ALTERACAO = @p_CD_USUARIO_ALTERACAO
    SET @v_DT_INCLUSAO = @p_DT_INCLUSAO
    SET @v_DT_EXCLUSAO = @p_DT_EXCLUSAO
    SET @v_IC_NOVA = @p_IC_NOVA

END
GO

]]>
       </code-example>
      </language-parser>
      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.VB6">
        <code-example name="metricCodeExampleVb6" result-value="0">
<![CDATA[
VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
  Persistable = 0  'NotPersistable
  DataBindingBehavior = 0  'vbNone
  DataSourceBehavior  = 0  'vbNone
  MTSTransactionMode  = 0  'NotAnMTSObject
END
'Control de locx vbalGrid_
Option Explicit 'Control de locx vbalGrid
Public obG As vbalGrid
'Purpose: retorna la fila on es troba el text indicat a la columna. Retorna 0 si es troba.
Public Function RowMatch(ByVal p_vaSearch As Variant, p_svClauColumna As String) As Long
    Dim i As Long
    Dim j As Long

    With Me.obG
        j = .ColumnIndex(p_svClauColumna)
        For i = 1 To .Rows
            If .CellText(i, j) = p_vaSearch Then
                RowMatch = i
                Exit Function
            End If
        Next i
    End With
End Function
]]>
       </code-example>
      </language-parser>
      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.VBNET">
        <code-example name="metricCodeExampleVbnet" result-value="556">
<![CDATA[
Imports System

Namespace DesignLibrary

   Public Class Browser

      Dim uriHistory As New History()

      Sub ErrorProne()
         uriHistory.AddToHistory("http://www.adventure-works.com")
      End Sub

      Sub SaferWay()
         Try
            Dim newUri As New Uri("http://www.adventure-works.com")
            uriHistory.AddToHistory(newUri)
         Catch uriException As UriFormatException
         End Try
      End Sub

   End Class

End Namespace
]]>
       </code-example>
      </language-parser>
      <language-parser ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.XML">
        <code-example name="metricCodeExampleXml" result-value="464">
<![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE web-app PUBLIC "-//Comment Micro, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app id="WebApp">
    <servlet-mapping>
        <servlet-name>Mic</servlet-name>

        <url-pattern>/mic</url-pattern><!--comentario-->
    </servlet-mapping>
    <!--<welcome-file-list>
        <welcome-file>app/index.jsp</welcome-file>
    </welcome-file-list>
    --></web-app>

]]>
       </code-example>
      </language-parser>
    </code-examples>

    <!-- Internationalizations for each human language -->
    <i18ns>
    <i18n ref="OPT.LANGUAGE.SPANISH">
      <name><![CDATA[Bytes]]></name>
      
      <description>
<![CDATA[
Número de bytes.

El conteo de bytes se hace a nivel de sistema operativo; el valor obtenido será el mismo que muestra el sistema operativo al consultar las propiedades del fichero bajo análisis en cuestión.
]]>
       </description>
      <implementation-descriptions>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.ABAP">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.ASP">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.ASPNET">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.C">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.CSHARP">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.CPP">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>
        
        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.CL400">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>            

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.COBOL">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.FOXPRO">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.GO">
          <![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.GROOVY">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>        

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.HTML">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.INFORMIX">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.JAVA">
 <![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.

NOTA: Cuando se ejecuta esta métrica sobre código JSP, se cuentan los bytes de los caracteres contenidos en las líneas de definción de scriptlets <% ... %>, declaraciones <%! ... %> y directivas de importación <%@ page import=... %> Se debe tener en cuenta que las líneas que sólo contengan los caracteres de inicio y final de tag también se añaden al valor de la métrica.  En el siguiente código (fichero .jsp), la métrica 'bytes' da un valor de 355:

<%@ page contentType="text/html" language="java" %>
<%@ page import="es.opt.group.Constants" %>
<% String root = request.getContextPath(); %>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<HTML>
	<BODY>

		<%!

			protected void doExecute(CommandData commandData) throws Exception {
				doSomething();
			}
		%>

		<%-- Funciones en JSP's --%>

		<%
		    if (status != null) {
		    	try{
		    		doSomething();
		    	} catch(e Exception){
		    		doSomething();
		    	}
		%>
		<p><font color="blue"><%=status%></font></p>
		<%
		    } %>

	</BODY>
</HTML>
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.JAVASCRIPT">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>
        
        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.JCL">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.JSP">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.

NOTA: La métrica ignora las líneas contenidas dentro de scriptlets <% ... %>, declaraciones <%! ... %> y directivas de importación <%@ page import=... %> Estas líneas se contabilizan aplicando la métrica correspondiente de la tecnología JAVA sobre los ficheros JSP.
]]>
        </implementation-description>
        
        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.KOTLIN">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.NATURAL">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.OBJECTIVEC">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>    

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.ORACLEFORMS">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>
        
        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.PERL">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>        

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.PHP">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.PLSQL">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.POWERSCRIPT">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>
        
        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.PYTHON">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>        

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.RUBY">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.SCALA">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>        

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.SQL">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>
        
        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.SQLSCRIPT">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>        
        
        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.SWIFT">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>        

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.TRANSACTSQL">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.VB6">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.VBNET">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.XML">
<![CDATA[
Se calcula el número de bytes físicos que ocupa el fichero en memoria.
]]>
        </implementation-description>

      </implementation-descriptions>
      <parameters />
    </i18n>

    <i18n ref="OPT.LANGUAGE.ENGLISH">
      <name><![CDATA[Bytes]]></name>
      
      <description>
<![CDATA[
Number of bytes.

The byte count is done at operating system level; the obtained value is the same shown by consulting the properties of the file under analysis in the operating system.
]]>
      </description>

      <implementation-descriptions>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.ABAP">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.ASP">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.ASPNET">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>
        
        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.C">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>        

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.CSHARP">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.CPP">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.COBOL">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>
        
        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.CL400">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>        

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.FOXPRO">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.GO">
          <![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>
        
        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.GROOVY">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>        

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.HTML">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.INFORMIX">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.JAVA">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.

NOTE: When execute this metric over JSP code, counts bytes of the characters contained in the lines of definitions of scriptlets <% ... %>, declarations <%! ... %> and import directives <%@ page import=... %> You should note that the lines which only contains the initial and ending tag characters are also counted in the metric value. In the following code (.jsp file), the 'bytes' metric returns a value of 355:

<%@ page contentType="text/html" language="java" %>
<%@ page import="es.opt.group.Constants" %>
<% String root = request.getContextPath(); %>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<HTML>
  <BODY>

    <%!

      protected void doExecute(CommandData commandData) throws Exception {
        doSomething();
      }
    %>

    <%-- Funciones en JSP's --%>

    <%
        if (status != null) {
          try{
            doSomething();
          } catch(e Exception){
            doSomething();
          }
    %>
    <p><font color="blue"><%=status%></font></p>
    <%
        } %>

  </BODY>
</HTML>
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.JAVASCRIPT">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>
        
        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.JCL">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.JSP">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.

NOTE: The metric ignores lines contained on scriptlets <% ... %>, declarations <%! ... %> and import directives <%@ page import=...%> Those lines are counted with the proper metric of the JAVA technology applied over the JSP files.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.KOTLIN">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.NATURAL">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>
        
        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.OBJECTIVEC">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>         

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.ORACLEFORMS">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>   
        
        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.PERL">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>
        
        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.PHP">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>        

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.PLSQL">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.POWERSCRIPT">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>
        
        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.PYTHON">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>        

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.RUBY">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>
        
        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.SCALA">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>        

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.SQL">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>
        
        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.SQLSCRIPT">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>        
        
        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.SWIFT">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>        

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.TRANSACTSQL">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.VB6">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.VBNET">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>

        <implementation-description ref="OPT.CRITERIUM_VALUE.LANGUAGE_PARSER.XML">
<![CDATA[
Calculates the number of physic bytes that the file occupies in memory.
]]>
        </implementation-description>

      </implementation-descriptions>

      <parameters />
    </i18n>
    </i18ns>
  </metric>
</metric-definition>
