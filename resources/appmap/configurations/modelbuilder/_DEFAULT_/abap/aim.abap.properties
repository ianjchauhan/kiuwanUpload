# ------------------------------------------
# Configuration for SAP/R3 (ABAP) technology
# ------------------------------------------

# Containing software for program entities discovered by ABAP rule.
# Used as fallback if no global resolver or global resolver cannot find a containing software for the target entity.
aim.abap.software=${aim.common.software}

# The container fo referenced non-internal tables (e.g. SAP/R3).
# Used as fallback if no global database object resolver, or the resolver cannot find the target entity.
aim.abap.dbsystem=SAP/R3

# The database name or database schema (e.g. SAP) for container of referenced non-internal tables.
# Used as fallback if no global database object resolver, or the resolver cannot find the target entity.
aim.abap.dbname=SAP

# Strategy to use for selecting ABAP files to process.
# default: use extensions in language info.
# pattern: uses explicit pattern.
aim.abap.filter=default

# If filter set to pattern, use the following comma-separated patterns
aim.abap.filter.pattern=*.abap,**/*.abap

# If true, SQL intermediate components are created between source and destination database objects
aim.abap.createSqlNodes=true

# If true, internal tables declarations and usages are registered in the model
aim.abap.processInternalTables=false

# If true, TABLES references to ABAP tables are registered
aim.abap.registerTableReferences=false

# If true, calls to standard SAP procedures (functions, methods) are registered; ignored otherwise.
aim.abap.registerSapCalls=true

# (Optional) path to the directory where repository files generated by extractor utility are stored.
aim.abap.repository.dir=${CHECKING_DATA}/ABAP_REPO

# If true, process ABAP source code
aim.abap.rule.active=false

