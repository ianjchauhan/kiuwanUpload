<!DOCTYPE block SYSTEM "../aim.configuration.dtd">
<block tech='validation' subtech='validation' descriptor='validation/aim.validation.xml' label=''>
  <description>


  </description>

  <properties>
    <property id='aim.validation.rule.validate.active' type='bool'>
      <name>active</name>
      <example>false</example>
      <description>
        The declarative validation rule
      </description>
    </property>

    <property id='aim.validation.rule.validate.category' type='string'>
      <name>category</name>
      <example>architecture</example>
      <description>
        Category for the rule
      </description>
    </property>

    <property id='aim.validation.rule.validate.codeResource' type='string'>
      <name>codeResource</name>
      <example></example>
      <description>
        Validation DEPVAL code could be registered in a classpath resource, or directly (see aim.validation.rule.validate.code)
      </description>
    </property>

    <property id='aim.validation.rule.validate.code' type='string'>
      <name>code</name>
      <example></example>
      <description>
        Sample DEPVAL code for validation rule. See APPMAP Dependencies Validation Language section in AIM manuals
      </description>
    </property>

    <property id='ruleset(name' type='string'>
      <name>ruleset(name</name>
      <example>'architecture', severity: 'warning', message:'${rule.description}: ${source} -> ${target}' ) {</example>
      <description>
      </description>
    </property>

    <property id='//' type='string'>
      <name>//</name>
      <example>Illegal presentation -> backend dependency</example>
      <description>
      </description>
    </property>

    <property id='String' type='string'>
      <name>String</name>
      <example>BACKEND = "tags('dataAccess', in:software) or tags('host', in:software)"</example>
      <description>
      </description>
    </property>

    <property id='\' type='string'>
      <name>\</name>
      <example></example>
      <description>
      </description>
    </property>

    <property id='pattern(name' type='string'>
      <name>pattern(name</name>
      <example>'backend') { include(aql: ".[${BACKEND}]") }</example>
      <description>
      </description>
    </property>

    <property id='rule(name' type='string'>
      <name>rule(name</name>
      <example>'layering', description: 'A component in a layer may call only components in other layers (or infrastructure)') {</example>
      <description>
      </description>
    </property>

    <property id='subset(pattern' type='string'>
      <name>subset(pattern</name>
      <example>'component') // Only interested in components</example>
      <description>
      </description>
    </property>

    <property id='deny' type='string'>
      <name>deny</name>
      <example>{</example>
      <description>
      </description>
    </property>

    <property id='from(pattern' type='string'>
      <name>from(pattern</name>
      <example>'presentation')</example>
      <description>
      </description>
    </property>

    <property id='to(aql' type='string'>
      <name>to(aql</name>
      <example>"component[${BACKEND}]")</example>
      <description>
      </description>
    </property>

    <property id='}' type='string'>
      <name>}</name>
      <example></example>
      <description>
      </description>
    </property>

    <property id='aim.validation.rule.tooMuchCoupling.active' type='bool'>
      <name>active</name>
      <example>false</example>
      <description>
        Too much coupling detector
      </description>
    </property>

    <property id='aim.validation.rule.tooMuchCoupling.transitive' type='bool'>
      <name>transitive</name>
      <example>false</example>
      <description>
        If true, transitive (indirect) dependencies are checked ("global coupling").
        If false, only direct dependencies are considered.
      </description>
    </property>

    <property id='aim.validation.rule.tooMuchCoupling.defaultThreshold' type='string'>
      <name>defaultThreshold</name>
      <example>50</example>
      <description>
        Default direct coupling threshold
      </description>
    </property>

    <property id='aim.validation.rule.tooMuchCoupling.componentPercentageThreshold' type='string'>
      <name>componentPercentageThreshold</name>
      <example>5.0</example>
      <description>
        5% of transitive links incoming/outgoing means GLOBAL smell
      </description>
    </property>

    <property id='aim.validation.rule.tooMuchCoupling.threshold.software' type='string'>
      <name>software</name>
      <example>20</example>
      <description>
        Direct coupling thresholds by type/subtype
      </description>
    </property>

    <property id='aim.validation.rule.tooMuchCoupling.threshold.component' type='string'>
      <name>component</name>
      <example>50</example>
      <description>
      </description>
    </property>

    <property id='aim.validation.rule.tooMuchCoupling.threshold.class' type='string'>
      <name>class</name>
      <example>20</example>
      <description>
      </description>
    </property>

    <property id='aim.validation.rule.tooMuchCoupling.threshold.program' type='string'>
      <name>program</name>
      <example>50</example>
      <description>
      </description>
    </property>

    <property id='aim.validation.rule.tooMuchCoupling.threshold.dbObject' type='string'>
      <name>dbObject</name>
      <example>50</example>
      <description>
      </description>
    </property>

  </properties>

  <createdEntities>
    <values></values>
    <description></description>
  </createdEntities>

  <createdRelations>
    <values></values>
    <description></description>
  </createdRelations>
</block>
