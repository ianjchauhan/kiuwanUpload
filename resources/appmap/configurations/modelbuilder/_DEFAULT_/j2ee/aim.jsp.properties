# Configuration properties for j2ee/jsp module.

# Activates web.xml descriptors processing.
aim.j2ee.rule.webxml.active=false

# Activates JSP processing.
aim.j2ee.rule.jsp.active=false

# Activates servlet processing (.class files corresponding to J2EE servlet or filter).
aim.j2ee.rule.servlet.active=false

# Activats JSF (Faces 1.2) processing (parses faces descriptors, and discovers UI components and managed beans).
aim.j2ee.rule.faces.active=false

# Default (fallback) web application where discovered entities will be registered, if global resolver does not resolve it.
aim.j2ee.webapp=${aim.common.software}

# Ant pattern(s) for web.xml descriptors to process.
aim.j2ee.rule.webxml.webxmlPatterns=**/web.xml

# If true, accept any unresolved reference in HTML (to a file in analyzed software) and create a target entity
# If false, references to HTML resources not found in analyzed software are ignored
aim.j2ee.rule.jsp.acceptUnresolved=${aim.common.acceptUnresolved}

# If true, use the software detected in web.xml descriptor, if any.
# If false, use standard software resolution.
aim.j2ee.rule.jsp.overrideSoftwareResolver=true

# The (fallback) directory where web content can be found (for resolving relative URLs to code resources).
# Inferred web contents dir from web apps matched in web.xml descriptors will be tried first.
# If no WebApp is matched, this webContents is used as fallback base dir for JSP resources.
# This permits the rule to operate without a WebXmlRule resolving web applications explicitly.
aim.j2ee.rule.jsp.webContents=${aim.common.srcdir}

# Ant patterns for selecting which JSP files to process.
aim.j2ee.jsp.filter=**/*.jsp,**/*.jspx


