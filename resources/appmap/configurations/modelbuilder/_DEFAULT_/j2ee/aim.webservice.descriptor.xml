<!DOCTYPE block SYSTEM "../aim.configuration.dtd">
<block tech='j2ee' subtech='webservice' descriptor='j2ee/aim.webservice.xml' label='WebService processing in J2EE code'>
  <description>
    Discovers web services (either server-side, or client proxies/stubs declarations) and relations.
    <br/>
    Currently this module detects:
    <ul>
      <li>JAX-WS web services declared via annotations (JSR-181) in Java classes.</li>
      <li>Web services declared in WSDU descriptors generated by Borland's JBuilder WebServicesDesigner.</li>
      <li>Web services declared in Apache Axis WSDD descriptors.</li>
    </ul>
  </description>

  <dependencies>
    <dependency>j2ee/java</dependency>
  </dependencies>

  <properties>
    <property id='aim.j2ee.webservice.rule.jaxws.active' type='bool'>
      <name>jaxwsActive</name>
      <example>false</example>
      <description>Set to true to activate discovering web services in Java classes with JAX-WS (JSR-181) annotations.</description>
    </property>

    <property id='aim.j2ee.webservice.rule.jbuilder.active' type='bool'>
      <name>jbuilderActive</name>
      <example>false</example>
      <description>Set to true to activate discovering web services and class dependencies in WSDU descriptors from JBuilder WebServicesDesigner.</description>
    </property>

    <property id='aim.j2ee.webservice.rule.axisWsdd.active' type='bool'>
      <name>axisWsddActive</name>
      <example>false</example>
      <description>Set to true to activate discovering web services and class dependencies in Apache Axis WSDD deployment descriptors.</description>
    </property>

    <property id='aim.j2ee.webservice.rule.jaxws.processWebServiceClient' type='bool'>
      <name>processWebServiceClient</name>
      <example>true</example>
      <description>If true, @WebServiceClient annotations will be processed (JAX-WS client proxies).</description>
    </property>

    <property id='aim.j2ee.webservice.rule.jaxws.processWebServiceServer' type='bool'>
      <name>processWebServiceServer</name>
      <example>true</example>
      <description>If true, @WebService annotations will be processed (JAX-WS service implementations).</description>
    </property>

    <property id='aim.j2ee.webservice.rule.jaxws.createWebServiceMethods' type='bool'>
      <name>createWebServiceMethods</name>
      <example>false</example>
      <description>If set to true, JAX-WS webservice methods (annotated with @WebMethod) will be created, contained in the Web Service.</description>
    </property>

    <property id='aim.j2ee.webservice.rule.jaxws.createUnresolvedWebServices' type='bool'>
      <name>createUnresolvedWebServices</name>
      <example>false</example>
      <description>If set to true, webservices used in proxies that cannot be resolved are created in the same proxy software.</description>
    </property>

    <property id="aim.j2ee.webservice.filter.jbuilder" type='list' subtype="antPattern">
      <name>wsduPatterns</name>
      <example>**/*.wsdu</example>
      <description>Ant patterns to match which WSDU files to process.</description>
    </property>

    <property id='aim.j2ee.webservice.rule.jbuilder.createUnresolvedWebServices' type='bool'>
      <name>jbuilder.createUnresolvedWebServices</name>
      <example>false</example>
      <description>
        If set to true, webservices referenced in .wsdu that cannot be resolved are created in the
        same software that contains the descriptor.
      </description>
    </property>

    <property id='aim.j2ee.webservice.rule.axisWsdd.createWebServiceMethods' type='bool'>
      <name>axisWsdd.createWebServiceMethods</name>
      <example>false</example>
      <description>If set to true, webservice methods (operations for each service in WSDD) will be created, contained in the Web Service.</description>
    </property>

    <property id='aim.j2ee.webservice.rule.axisWsdd.software' type='string'>
      <name>axisWsdd.software</name>
      <example>${aim.common.software}</example>
      <description>
        Default (fallback) software name. Please note that global software resolvers could be used to
        resolve the software where WSDD file lives.
      </description>
    </property>

    <property id="aim.j2ee.webservice.filter.axisWsdd" type='list' subtype="antPattern">
      <name>wsddPatterns</name>
      <example>**/*.wsdd</example>
      <description>Ant patterns to match which Apache Axis WSDD files to process.</description>
    </property>

  </properties>

  <createdEntities>
    <values>webService,operation,class,configuration</values>
    <description>
      For each web service found, a webService component is created. Java client stubs and service interface classes
      are modeled as well with a class component.
      <br/>
      The property <code>createWebServiceMethods</code>, when true, controls whether an operation contained
      in the web service is created each (annotated) web service method.
      <br/>
      For web service descriptors, configuration components are created.
    </description>
  </createdEntities>

  <createdRelations>
    <values>
      class(proxy)-uses->webService,
      webService-uses->class(implementation classes),
      webService-implementedBy->class(service class),
      configuration-configures->webService
    </values>
    <description>
      Creates relations between proxy class and web service, and between web service and server-side classes
      (<i>implementedBy</i> with service interface or service implementation, <i>uses</i> for related classes).
    </description>
  </createdRelations>

  <importantConfigurations>
    <alternative>
      <value>aim.j2ee.webservice.rule.jaxws.active=true</value>
    </alternative>
    <alternative>
      <value>aim.j2ee.webservice.rule.jaxws.active=true</value>
      <value>aim.j2ee.webservice.rule.jaxws.createWebServiceMethods=true</value>
    </alternative>
    <alternative>
      <value>aim.j2ee.webservice.rule.jbuilder.active=true</value>
    </alternative>
    <alternative>
      <value>aim.j2ee.webservice.rule.axisWsdd.active=true</value>
    </alternative>
    <alternative>
      <value>aim.j2ee.webservice.rule.axisWsdd.active=true</value>
      <value>aim.j2ee.webservice.rule.axisWsdd.createWebServiceMethods=true</value>
    </alternative>
  </importantConfigurations>

</block>
