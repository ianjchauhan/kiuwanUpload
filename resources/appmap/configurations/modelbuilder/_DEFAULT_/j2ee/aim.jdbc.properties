# Configuration properties for JBDC processing.

# If true, processing of JDBC API calls in Java classes is performed.
aim.j2ee.rule.jdbc.active=false

# The dialect of embedded SQL in JAVA code. Possible values are: ansisql, plsql, transactsql, multi
# ansisql: Use SQL-92 parser
# plsql: Use PL/SQL parser
# transactsql: Use Transact-SQL parser
# multi: Try all options above
aim.jdbc.sqltype=${aim.common.database.sqltype}

# The default database system (or database name) to use when the target database entity cannot be resolved.
aim.j2ee.rule.jdbc.dbsystem=${aim.common.database.dbsystem}

# The default database name (or schema) to use when the target database entity cannot be resolved.
aim.j2ee.rule.jdbc.dbname=${aim.common.database.dbname}

# If true, case is ignored, for the names of the database entities found in Java code
aim.j2ee.rule.jdbc.ignoreCase=${aim.common.ignoreCase}

# Standard JDBC methods that could be used to execute SQL operations
aim.j2ee.rule.jdbc.methods=prepareCall,prepareStatement,addBatch,execute,executeQuery,executeUpdate

# Add custom method names that are typically used for executing SQL operations
aim.j2ee.rule.jdbc.customMethods=

# If true, check that JDBC methods are called on a JDBC object (may not match complex JDBC calls).
# If false, any call to methods listed in methods/customMethods properties is considered a JDBC call.
aim.j2ee.rule.jdbc.strictCheck=true

# Methods that get Connection object to verify is JDBC call (apply only if aim.j2ee.rule.jdbc.strictCheck=true)
aim.j2ee.rule.jdbc.methodsGetConnection=

# If false, method calls are replaced by SQL placeholders. If true, method calls are ignored.
# Depending on how the SQL is produced in code, set this flag to increase parsing ratio of the extracted SQL code.
aim.j2ee.rule.jdbc.ignoreMethodCalls=true

# If true, intermediate SQL components between java classes and target database entities are created.
# If false (the default), no intermediate SQL components are created, and direct relations between java class
# and target database entities are created.
aim.j2ee.rule.jdbc.createSqlComponents=false
