# Configuration properties for ADO.NET processing.

# If true, processing of ADO.NET API calls in C#/vb.NET classes is performed.
aim.adonet.rule.active=true

# The dialect of embedded SQL in .NET code. Possible values are: ansisql, plsql, transactsql, multi
# ansisql: Use SQL-92 parser
# plsql: Use PL/SQL parser
# transactsql: Use Transact-SQL parser
# multi: Try all options above
aim.adonet.sqltype=${aim.common.database.sqltype}

# If true, code for a dependency is added as property to the generated relation.
aim.adonet.rule.addCodeToRelations=${aim.common.addCodeToRelations}

# The default database system (or database name) to use when the target database entity cannot be resolved.
aim.adonet.dbsystem=${aim.common.database.dbsystem}

# The default database name (or schema) to use when the target database entity cannot be resolved.
aim.adonet.dbname=${aim.common.database.dbname}

# If true, case is ignored, for the names of the database entities found in code
aim.adonet.ignoreCase=${aim.common.ignoreCase}

# If false, method calls are replaced by SQL placeholders. If true, method calls are ignored.
# Depending on how the SQL is produced in code, set this flag to increase parsing ratio of the extracted SQL code.
aim.adonet.rule.ignoreMethodCalls=true

# If true, intermediate SQL components between C#/VB.NET classes and target database entities are created.
# If false (the default), no intermediate SQL components are created, and direct relations between C#/VB.NET class
# and target database entities are created.
aim.adonet.rule.createSqlComponents=false

