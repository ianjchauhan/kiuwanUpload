# Comma-separated list of common metadata we want to exclude from the analysis
aim.common.excludeDirsPatterns=**/.git/**,**/.svn/**,**/.metadata/**

# If true, artefacts file property will be resolved
aim.common.resolveArtifacts=true

# If true, extraction rules could add matching code fragments as property to relations
aim.common.addCodeToRelations=true

# If true, unresolved entities will be added to the model
aim.common.acceptUnresolved=true

# The default software name to use when rules cannot infer software name from code or configuration artefacts
aim.common.software=${project}

# The model source dir
aim.common.srcdir=${src.dir}

# The default database type (e.g. DB2, Oracle...) or database name
aim.common.database.dbsystem=UNKNOWN_DB

# The default database name or database schema
aim.common.database.dbname=UNKNOWN_SCHEMA

# Parser to use for embedded SQL processing. Possible values are: ansisql, plsql, transactsql, multi
# ansisql: Use SQL-92 parser
# plsql: Use PL/SQL parser
# transactsql: Use Transact-SQL parser
# multi: Tries with the given list of parsers
# **NOTE: check each technology SQL types compatibility
aim.common.database.sqltype=multi

# If true, database entities are converted to uppercase; if false, they are left unchanged as they appear in source code
aim.common.ignoreCase=true

# Comma-separated list of database items to ignore. If empty, no database item will be ignored.
aim.common.excludeDatabaseItems=DUAL

#
# THESE PROPERTIES ARE PROJECT-RELATED. aim-project is a new (optional) concept introduced with aimTools.
# These properties they are stored in "projects" directory, so these are maintained to avoid failures in
# case of launching a configuration-based analysis without any aim-project.
#

# software resolvers ids
aim.common.resolvers=aim.common.appresolver.registry

# pipe-separated map for renaming softwares: original1|replacement1|original2|replacement2...
aim.common.resolvers.renameMap=

# if "single app" resolver is activated, this is the used application name / type
aim.common.appresolver.single.softwareName=DEFAULT_APP

# software type: application, module, layer, library, middleware, tool, product, framework, database, other
aim.common.appresolver.single.softwareType=application

# if "filepath" resolver is activated, this is the regular expression
aim.common.appresolver.filepath.regexp=

# Database resolver type, by default is null.
# multidatabase:
# custom: use aim.custom.databaseObjectResolver bean, defined in aim.custom.xml
aim.common.dbresolver.name=

# Comma-separated list of directories where "databaseSchema.xml" will be looked for. If empty, source directories will be used
aim.common.dbresolver.directories=

# Comma-separated list of Ant patters for matching databaseSchema XML descriptors under search directories
aim.common.dbresolver.schema.patterns=databaseSchema.xml

# If metrics rule is active
aim.common.rule.metrics.active=false

# Comma-separated list of directories where the metrics rule find files of metrics (metrics_*.xml)
aim.common.metrics.directories=${CHECKING_DATA}/plugindata/metrics/${project}

# Comma-separated list of names of code metrics to retrieve from metric report into model
aim.common.metrics=pctdoc,loc,lcom,sentences,ccn,publicMethods,cbo,operations,fanout