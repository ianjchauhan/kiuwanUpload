
# Strategy to use for selecting RPG files to process.
# default: use extensions in language info.
# pattern: uses explicit pattern.
aim.rpg.filter=default

# If filter set to pattern, use the following comma-separated patterns.
aim.rpg.filter.pattern=*.rpg,**/*.rpg,*.rpgle,**/*.rpgle

# Containing software for program entities discovered by RPG rule.
# Used as fallback if no global resolver or global resolver cannot find a containing software for the target entity.
aim.rpg.rule.software=${aim.common.software}

# If true, procedures are registered, and calls to procedures are represented in the model.
aim.rpg.rule.registerProcedures=true

# If true, unresolved items (files, called programs) are registered, under the default software
aim.rpg.rule.registerUnresolved=true

# If set to true, usages of datafiles in RPG code will be resolved.
aim.rpg.rule.parseFileDependencies=true

# If set to true, RPG - SQL dependencies will be extracted from EXEC SQL statements.
aim.rpg.rule.parseSqlDependencies=true

# The database type (e.g. DB2, Oracle...) or database name for container of referenced tables.
# Used as fallback if no global database object resolver, or the resolver cannot find the target entity.
aim.rpg.rule.dbsystem=${aim.common.database.dbsystem}

# The database name or database schema for container of referenced tables.
# Used as fallback if no global database object resolver, or the resolver cannot find the target entity.
aim.rpg.rule.dbname=${aim.common.database.dbname}

# If set to true, SQL queries and their relationships with used tables are inserted into the model as explicit entities.
# Ignored if parseSqlDependencies=false
aim.rpg.rule.parseSqlColumns=true

# If set to true, SQL code is added as property into the queries. Ignored if parseSqlColumns=false
aim.rpg.rule.addSqlToModel=${aim.common.addCodeToRelations}

# Extensions to consider for target RPG program/copy resolution.
aim.rpg.resolver.rpg.extensions=rpg,rpgle,dspf,mbr

# Extensions to consider for called cobol programs resolution.
aim.rpg.resolver.cobol.extensions=cob,cbl,cobol,cpy

# Extensions to consider for CL/400 scripts
aim.rpg.resolver.job.extensions=cl,cl400

# If true, rule is active
aim.rpg.rule.active=false