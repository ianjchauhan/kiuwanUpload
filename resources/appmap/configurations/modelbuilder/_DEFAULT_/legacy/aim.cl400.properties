# Configuration properties for legacy/cl400 module.

# Enables processing of CL scripts.
aim.cl400.rule.active=false

# Application/module name for CL/400 scripts
aim.cl400.software.batch=${aim.common.software}

# Application/module name for called programs (not resolved CL/400 scripts)
aim.cl400.software.backend=${aim.common.software}

# Filter to use (default: uses language info extensions; pattern: use patterns in aim.cl400.filter.pattern)
aim.cl400.filter=default

# Comma-separated list of ANT patterns to use when filter set to pattern
aim.cl400.filter.pattern=**/*.cl

# If true, case is ignored for entity names found in CL/400 scripts
aim.cl400.ignoreCase=${aim.common.ignoreCase}

# If true, target called programs not found in model are created (in batch application).
# If false, unresolved calls are ignored.
aim.cl400.acceptUnresolved=${aim.common.acceptUnresolved}

# If true, calls to programs that cannot be found are registered without language / artifact properties
# If false, such calls are ignored
aim.cl400.resolver.progcalls.registerUnresolvedCalls=${aim.common.acceptUnresolved}

# Comma-separated extensions to consider for called files
aim.cl400.resolver.file.extensions=cl

# Extensions to consider for called external programs
aim.cl400.resolver.cobol.extensions=cob,cbl,cobol

# If true, SQL statements passed to DB2 utilities are processed.
# If false, SQL statements in CL/400 code are ignored.
aim.cl400.resolveSqlStatements=true

# If set to true, SQL queries and their relationships with used tables are inserted into the model as explicit entities.
# If false, direct relations between JCL and used tables are presented.
aim.cl400.addQuery=true

# If set to true, SQL code is added as property into the queries. Ignored if addQuery=false
aim.cl400.addSqlCode=true

# The database type (e.g. DB2) or database name for container of referenced tables.
# Used as fallback if no global database object resolver, or the resolver cannot find the target entity.
aim.cl400.dbsystem=${aim.common.database.dbsystem}

# The database name or database schema for container of referenced tables.
# Used as fallback if no global database object resolver, or the resolver cannot find the target entity.
aim.cl400.dbname=${aim.common.database.dbname}
