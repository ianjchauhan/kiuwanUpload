# Configuration properties for Software AG Natural / Adabas technology

# Enable for processing Natural code.
aim.natural.rule.active=false

# Enable for processing Local Data Area descriptors (e.g. NSL files) and process references to Adabas views.
# Often, NSL files are the unique resource available to infer relations between Natural code and Adabas entities.
aim.natural.rule.view.active=false

# Application/module name for Natural code, if no global sofware resolver.
aim.natural.software=${aim.common.software}

# Database system (e.g. Adabas).
aim.natural.dbsystem=${aim.common.database.dbsystem}
# Database name.
aim.natural.dbname=${aim.common.database.dbname}

# If true, case is ignored in entity names found in Natural code items
aim.natural.ignoreCase=${aim.common.ignoreCase}

# If set to true, database operations (e.g. Adabas) will be processed
aim.natural.rule.processDatabaseOperations=true

# Strategy to use for selecting Natural files to process.
# default: Accept Natural files with extensions from natural technology.
# pattern: Process Natural files matching patterns in the patterns property.
aim.natural.filter=default

# If filter ser to pattern, use the following comma-separated patterns
aim.natural.filter.pattern=**/*.nsp,**/*.nsn,**/*.nss,**/*.nsh,**/*.nsc

# Directories under aim.natural.resolver.file.basedir matching aim.natural.resolver.file.patterns
# will be examined for Natural code when resolving program dependencies
aim.natural.resolver.file.basedir=${aim.common.srcdir}

# Comma-separated Ant pattern(s) for matching subdirectories (relative to aim.natural.resolver.file.basedir)
# where program dependencies will be resolved.
aim.natural.resolver.file.patterns=**

# Regular expression for extracting view names from local data area descriptors.
# First capturing group is the alias for the view, second capturing group is the view name.
aim.natural.rule.view.pattern=\\s*\\d+\\s+V\\s\\d+\\s+(\\S+)\\s+(\\S+)\\s*
# Patterns for local data area descriptors.
aim.natural.rule.view.include=*.NSL,**/*.NSL
