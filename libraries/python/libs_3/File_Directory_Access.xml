<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="http://www.optimyth.com/schema/definitions/library_metadata"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         name="File_Directory_Access" technology="python">

  <description url="https://docs.python.org/3/library/filesys.html">File and Directory Access (Python 3)</description>

  <module name="os.path" standard="python3">
    <function name="abspath" signature="abspath(path)" >
      <return type="str" />
      <sink argpos="0" kind="hardcoded_absolute_path" resource="web" />
    </function>
    <function name="basename" signature="basename(path)" >
      <return type="str" />
      <sink argpos="0" kind="hardcoded_absolute_path" resource="web" />
    </function>
    <function name="commonpath" signature="commonpath(paths)" >
      <return type="str" />
      <sink argpos="0" kind="hardcoded_absolute_path" resource="web" />
    </function>
    <function name="commonprefix" signature="commonprefix(list)" >
      <return type="str" />
      <sink argpos="0" kind="hardcoded_absolute_path" resource="web" />
    </function>
    <function name="dirname" signature="dirname(path)" >
      <return type="str" />
      <sink argpos="0" kind="hardcoded_absolute_path" resource="web" />
    </function>
    <function name="exists" signature="exists(path)" >
      <return type="bool" />
      <sink argpos="0" kind="hardcoded_absolute_path" resource="web" />
    </function>
    <function name="lexists" signature="lexists(path)" >
      <return type="bool" />
      <sink argpos="0" kind="hardcoded_absolute_path" resource="web" />
    </function>
    <function name="expanduser" signature="expanduser(path)" >
      <return type="str" />
      <sink argpos="0" kind="hardcoded_absolute_path" resource="web" />
    </function>
    <function name="getatime" signature="getatime(path)" >
      <return type="str" />
      <sink argpos="0" kind="hardcoded_absolute_path" resource="web" />
    </function>
    <function name="getctime" signature="getctime(path)" >
      <return type="float" />
      <sink argpos="0" kind="hardcoded_absolute_path" resource="web" />
    </function>
    <function name="getsize" signature="getsize(path)" >
      <return type="bytes" />
      <sink argpos="0" kind="hardcoded_absolute_path" resource="web" />
    </function>
    <function name="isabs" signature="isabs(path)" >
      <return type="bool" />
      <sink argpos="0" kind="hardcoded_absolute_path" resource="web" />
    </function>
    <function name="isfile" signature="isfile(path)" >
      <return type="bool" />
      <sink argpos="0" kind="hardcoded_absolute_path" resource="web" />
    </function>
    <function name="isdir" signature="isdir(path)" >
      <return type="bool" />
      <sink argpos="0" kind="hardcoded_absolute_path" resource="web" />
    </function>
    <function name="islink" signature="islink(path)" >
      <return type="bool" />
      <sink argpos="0" kind="hardcoded_absolute_path" resource="web" />
    </function>
    <function name="ismount" signature="ismount(path)" >
      <return type="bool" />
      <sink argpos="0" kind="hardcoded_absolute_path" resource="web" />
    </function>
    <function name="join" signature="join(path, *paths)" >
      <return type="str" />
      <propagate from="0,1,2" to="-1" />
      <sink argpos="0, 1" kind="hardcoded_absolute_path" resource="web" />
    </function>
    <function name="normcase" signature="normcase(path)" >
      <return type="str" />
      <propagate from="0" to="-1" />
      <sink argpos="0" kind="hardcoded_absolute_path" resource="web" />
    </function>
    <function name="normpath" signature="normpath(path)" >
      <return type="str" />
      <neutralization argpos="0" kind="path_traversal" resource="filesystem"/>
      <sink argpos="0" kind="hardcoded_absolute_path" resource="web" />
    </function>
    <function name="realpath" signature="realpath(path)" >
      <return type="str" />
      <propagate from="0" to="-1" />
      <sink argpos="0" kind="hardcoded_absolute_path" resource="web" />
    </function>
    <function name="relpath" signature="relpath(path, start=os.curdir)" >
      <return type="str" />
      <propagate from="0" to="-1" />
      <sink argpos="0" kind="hardcoded_absolute_path" resource="web" />
    </function>
    <function name="samefile" signature="samefile(path1, path2)" >
      <return type="bool" />
      <sink argpos="0, 1" kind="hardcoded_absolute_path" resource="web" />
    </function>
    <function name="sameopenfile" signature="sameopenfile(fp1, fp2)" >
      <return type="bool" />
    </function>
    <function name="samestat" signature="samestat(stat1, stat2)" >
      <return type="bool" />
    </function>
    <function name="split" signature="split(path)" >
      <return type="tuple" />
      <sink argpos="0" kind="hardcoded_absolute_path" resource="web" />
    </function>
    <function name="splitdrive" signature="splitdrive(path)" >
      <return type="tuple" />
      <sink argpos="0" kind="hardcoded_absolute_path" resource="web" />
    </function>
    <function name="splitext" signature="splitext(path)" >
      <return type="tuple" />
      <sink argpos="0" kind="hardcoded_absolute_path" resource="web" />
    </function>
    <function name="splitunc" signature="splitunc(path)" >
      <return type="tuple" />
      <sink argpos="0" kind="hardcoded_absolute_path" resource="web" />
    </function>

  </module>


  <module name="pathlib" >
    <class name="PurePath" >
      <constructor name="" signature="PurePath(args...)" >
        <sink argpos="0, 1, 2" kind="hardcoded_absolute_path" resource="web" />
      </constructor>

      <field name="parts" type="tuple" />
      <field name="drive" type="str" />
      <field name="root" type="str" />
      <field name="anchor" type="tuple" />
      <field name="parents" type="pathlib.PurePath" />
      <field name="name" type="str" />
      <field name="suffix" type="str" />
      <field name="suffixes" type="list" />
      <field name="stem" type="str" />

      <method name="as_posix" signature="as_posix()" >
        <return type="str" />
      </method>
      <method name="as_uri" signature="as_uri()" >
        <return type="str" />
      </method>
      <method name="is_absolute" signature="is_absolute()" >
        <return type="bool" />
      </method>
      <method name="joinpath" signature="joinpath(*other)" >
        <return type="pathlib.PurePath" />
      </method>
      <method name="match" signature="match(pattern)" >
        <return type="bool" />
      </method>
      <method name="relative_to" signature="relative_to(*other)" >
        <return type="pathlib.PurePath" />
      </method>
      <method name="with_name" signature="with_name(name)" >
        <return type="pathlib.PurePath" />
      </method>
      <method name="with_suffix" signature="with_suffix(suffix)" >
        <return type="pathlib.PurePath" />
      </method>
    </class>

    <class name="PurePosixPath" supertypes="pathlib.PurePath" />

    <class name="PurePosixPath" supertypes="pathlib.PurePath" />

    <class name="Path" supertypes="pathlib.PurePath" >
      <method name="cwd" signature="cwd()">
        <return type="pathlib.Path" />
      </method>
      <method name="home" signature="home()">
        <return type="pathlib.Path" />
      </method>
      <method name="stat" signature="stat()">
        <return type="int" />
      </method>
      <method name="chmod" signature="chmod(mode)">
        <return type="NoneType" />
      </method>
      <method name="exists" signature="exists()">
        <return type="bool" />
      </method>
      <method name="expanduser" signature="expanduser()">
        <return type="pathlib.Path" />
      </method>
      <method name="glob" signature="glob(pattern)">
        <return type="list" />
      </method>
      <method name="group" signature="group()">
        <return type="str" />
      </method>
      <method name="is_dir" signature="is_dir()">
        <return type="bool" />
      </method>
      <method name="is_file" signature="is_file()">
        <return type="bool" />
      </method>
      <method name="is_symlink" signature="is_symlink()">
        <return type="bool" />
      </method>
      <method name="is_socket" signature="is_socket()">
        <return type="bool" />
      </method>
      <method name="is_fifo" signature="is_fifo()">
        <return type="bool" />
      </method>
      <method name="is_block_device" signature="is_block_device()">
        <return type="bool" />
      </method>
      <method name="is_char_device" signature="is_char_device()">
        <return type="bool" />
      </method>
      <method name="iterdir" signature="iterdir()">
        <return type="generator" />
      </method>
      <method name="lchmod" signature="lchmod(mode)">
        <return type="NoneType" />
      </method>
      <method name="lstat" signature="lstat()">
        <return type="NoneType" />
      </method>
      <method name="mkdir" signature="mkdir(mode=0o777, parents=False, exist_ok=False)">
        <return type="NoneType" />
      </method>
      <method name="open" signature="open(mode='r', buffering=-1, encoding=None, errors=None, newline=None)">
        <return type="NoneType" />
        <sink argpos="0, 1, 2" kind="path_traversal" resource="web" />
      </method>
      <method name="owner" signature="owner()">
        <return type="str" />
      </method>
      <method name="read_text" signature="read_text(encoding=None, errors=None)">
        <return type="str" />
      </method>
      <method name="replace" signature="replace(target)">
        <return type="NoneType" />
      </method>
      <method name="resolve" signature="resolve(strict=False)">
        <return type="pathlib.Path" />
      </method>
      <method name="rglob" signature="rglob(pattern)">
        <return type="list" />
      </method>
      <method name="rmdir" signature="rmdir()">
        <return type="NoneType" />
      </method>
      <method name="samefile" signature="samefile(other_path)">
        <return type="bool" />
      </method>
      <method name="symlink_to" signature="symlink_to(target, target_is_directory=False)">
        <return type="NoneType" />
      </method>
      <method name="touch" signature="touch(mode=0o666, exist_ok=True)">
        <return type="NoneType" />
      </method>
      <method name="unlink" signature="unlink()">
        <return type="NoneType" />
      </method>
      <method name="write_bytes" signature="write_bytes(data)">
        <return type="NoneType" />
      </method>
      <method name="write_text" signature="write_text(data, encoding=None, errors=None)">
        <return type="NoneType" />
      </method>

    </class>

    <class name="PosixPath" supertypes="pathlib.Path" />
    <class name="WindowsPath" supertypes="pathlib.Path" />

  </module>

  <module name="tempfile">
    <function name="TemporaryFile" signature="TemporaryFile(mode='w+b', buffering=None, encoding=None, newline=None, suffix=None, prefix=None, dir=None)">

    </function>
    <function name="NamedTemporaryFile" signature="NamedTemporaryFile(mode='w+b', buffering=None, encoding=None, newline=None, suffix=None, prefix=None, dir=None, delete=True)"/>
    <function name="SpooledTemporaryFile" signature="SpooledTemporaryFile(max_size=0, mode='w+b', buffering=None, encoding=None, newline=None, suffix=None, prefix=None, dir=None)"/>
    <function name="TemporaryDirectory" signature="TemporaryDirectory(suffix=None, prefix=None, dir=None)"/>
    <function name="mkstemp" signature="mkstemp(suffix=None, prefix=None, dir=None, text=False)"/>
    <function name="gettempdir" signature="gettempdir()"/>
    <function name="gettempdirb" signature="gettempdirb()"/>
    <function name="gettempprefix" signature="gettempprefix()"/>
    <function name="gettempprefixb" signature="gettempprefixb()"/>

    <member name="tempdir" type="str" />

  </module>

  <module name="linecache" >
    <function name="getline" signature="getline(filename, lineno, module_globals=None)" >
      <return type="str" />
    </function>
    <function name="clearcache" signature="clearcache()" >
      <return type="NoneType" />
    </function>
    <function name="checkcache" signature="checkcache(filename=None)" >
      <return type="NoneType" />
    </function>
    <function name="lazycache" signature="lazycache(filename, module_globals)" >
      <return type="bool" />
    </function>
  </module>
</library>