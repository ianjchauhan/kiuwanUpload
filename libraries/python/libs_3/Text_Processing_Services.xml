<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="http://www.optimyth.com/schema/definitions/library_metadata"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         name="Text_Processing_Services" technology="python">

  <description url="https://docs.python.org/3/library/text.html">Text Processing Services (Python 3)</description>

  <module name="re" standard="python3">
    <function name="compile" signature="compile(pattern, flags=0)" >
      <return type="re.regex" />
      <sink argpos="0" kind="regex_dos"/>
    </function>
    <function name="search" signature="search(pattern, string, flags=0)" >
      <return type="object" />
      <sink argpos="0" kind="regex_dos"/>
      <!--<neutralization argpos="1" kind="string"/>-->
   </function>
   <function name="match" signature="match(pattern, string, flags=0)" match="name">
     <return type="re.Match" />
     <neutralization argpos="1" kind="string"/>
     <sink argpos="0" kind="regex_dos"/>
   </function>
   <function name="fullmatch" signature="fullmatch(pattern, string, flags=0)" >
     <return type="re.Match" />
     <neutralization argpos="1" kind="string"/>
     <sink argpos="0" kind="regex_dos"/>
   </function>
   <function name="split" signature="split(pattern, string, maxsplit=0, flags=0))" >
     <return type="list" />
     <!--neutralization argpos="1" kind="string"/-->
      <sink argpos="0" kind="regex_dos"/>
    </function>
    <function name="findall" signature="findall(pattern, string, flags=0)" >
      <return type="list" />
      <!--<neutralization argpos="1" kind="string"/>-->
     <sink argpos="0" kind="regex_dos"/>
   </function>
   <function name="finditer" signature="finditer(pattern, string, flags=0)" >
     <return type="" />
     <!--<neutralization argpos="1" kind="string"/>-->
    <sink argpos="0" kind="regex_dos"/>
  </function>
  <function name="sub" signature="sub(pattern, repl, string, count=0, flags=0)" >
    <return type="str" />
    <sink argpos="0" kind="regex_dos"/>
    <neutralization argpos="-1" kind="string"/>
  </function>
  <function name="subn" signature="subn(pattern, repl, string, count=0, flags=0)" >
    <return type="tuple" />
    <sink argpos="0" kind="regex_dos"/>
    <neutralization argpos="-1" kind="string"/>
  </function>
  <function name="escape" signature="escape(string)" >
    <return type="NoneType" />
  </function>
  <function name="purge" signature="purge()" >
    <return type="NoneType" />
  </function>

  <class name="regex" >
    <function name="search" signature="search(string[, pos[, endpos]])" >
      <return type="re.match" />
      <neutralization argpos="0" kind="string"/>
    </function>
    <function name="match" signature="match(string[, pos[, endpos]])" >
      <return type="re.Match" />
      <neutralization argpos="0" kind="string"/>
    </function>
    <function name="fullmatch" signature="fullmatch(string[, pos[, endpos]])" >
      <return type="re.Match" />
      <neutralization argpos="0" kind="string"/>
    </function>
    <function name="split" signature="split(string, maxsplit=0)" >
      <return type="re.list" />
      <neutralization argpos="0" kind="string"/>
    </function>
    <function name="findall" signature="findall(string[, pos[, endpos]])" >
      <return type="list" />
      <neutralization argpos="0" kind="string"/>
    </function>
    <function name="finditer" signature="finditer(string[, pos[, endpos]])" >
      <return type="" />
      <neutralization argpos="0" kind="string"/>
    </function>
    <function name="sub" signature="sub(repl, string, count=0)" >
      <return type="str" />
      <neutralization argpos="1" kind="string"/>
    </function>
    <function name="subn" signature="subn(repl, string, count=0)" >
      <return type="tuple" />
      <neutralization argpos="1" kind="string"/>
    </function>

    <field name="flags" type="int" />
    <field name="groups" type="int" />
    <field name="groupindex" type="dict" />
    <field name="pattern" type="str" />
  </class>

  <member name="A" type="RegexFlag" />
  <member name="error" type="Exception" />
  <member name="ASCII" type="RegexFlag" />
  <member name="DEBUG" type="RegexFlag" />
  <member name="I" type="RegexFlag" />
  <member name="IGNORECASE" type="RegexFlag" />
  <member name="L" type="RegexFlag" />
  <member name="LOCALE" type="RegexFlag" />
  <member name="M" type="RegexFlag" />
  <member name="MULTILINE" type="RegexFlag" />
  <member name="S" type="RegexFlag" />
  <member name="DOTALL" type="RegexFlag" />
  <member name="VERBOSE" type="RegexFlag" />

  <class name="Match" supertypes="" >
    <function name="expand" signature="match.expand(template)" >
      <return type="str" />
    </function>
    <function name="group" signature="group([group1, ...])" >
      <return type="object" />
    </function>
    <function name="__getitem__" signature="__getitem__(g)" >
      <return type="object" />
    </function>
    <function name="groups" signature="groups(default=None)" >
      <return type="tuple" />
    </function>
    <function name="groupdict" signature="groupdict(default=None)" >
      <return type="dict" />
    </function>
    <function name="start" signature="start([group])" >
      <return type="int" />
    </function>
    <function name="end" signature="end([group])" >
      <return type="int" />
    </function>
    <function name="span" signature="span([group])" >
      <return type="tuple" />
    </function>

    <field name="pos" type="int" />
    <field name="endpos" type="int" />
    <field name="lastindex" type="int" />
    <field name="lastgroup" type="object" />
    <field name="re" type="re.regex" />
    <field name="string" type="str" />

  </class>
</module>

  <module name="StringIO" standard="python3">
    <class name="StringIO" >
      <constructor name="StringIO" signature="StringIO([buffer])" >
        <propagate from="0" to="-1,-2" />
      </constructor>
      <method name="getvalue" signature="getvalue()" >
        <return type="File" />
        <propagate from="-2" to="-1" />
      </method>
      <method name="close" signature="close()" >
        <return type="NoneType" />
      </method>
    </class>

    <class name="cStringIO" supertypes="StringIO.StringIO" >
      <constructor name="cStringIO" signature="cStringIO([buffer])" >
        <propagate from="0" to="-1,-2" />
      </constructor>
    </class>
  </module>
</library>