<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="http://www.optimyth.com/schema/definitions/library_metadata"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         name="System.IO" technology="csharp">

  <description url="https://docs.microsoft.com/es-es/dotnet/api/system.io?view=netframework-4.8">
    Read/Write to files and data streams
  </description>

  <class name="System.IO.IsolatedStorage.IsolatedStorageException" supertypes="System.Exception"/>
  <class name="System.IO.Log.SequenceFullException" supertypes="System.Exception"/>

  <class name="System.IO.DirectoryInfo">
    <description>Exposes instance methods for creating, moving, and enumerating through directories and subdirectories.</description>
    <constructor name="DirectoryInfo" signature="DirectoryInfo(string)">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </constructor>
    <method name="CreateSubdirectory" signature="CreateSubdirectory(string)">
      <return type="System.IO.DirectoryInfo"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="CreateSubdirectory" signature="CreateSubdirectory(string,System.IO.DirectorySecurity)">
      <return type="System.IO.DirectoryInfo"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="EnumerateDirectories" signature="EnumerateDirectories(void)">
      <return type="System.Collections.Generic.IEnumerable"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="EnumerateDirectories" signature="EnumerateDirectories(string)">
      <return type="System.Collections.Generic.IEnumerable"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="EnumerateDirectories" signature="EnumerateDirectories(string,System.IO.SearchOption)">
      <return type="System.Collections.Generic.IEnumerable"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="EnumerateFiles" signature="EnumerateFiles(void)">
      <return type="System.Collections.Generic.IEnumerable"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="EnumerateFiles" signature="EnumerateFiles(string)">
      <return type="System.Collections.Generic.IEnumerable"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="EnumerateFiles" signature="EnumerateFiles(string,System.IO.SearchOption)">
      <return type="System.Collections.Generic.IEnumerable"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="EnumerateFileSystemInfos" signature="EnumerateFileSystemInfos(void)">
      <return type="System.Collections.Generic.IEnumerable"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="EnumerateFileSystemInfos" signature="EnumerateFileSystemInfos(string)">
      <return type="System.Collections.Generic.IEnumerable"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="EnumerateFileSystemInfos" signature="EnumerateFileSystemInfos(string,System.IO.SearchOption)">
      <return type="System.Collections.Generic.IEnumerable"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="GetDirectories" signature="GetDirectories(void)">
      <return type="array"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="GetDirectories" signature="GetDirectories(string)">
      <return type="array"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="GetDirectories" signature="GetDirectories(string,System.IO.SearchOption)">
      <return type="array"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="GetFiles" signature="GetFiles(void)">
      <return type="array"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="GetFiles" signature="GetFiles(string)">
      <return type="array"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="GetFiles" signature="GetFiles(string,System.IO.SearchOption)">
      <return type="array"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="GetFileSystemInfos" signature="GetFileSystemInfos(void)">
      <return type="array"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="GetFileSystemInfos" signature="GetFileSystemInfos(string)">
      <return type="array"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="GetFileSystemInfos" signature="GetFileSystemInfos(string,System.IO.SearchOption)">
      <return type="array"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
  </class>

  <class name="System.IO.Directory">
    <description>Exposes static methods for creating, moving, and enumerating through directories and subdirectories.</description>
    <method name="CreateDirectory" signature="CreateDirectory(string)">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="CreateDirectory" signature="CreateDirectory(string,DirectorySecurity)">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="Delete" signature="Delete(string)">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="Delete" signature="Delete(string,Boolean)">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="EnumerateDirectories" signature="EnumerateDirectories(void)">
      <return type="System.Collections.Generic.IEnumerable"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="EnumerateDirectories" signature="EnumerateDirectories(string)">
      <return type="System.Collections.Generic.IEnumerable"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="EnumerateDirectories" signature="EnumerateDirectories(string,System.IO.SearchOption)">
      <return type="System.Collections.Generic.IEnumerable"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="EnumerateFiles" signature="EnumerateFiles(void)">
      <return type="System.Collections.Generic.IEnumerable"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="EnumerateFiles" signature="EnumerateFiles(string)">
      <return type="System.Collections.Generic.IEnumerable"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="EnumerateFiles" signature="EnumerateFiles(string,System.IO.SearchOption)">
      <return type="System.Collections.Generic.IEnumerable"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="EnumerateFileSystemInfos" signature="EnumerateFileSystemInfos(void)">
      <return type="System.Collections.Generic.IEnumerable"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="EnumerateFileSystemInfos" signature="EnumerateFileSystemInfos(string)">
      <return type="System.Collections.Generic.IEnumerable"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="EnumerateFileSystemInfos" signature="EnumerateFileSystemInfos(string,System.IO.SearchOption)">
      <return type="System.Collections.Generic.IEnumerable"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="GetDirectories" signature="GetDirectories(void)">
      <return type="array"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="GetDirectories" signature="GetDirectories(string)">
      <return type="array"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="GetDirectories" signature="GetDirectories(string,System.IO.SearchOption)">
      <return type="array"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="GetFiles" signature="GetFiles(void)">
      <return type="array"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="GetFiles" signature="GetFiles(string)">
      <return type="array"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="GetFiles" signature="GetFiles(string,System.IO.SearchOption)">
      <return type="array"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="GetFileSystemInfos" signature="GetFileSystemInfos(void)">
      <return type="array"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="GetFileSystemInfos" signature="GetFileSystemInfos(string)">
      <return type="array"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="GetFileSystemInfos" signature="GetFileSystemInfos(string,System.IO.SearchOption)">
      <return type="array"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="Move" signature="Move(string,string)">
      <sink argpos="0,1" kind="path_traversal" resource="filesystem"/>
    </method>
  </class>

  <class name="System.IO.File">
    <description>Provides static methods for the creation, copying, deletion, moving, and opening of files, and aids in the creation of FileStream objects.</description>
    <method name="AppendAllLines" signature="AppendAllLines(string,System.Collections.Generic.IEnumerable)" instance="false">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="AppendAllLines" signature="AppendAllLines(string,System.Collections.Generic.IEnumerable,System.Text.Encoding)" instance="false">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="AppendAllText" signature="AppendAllText(string,string)" instance="false">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="AppendAllText" signature="AppendAllText(string,string,System.Text.Encoding)" instance="false">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="AppendText" signature="AppendText(string)" instance="false">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="Copy" signature="Copy(string,string)" instance="false">
      <sink argpos="0,1" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="Copy" signature="Copy(string,string,Boolean)" instance="false">
      <sink argpos="0,1" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="Create" signature="Create(string)" match="name" instance="false">
      <return type="System.IO.FileStream"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="CreateText" signature="CreateText(string)" instance="false">
      <return type="System.IO.StreamWriter"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="Encrypt" signature="Encrypt(string)" instance="false">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="Decrypt" signature="Decrypt(string)" instance="false">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="Delete" signature="Delete(string)" instance="false">
      <tags>file_delete</tags>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="Exists" signature="Exists(string)" instance="false">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="GetAccessControl" signature="GetAccessControl(string)" instance="false">
      <return type="System.Security.AccessControl.FileSecurity"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="GetAccessControl" signature="GetAccessControl(string,System.Security.AccessControl.AccessControlSections)" instance="false">
      <return type="System.Security.AccessControl.FileSecurity"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="GetAttributes" signature="GetAttributes(string)" instance="false">
      <return type="System.IO.FileAttributes"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
      <source kind="system_information" resource="filesystem" argpos="-1"/>
    </method>
    <method name="Move" signature="Move(string,string)" instance="false">
      <sink argpos="0,1" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="Open" signature="Open(string,System.IO.FileMode)" instance="false">
      <return type="System.IO.FileStream"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="Open" signature="Open(string,System.IO.FileMode,System.IO.FileAccess)" instance="false">
      <return type="System.IO.FileStream"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="Open" signature="Open(string,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" instance="false">
      <return type="System.IO.FileStream"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="OpenRead" signature="OpenRead(string)" instance="false">
      <return type="System.IO.FileStream"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="OpenText" signature="OpenText(string)" instance="false">
      <return type="System.IO.StreamReader"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="OpenWrite" signature="OpenWrite(string)" instance="false">
      <return type="System.IO.FileStream"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="ReadAllBytes" signature="ReadAllBytes(string)" instance="false">
      <return type="array"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
      <source kind="system_information" resource="other" argpos="-1"/>
    </method>
    <method name="ReadAllLines" signature="ReadAllLines(string)" instance="false">
      <return type="array"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
      <source kind="system_information" resource="other" argpos="-1"/>
    </method>
    <method name="ReadAllLines" signature="ReadAllLines(string,System.Text.Encoding)" instance="false">
      <return type="array"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
      <source kind="system_information" resource="other" argpos="-1"/>
    </method>
    <method name="ReadAllText" signature="ReadAllText(string)" instance="false">
      <return type="string"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
      <source kind="system_information" resource="other" argpos="-1"/>
    </method>
    <method name="ReadAllText" signature="ReadAllText(string,System.Text.Encoding)" instance="false">
      <return type="string"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
      <source kind="system_information" resource="other" argpos="-1"/>
    </method>
    <method name="ReadLines" signature="ReadLines(string)" instance="false">
      <return type="System.Collections.Generic.IEnumerable"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
      <source kind="system_information" resource="other" argpos="-1"/>
    </method>
    <method name="ReadLines" signature="ReadLines(string,System.Text.Encoding)" instance="false">
      <return type="System.Collections.Generic.IEnumerable"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
      <source kind="system_information" resource="other" argpos="-1"/>
    </method>
    <method name="Replace" signature="Replace(string,string,string)" match="name">
      <sink argpos="0,1,2" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="SetAccessControl" signature="SetAccessControl(string,System.Security.AccessControl.FileSecurity)" instance="false">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="SetAttributes" signature="SetAttributes(string,System.IO.FileAttributes)" instance="false">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="SetCreationTime" signature="SetCreationTime(string, System.DateTime)" match="name" instance="false"
            alias="setCreationTimeUtc,SetLastAccessTime,SetLastAccessTimeUtc">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="WriteAllBytes" signature="WriteAllBytes(string,Byte[])" instance="false">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="WriteAllLines" signature="WriteAllLines(string,System.Collections.Generic.IEnumerable)" instance="false">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="WriteAllLines" signature="WriteAllLines(string,System.Collections.Generic.IEnumerable,System.Text.Encoding)" instance="false">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="WriteAllLines" signature="WriteAllLines(string,string[],System.Text.Encoding)" instance="false">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="WriteAllText" signature="WriteAllText(string,string)" instance="false">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="WriteAllText" signature="WriteAllText(string,string,System.Text.Encoding)" instance="false">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
  </class>

  <class name="System.IO.FileInfo">
    <description>Provides properties and instance methods for the creation, copying, deletion, moving, and opening of files, and aids in the creation of FileStream objects.</description>
    <constructor name="FileInfo" signature="FileInfo(string)">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </constructor>
    <method name="Open" signature="Open(string,System.IO.FileMode)">
      <return type="System.IO.FileStream"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="Open" signature="Open(string,System.IO.FileMode,System.IO.FileAccess)">
      <return type="System.IO.FileStream"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="Open" signature="Open(string,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <return type="System.IO.FileStream"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="OpenRead" signature="OpenRead(string)">
      <return type="System.IO.FileStream"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="OpenText" signature="OpenText(string)">
      <return type="System.IO.StreamReader"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="OpenWrite" signature="OpenWrite(string)">
      <return type="System.IO.FileStream"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </method>
  </class>

  <class name="System.IO.TextWriter" kind="abstract_class">
    <description>Represents a writer that can write a sequential series of characters.</description>
    <tags>stream_leak,disposable</tags>
    <field name="Null" type="System.IO.TextWriter" instance="false"/>
    <method name="Close" signature="Close()">
      <neutralization argpos="-2" kind="stream_leak"/>
    </method>
    <method name="Write" signature="Write(object)">
    </method>
    <method name="Write" signature="Write(string,object)">
    </method>
    <method name="Write" signature="Write(string,object,object)">
    </method>
    <method name="Write" signature="Write(string,object,object,object)">
    </method>
    <method name="WriteAsync" signature="WriteAsync(object)" match="name">
    </method>
    <method name="WriteLine" signature="WriteLine(object)">
    </method>
    <method name="WriteLine" signature="WriteLine(string,object)">
    </method>
    <method name="WriteLine" signature="WriteLine(string,object,object)">
    </method>
    <method name="WriteLine" signature="WriteLine(string,object,object,object)">
    </method>
    <method name="WriteLineAsync" signature="WriteLineAsync(object)" match="name">
    </method>
  </class>

  <class name="System.CodeDom.Compiler.IndentedTextWriter" supertypes="System.IO.TextWriter">
    <description>Provides a text writer that can indent new lines by a tab string token.</description>
    <tags>stream_leak,disposable</tags>
  </class>
  
  <class name="System.IO.TextReader" kind="abstract_class">
    <description>Represents a reader that can read a sequential series of characters.</description>
    <tags>stream_leak,disposable</tags>
    <field name="Null" type="System.IO.TextReader" instance="false"/>
    <method name="Read" signature="Read(char[],int,int)" alias="ReadAsync,ReadBlock,ReadBlockAsync" match="name">
      <tags>retval-needs-check</tags>
      <return type="int"/>
    </method>
    <method name="ReadLine" signature="ReadLine()" alias="ReadLineAsync,ReadToEnd,ReadToEndAsync">
      <return type="string"/>
      <propagate from="-2" to="-1"/>
    </method>
    <method name="Synchronized" signature="Synchronized(System.IO.TextReader)" instance="false">
      <return type="System.IO.TextReader"/>
    </method>
    <method name="Close" signature="Close()">
      <neutralization argpos="-2" kind="stream_leak"/>
    </method>
  </class>

  <class name="System.IO.BinaryReader">
    <tags>stream_leak,disposable</tags>
    <method name="Read" signature="Read(char[],int,int)" alias="ReadAsync,ReadBlock,ReadBlockAsync">
      <tags>retval-needs-check</tags>
      <return type="int"/>
    </method>
    <method name="Close" signature="Close(void)">
      <neutralization argpos="-2" kind="stream_leak"/>
    </method>
  </class>

  <class name="System.IO.Stream" kind="abstract_class">
    <description>Provides a generic view of a sequence of bytes.</description>
    <tags>stream_leak,disposable</tags>
    <method name="BeginWrite" signature="BeginWrite(Byte[],Int32,Int32,System.AsyncCallback,object)">
    </method>
    <method name="Close" signature="Close()">
      <neutralization argpos="-2" kind="stream_leak"/>
    </method>
    <method name="CopyTo" signature="CopyTo(System.IO.Stream)">
      <propagate from="-1" to="0"/>
    </method>
    <method name="CopyTo" signature="CopyTo(System.IO.Stream,Int32)">
      <propagate from="-1" to="0"/>
    </method>
    <method name="CopyToAsync" signature="CopyToAsync(System.IO.Stream)">
      <propagate from="-1" to="0"/>
    </method>
    <method name="CopyToAsync" signature="CopyToAsync(System.IO.Stream,Int32)">
      <propagate from="-1" to="0"/>
    </method>
    <method name="CopyToAsync" signature="CopyToAsync(System.IO.Stream,Int32,System.Threading)">
      <propagate from="-1" to="0"/>
    </method>
    <method name="Synchronized" signature="Synchronized(System.IO.Stream)">
      <return type="System.IO.Stream"/>
      <propagate from="-2" to="-1"/>
    </method>
    <method name="Read" signature="Read(byte[],int,int)">
      <tags>retval-needs-check</tags>
      <return type="int"/>
    </method>
    <method name="Write" signature="Write(Byte[],Int32,Int32)">
    </method>
    <method name="WriteAsync" signature="Write(Byte[],Int32,Int32)">
    </method>
    <method name="WriteAsync" signature="Write(Byte[],Int32,Int32,System.Threading.CancellationToken)">
    </method>
    <method name="WriteByte" signature="Write(byte)">
    </method>
  </class>

  <class name="System.IO.FileStream" supertypes="System.IO.Stream">
    <description>Exposes a Stream around a file, supporting both synchronous and asynchronous read and write operations.</description>
    <tags>stream_leak,disposable</tags>
    <constructor name="FileStream" signature="FileStream(string,System.IO.FileMode)">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </constructor>
    <constructor name="FileStream" signature="FileStream(string,System.IO.FileMode,System.IO.FileAccess)">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </constructor>
    <constructor name="FileStream" signature="FileStream(string,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </constructor>
    <constructor name="FileStream" signature="FileStream(string,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,Int32)">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </constructor>
    <constructor name="FileStream" signature="FileStream(string,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,Int32,System.IO.FileOptions)">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </constructor>
    <constructor name="FileStream" signature="FileStream(string,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </constructor>
  </class>

  <class name="System.IO.Path">
    <method name="Combine" signature="Combine(string)" match="name">
      <tags>patharg:*</tags>
      <return type="string"/>
      <propagate from="0,1" to="-1"/>
    </method>
    <method name="GetDirectoryName" signature="GetDirectoryName(string)">
      <tags>patharg:0</tags>
      <return type="string"/>
      <propagate from="0" to="-1"/><!-- does NOT neutralize path traversal -->
    </method>
    <method name="GetFileName" signature="GetFileName(string)" alias="GetFileNameWithoutExtension">
      <tags>patharg:0</tags>
      <return type="string"/>
      <propagate from="0" to="-1"/>
      <!-- Getting filename makes return value to neutralize path traversal -->
      <neutralization argpos="-1" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="GetExtension" signature="GetExtension(string)">
      <return type="string"/>
      <propagate from="0" to="-1"/>
      <!-- Getting extension makes return value to neutralize path traversal -->
      <neutralization argpos="-1" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="GetFullPath" signature="GetFullPath(string)">
      <tags>patharg:0</tags>
      <return type="string"/>
      <propagate from="0" to="-1"/><!-- does NOT neutralize path traversal -->
    </method>
    <method name="GetPathRoot" signature="GetPathRoot(string)">
      <return type="string"/>
      <propagate from="0" to="-1"/>
      <!-- Getting pathroot makes return value to neutralize path traversal -->
      <neutralization argpos="-1" kind="path_traversal" resource="filesystem"/>
    </method>
    <method name="GetTempFileName" signature="GetTempFileName()">
      <tags>tempfile</tags>
      <return type="string"/>
      <sink argpos="-1" kind="temporary_file_left" resource="filesystem"/>
    </method>
    <method name="GetTempPath" signature="GetTempPath()">
      <tags>tempdir</tags>
      <return type="string"/>
    </method>
    <method name="GetRandomFileName" signature="GetRandomFileName()">
      <tags>tempfile,tempdir</tags>
    </method>
    <method name="GetInvalidPathChars" signature="GetInvalidPathChars()" >
      <return type="array" />
    </method>
  </class>

  <class name="System.IO.StreamReader" supertypes="System.IO.TextReader">
    <tags>stream_leak,disposable</tags>
    <constructor name="StreamReader" signature="StreamReader(System.IO.Stream)">
      <propagate from="0" to="-1"/>
    </constructor>
    <constructor name="StreamReader" signature="StreamReader(System.IO.Stream,Boolean)">
      <propagate from="0" to="-1"/>
    </constructor>
    <constructor name="StreamReader" signature="StreamReader(System.IO.Stream,System.Text.Encoding)">
      <propagate from="0" to="-1"/>
    </constructor>
    <constructor name="StreamReader" signature="StreamReader(System.IO.Stream,System.Text.Encoding,Boolean)">
      <propagate from="0" to="-1"/>
    </constructor>
    <constructor name="StreamReader" signature="StreamReader(System.IO.Stream,System.Text.Encoding,Boolean,Int32)">
      <propagate from="0" to="-1"/>
    </constructor>
    <constructor name="StreamReader" signature="StreamReader(System.IO.Stream,System.Text.Encoding,Boolean,Int32,Boolean)">
      <propagate from="0" to="-1"/>
    </constructor>
    <constructor name="StreamReader" signature="StreamReader(string)">
      <propagate from="0" to="-1"/>
    </constructor>
    <constructor name="StreamReader" signature="StreamReader(string,Boolean)">
      <propagate from="0" to="-1"/>
    </constructor>
    <constructor name="StreamReader" signature="StreamReader(string,System.Text.Encoding)">
      <propagate from="0" to="-1"/>
    </constructor>
    <constructor name="StreamReader" signature="StreamReader(string,System.Text.Encoding,Boolean)">
      <propagate from="0" to="-1"/>
    </constructor>
    <constructor name="StreamReader" signature="StreamReader(string,System.Text.Encoding,Boolean,Int32)">
      <propagate from="0" to="-1"/>
    </constructor>
    <field name="BaseStream" type="System.IO.Stream"/>
    <field name="Null" type="System.IO.StreamReader" instance="false"/>
    <field name="EndOfStream" type="System.IO.StreamReader" instance="false">
      <tags>potential_infinite_loop_neutralizer</tags>
    </field>
  </class>

  <class name="System.IO.StreamWriter" supertypes="System.IO.TextWriter">
    <tags>write_operation,stream_leak,disposable</tags>
    <constructor name="StreamWriter" signature="StreamWriter(System.IO.Stream)">
      <propagate from="0" to="-1"/>
    </constructor>
    <constructor name="StreamWriter" signature="StreamWriter(System.IO.Stream,Boolean)">
      <propagate from="0" to="-1"/>
    </constructor>
    <constructor name="StreamWriter" signature="StreamWriter(System.IO.Stream,System.Text.Encoding)">
      <propagate from="0" to="-1"/>
    </constructor>
    <constructor name="StreamWriter" signature="StreamWriter(System.IO.Stream,System.Text.Encoding,Boolean)">
      <propagate from="0" to="-1"/>
    </constructor>
    <constructor name="StreamWriter" signature="StreamWriter(System.IO.Stream,System.Text.Encoding,Boolean,Int32)">
      <propagate from="0" to="-1"/>
    </constructor>
    <constructor name="StreamWriter" signature="StreamWriter(string)">
      <propagate from="0" to="-1"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </constructor>
    <constructor name="StreamWriter" signature="StreamWriter(string,Boolean)">
      <propagate from="0" to="-1"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </constructor>
    <constructor name="StreamWriter" signature="StreamWriter(string,System.Text.Encoding)">
      <propagate from="0" to="-1"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </constructor>
    <constructor name="StreamWriter" signature="StreamWriter(string,System.Text.Encoding,Boolean)">
      <propagate from="0" to="-1"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </constructor>
    <constructor name="StreamWriter" signature="StreamWriter(string,System.Text.Encoding,Boolean,Int32)">
      <propagate from="0" to="-1"/>
      <sink argpos="0" kind="path_traversal" resource="filesystem"/>
    </constructor>
  </class>

  <class name="Microsoft.JScript.COMCharStream" supertypes="System.IO.Stream">
    <tags>stream_leak,disposable</tags>
  </class>

  <class name="System.IO.BufferedStream" supertypes="System.IO.Stream">
    <tags>stream_leak,disposable</tags>
  </class>

  <class name="System.IO.Compression.DeflateStream" supertypes="System.IO.Stream">
    <tags>stream_leak,disposable</tags>
  </class>

  <class name="System.IO.Compression.GZipStream" supertypes="System.IO.Stream">
    <tags>stream_leak,disposable</tags>
  </class>

  <class name="System.IO.MemoryStream" supertypes="System.IO.Stream">
    <!-- Strictly, MemoryStream should be closed but in practice not doing it is harmless
         and the resource leak rule shows lots of "false" positives  -->
    <!--  <tags>stream_leak,disposable</tags> -->
  </class>

  <class name="System.IO.Pipes.PipeStream" supertypes="System.IO.Stream">
    <tags>stream_leak,disposable</tags>
  </class>

  <class name="System.IO.UnmanagedMemoryStream" supertypes="System.IO.Stream">
    <tags>stream_leak,disposable</tags>
  </class>

  <class name="System.Printing.PrintQueueStream" supertypes="System.IO.Stream">
    <tags>stream_leak,disposable</tags>
  </class>

</library>