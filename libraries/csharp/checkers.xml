<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="http://www.optimyth.com/schema/definitions/library_metadata"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         name="checkers" standard="checkers" technology="csharp">

  <description>C# 9.0</description>

  <checkerDef id="code_injection_deserialization" kind="method" class="com.optimyth.csharp.checkers.CodeInjectionDeserializationChecker" lang="csharp">
    <description>Checks configurations vulnerable to code injection during deserialization</description>
    <alternate lang="vbnet" class="com.optimyth.vbnet.checkers.VbnetCodeInjectionDeserializationChecker"/>
  </checkerDef>

  <checkerDef id="no_string_literal" kind="method" class="com.optimyth.csharp.checkers.NotLiteralForXssChecker" lang="csharp">
    <description>Checks that sink sites for XSS are not trivial string literals</description>
    <alternate lang="vbnet" class="com.optimyth.vbnet.checkers.VbnetNotLiteralForXssChecker"/>
  </checkerDef>

  <checkerDef id="array.deref" kind="site" class="com.optimyth.csharp.tainting.checker.ArrayDerefTaintingSiteChecker" lang="csharp">
    <description>For discriminating when a default property indexer is used, for example with Request["field"]</description>
    <alternate lang="vbnet" class="com.optimyth.vbnet.checkers.VbnetArrayDerefTaintingSiteChecker"/>
  </checkerDef>

  <!--
  <checkerDef id="property.matcher" kind="site" class="com.optimyth.csharp.tainting.checker.ConstantArgTaintingSiteChecker" lang="csharp">
  </checkerDef>
  -->

</library>