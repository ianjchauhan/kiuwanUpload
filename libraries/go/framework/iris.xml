<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="http://www.optimyth.com/schema/definitions/library_metadata"
         technology="go" name="iris" standard="Iris">

  <description url="https://iris-go.com/">Web framework</description>

  <module name="github.com.kataras.iris">
    <class name="github.com.kataras.iris.Application" kind="struct" supertypes="github.com.kataras.iris.Handler">
      <method name="Run" signature="Run(github.com.kataras.iris.Runner,github.com.kataras.iris.Configurator)" >
        <return type="go.error" />
        <sink argpos="-2" kind="server_insecure_transport" resource="network" />
      </method>
    </class>
    <class name="github.com.kataras.iris.Handler" supertypes="github.com.kataras.iris.context.Handler" />
    <class name="github.com.kataras.iris.context.Handler" >
      <method name="Handle" signature="Handle(go.string,go.string,github.com.valyala.fasthttp.RequestHandler)">
        <tags>route:2,routeMethod:0</tags>
      </method>
    </class>
    <class name="github.com.kataras.iris.v12.context.Context" kind="struct" >
      <method name="ResponseWriter" signature="ResponseWriter()" >
        <return type="github.com.kataras.iris.v12.context.ResponseWriter" />
      </method>
      <method name="Request" signature="Request()" >
        <return type="net.http.Request" />
      </method>
      <method name="Params" signature="Params()" >
        <return type="github.com.kataras.iris.context.RequestParams" />
      </method>
      <method name="GetHeader" signature="GetHeader()" >
        <return type="go.string" />
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
      <method name="RemoteAddr" signature="RemoteAddr()" >
        <return type="go.string" />
        <source argpos="-1" kind="sensitive_info" resource="web" />
      </method>
      <method name="Header" signature="Header(go.string,go.string)" >
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
      <method name="Redirect" signature="Redirect(go.string,...go.int)" >
        <sink argpos="0" kind="open_redirect" resource="web" />
        <sink kind="execution_after_redirect" argpos="0" resource="web"/>
      </method>
      <method name="URLParamDefault" signature="URLParamDefault(go.string,go.string)" >
        <return type="go.string" />
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
      <method name="URLParam" signature="URLParam(go.string)" alias="URLParamTrim" >
        <return type="go.string,go.error" />
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
      <method name="URLParamEscape" signature="URLParamEscape(go.string)" >
        <return type="go.string" />
      </method>
      <method name="URLParamInt" signature="URLParamInt(go.string)" alias="URLParamInt64" >
        <return type="go.int,go.error" />
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
      <method name="URLParamDefaultInt" signature="URLParamDefaultInt(go.string,go.int)" alias="URLParamInt32Default,URLParamInt64Default" >
        <return type="go.int" />
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
      <method name="URLParamFloat64" signature="URLParamFloat64(go.string)" >
        <return type="go.float64,go.error" />
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
      <method name="URLParamFloat64Default" signature="URLParamFloat64Default(go.string,go.int)" >
        <return type="go.int" />
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
      <method name="URLParamBool" signature="URLParamBool(go.string)" >
        <return type="go.bool,go.error" />
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
      <method name="URLParams" signature="URLParams()" >
        <return type="go.map" />
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
      <method name="FormValueDefault" signature="FormValueDefault(go.string,go.string)" >
        <return type="go.string" />
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
      <method name="FormValue" signature="FormValue(go.string)" >
        <return type="go.string" />
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
      <method name="FormValues" signature="FormValues()" >
        <return type="go.map" />
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
      <method name="PostValueDefault" signature="PostValueDefault(go.string,go.string)" >
        <return type="go.string" />
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
      <method name="PostValue" signature="PostValue(go.string)" alias="PostValueTrim" >
        <return type="go.string,go.error" />
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
      <method name="PostValueInt" signature="PostValueInt(go.string)" alias="PostValueInt64" >
        <return type="go.int,go.error" />
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
      <method name="PostValueDefaultInt" signature="PostValueDefaultInt(go.string,go.int)" alias="PostValueInt32Default,PostValueInt64Default" >
        <return type="go.int" />
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
      <method name="PostValueFloat64" signature="PostValueFloat64(go.string)" >
        <return type="go.float64,go.error" />
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
      <method name="PostValueFloat64Default" signature="PostValueFloat64Default(go.string,go.int)" >
        <return type="go.int" />
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
      <method name="PostValueBool" signature="PostValueBool(go.string)" >
        <return type="go.bool,go.error" />
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
      <method name="PostValues" signature="PostValues(go.string)" >
        <return type="go.slice" />
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
      <method name="FormFile" signature="FormFile(go.string)" >
        <return type="multipart.File,multipart.FileHeader,go.error" />
        <sink argpos="0" kind="path_traversal" resource="filesystem" />
      </method>
      <method name="UploadFormFiles" signature="UploadFormFiles(go.string,...go.func)" >
        <return type="go.int64,go.error" />
        <sink argpos="0" kind="path_traversal" resource="filesystem" />
      </method>
      <method name="GetBody" signature="GetBody)" >
        <return type="go.slice" elementType="go.byte" />
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
      <method name="ReadForm" signature="ReadForm(go.interface)" >
        <return type="go.error" />
        <source argpos="0" kind="user_input" resource="web" />
      </method>
      <method name="ReadQuery" signature="ReadQuery(go.interface)" >
        <return type="go.error" />
        <source argpos="0" kind="user_input" resource="web" />
      </method>
      <method name="ReadJSON" signature="ReadJSON(go.interface)" >
        <return type="go.error" />
        <source argpos="0" kind="user_input" resource="web" />
      </method>
      <method name="ReadXML" signature="ReadXML(go.interface)" >
        <return type="go.error" />
        <source argpos="0" kind="user_input" resource="web" />
      </method>
      <method name="ReadYAML" signature="ReadYAML(go.interface)" >
        <return type="go.error" />
        <source argpos="0" kind="user_input" resource="web" />
      </method>
      <method name="JSON" signature="JSON(go.interface,github.com.kataras.iris.context.JSON)" >
        <tags>serialization:0</tags>
      </method>
    </class>
    <class name="github.com.kataras.iris.context.Context" supertypes="github.com.kataras.iris.v12.context.Context" />

    <function name="github.com.kataras.iris.context.WriteJSON" signature="github.com.kataras.iris.context.WriteJSON(io.Writer, go.interface, github.com.kataras.iris.context.JSON,...go.bool)" >
      <tags>serialization:1</tags>
    </function>

    <function name="github.com.kataras.iris.context.NewContext" signature="github.com.kataras.iris.context.NewContext()" >
      <return type="github.com.kataras.iris.context.Context" />
    </function>
    <function name="github.com.kataras.iris.context.CookieDecode" signature="github.com.kataras.iris.context.CookieDecode(github.com.kataras.iris.context.CookieDecoder)" >
      <return type="github.com.kataras.iris.context.CookieOption" />
    </function>
    <function name="github.com.kataras.iris.context.CookieEncode" signature="github.com.kataras.iris.context.CookieEncode(github.com.kataras.iris.context.CookieEncoder)" >
      <return type="github.com.kataras.iris.context.CookieOption" />
    </function>
    <function name="github.com.kataras.iris.context.CookieExpires" signature="github.com.kataras.iris.context.CookieExpires(time.Duration)" >
      <tags>cookie.persistent</tags>
      <return type="github.com.kataras.iris.context.CookieOption" />
    </function>
    <function name="github.com.kataras.iris.context.CookieHTTPOnly" signature="github.com.kataras.iris.context.CookieHTTPOnly(go.bool)" >
      <tags>cookie.httpOnly</tags>
      <return type="github.com.kataras.iris.context.CookieOption" />
    </function>
    <function name="github.com.kataras.iris.context.CookiePath" signature="github.com.kataras.iris.context.CookiePath(go.string)" >
      <tags>cookie.path</tags>
      <return type="github.com.kataras.iris.context.CookieOption" />
    </function>

    <function name="github.com.kataras.iris.New" signature="github.com.kataras.iris.New()" >
      <return type="github.com.kataras.iris.Application" />
    </function>
    <function name="github.com.kataras.iris.Default" signature="github.com.kataras.iris.Default()" >
      <return type="github.com.kataras.iris.Application" />
    </function>

    <function name="github.com.kataras.iris.AutoTLS" signature="github.com.kataras.iris.AutoTLS(go.string,go.string,go.string,github.com.kataras.iris.v12.core.host.Configurator)" >
      <return type="github.com.kataras.iris.Runner" />
      <sink argpos="0,1,2" kind="resource_injection" resource="network" />
      <neutralization argpos="-1" kind="server_insecure_transport" resource="network" />
    </function>
    <function name="github.com.kataras.iris.TLS" signature="github.com.kataras.iris.LS(go.string,go.string,go.string,github.com.kataras.iris.v12.core.host.Configurator)" >
      <return type="github.com.kataras.iris.Runner" />
      <sink argpos="0,1,2" kind="resource_injection" resource="network" />
      <neutralization argpos="-1" kind="server_insecure_transport" resource="network" />
    </function>
  </module>

  <module name="github.com.kataras.iris.core" >
    <function name="github.com.kataras.iris.core.netutil.Client" signature="github.com.kataras.iris.core.netutil.Client(time.Duration)" >
      <return type="net.http.Client" />
      <sink argpos="0" kind="resource_injection" resource="network" />
    </function>
    <function name="github.com.kataras.iris.core.netutil.Unix" signature="github.com.kataras.iris.core.netutil.Unix(go.string,os.FileMode)" >
      <return type="net.http.Listener,go.error" />
      <sink argpos="0" kind="path_traversal" resource="network" />
      <sink argpos="-2" kind="server_insecure_transport" resource="network" />
    </function>
    <function name="github.com.kataras.iris.core.netutil.TLS" signature="github.com.kataras.iris.core.netutil.TLS(go.string,go.string,go.string)" >
      <return type="net.http.Listener,go.error" />
      <sink argpos="0" kind="resource_injection" resource="network" />
      <sink argpos="1,2" kind="path_traversal" resource="network" />
    </function>
    <function name="github.com.kataras.iris.core.netutil.TCPKeepAlive" signature="github.com.kataras.iris.core.netutil.TCPKeepAlive(go.string)" >
      <return type="net.http.Listener,go.error" />
      <sink argpos="0" kind="resource_injection" resource="network" />
      <sink argpos="-2" kind="server_insecure_transport" resource="network" />
    </function>
    <function name="github.com.kataras.iris.core.netutil.TCP" signature="github.com.kataras.iris.core.netutil.TCP(go.string)" >
      <return type="net.http.Listener,go.error" />
      <sink argpos="0" kind="resource_injection" resource="network" />
      <sink argpos="-2" kind="server_insecure_transport" resource="network" />
    </function>
  </module>

  <module name="github.com.iris-contrib.middleware.csrf" standard="iris-contrib.middleware.csrf">
    <description url="https://pkg.go.dev/github.com/iris-contrib/middleware/csrf" >Iris middleware for CSRF Protection</description>

    <function name="github.com.iris-contrib.middleware.csrf.Protect" signature="github.com.iris-contrib.middleware.csrf.Protect(go.slice)" >
      <tags>csrfFilter</tags>
    </function>
  </module>
</library>