<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="http://www.optimyth.com/schema/definitions/library_metadata"
         technology="go" name="regexp">

  <module name="regexp" >
    <description url="https://pkg.go.dev/regexp">Regular expression</description>

    <function name="regexp.Match" signature="regexp.Match(go.string,go.slice)" >
      <return type="go.bool,go.error" />
      <neutralization argpos="0" kind="string" />
      <sink argpos="0" kind="regex_dos" />
    </function>
    <function name="regexp.MatchReader" signature="regexp.MatchReader(go.string,io.RuneReader)" >
      <return type="go.bool,go.error" />
      <neutralization argpos="0" kind="string" />
      <sink argpos="0" kind="regex_dos" />
    </function>
    <function name="regexp.MatchString" signature="regexp.MatchString(go.string,go.string)" >
      <return type="go.bool,go.error" />
      <neutralization argpos="0" kind="string" />
      <sink argpos="0" kind="regex_dos" />
    </function>
    <function name="regexp.Compile" signature="regexp.Compile(go.string)" alias="regexp.CompilePOSIX" >
      <return type="regexp.Regexp,go.error" />
      <sink argpos="0" kind="regex_dos" />
    </function>
    <function name="regexp.MustCompile" signature="regexp.MustCompile(go.string)" alias="regexp.MustCompilePOSIX" >
      <return type="regexp.Regexp" />
      <sink argpos="0" kind="regex_dos" />
    </function>

    <class name="regexp.Regexp" kind="struct" >
      <method name="Match" signature="Match(go.slice)" >
        <return type="go.bool" />
        <neutralization argpos="0" kind="string" />
      </method>
      <method name="MatchReader" signature="MatchReader(io.RuneReader)" >
        <return type="go.bool" />
        <neutralization argpos="0" kind="string" />
      </method>
      <method name="MatchString" signature="MatchString(go.string)" >
        <return type="go.bool" />
        <neutralization argpos="0" kind="string" />
      </method>
      <method name="ReplaceAll" signature="ReplaceAll(go.slice,go.slice)"
              alias="ReplaceAllFunc,ReplaceAllLiteral,ReplaceAllLiteralString,ReplaceAllString,ReplaceAllStringFunc">
        <return type="go.slice" elementType="go.byte" />
        <neutralization argpos="-1" kind="string" />
      </method>
    </class>
  </module>
</library>