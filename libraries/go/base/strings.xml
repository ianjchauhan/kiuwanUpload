<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="http://www.optimyth.com/schema/definitions/library_metadata"
         technology="go" name="strings">


  <module name="strings">
    <description url="https://pkg.go.dev/strings">Functions to manipulate UTF-8 encoded strings</description>

    <function name="strings.Compare" signature="strings.Compare(go.string, go.string)" >
      <return type="go.int" />
    </function>
    <function name="strings.Contains" signature="strings.Contains(go.string, go.string)" >
      <return type="go.bool" />
      <neutralization argpos="0" kind="string" />
    </function>

    <function name="strings.LastIndex" signature="strings.LastIndex(go.string, go.string)" >
      <return type="go.int" />
      <neutralization argpos="-2" kind="path_traversal"/>
    </function>

    <class name="strings.Builder" kind="struct" supertypes="io.StringWriter,io.ByteWriter">
      <method name="Cap" signature="Cap()">
        <return type="go.int" />
      </method>
      <method name="Grow" signature="Grow()">
        <return type="go.int" />
      </method>
      <method name="Len" signature="Len()">
        <return type="go.int" />
      </method>
      <method name="Reset" signature="Reset()" />
      <method name="String" signature="String">
        <return type="go.string" />
      </method>
      <method name="WriteRune" signature="WriteRune(go.rune)">
        <return type="go.int,go.error" />
      </method>
      <method name="WriteString" signature="WriteString(go.string)">
        <return type="go.int,go.error" />
      </method>
    </class>

    <class name="strings.Reader" kind="struct" supertypes="io.Reader,io.ReaderAt,io.Seeker,io.WriterTo,io.ByteScanner,io.RuneScanner" >
      <method name="NewReader" signature="NewReader(go.string)">
        <return type="*go.Reader" />
      </method>
      <method name="Len" signature="Len()">
        <return type="go.int" />
      </method>
      <method name="Size" signature="Size()" >
        <return type="go.int64" />
      </method>
    </class>

    <class name="strings.Replacer" kind="struct" supertypes="io.StringWriter" >
      <method name="NewReplacer" signature="NewReplacer(...go.string)">
        <return type="*strings.Replacer" />
      </method>
      <method name="Replace" signature="Replace(go.string)">
        <return type="go.string" />
      </method>
    </class>

    <function name="strings.ReplaceAll" signature="strings.ReplaceAll(go.string,go.string,go.string)" >
      <return type="go.string" />
      <neutralization argpos="-1" kind="string" />
    </function>
  </module>
</library>