<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="http://www.optimyth.com/schema/definitions/library_metadata"
         technology="go" name="time">


  <module name="time" >
    <description url="https://pkg.go.dev/time">Provides functionality for measuring and displaying time</description>

    <globalObject name="time.Nanosecond" type="go.int64" >
      <tags>duration:1</tags>
    </globalObject>
    <globalObject name="time.Microsecond" type="go.int64" >
      <tags>duration:1000</tags>
    </globalObject>
    <globalObject name="time.Millisecond" type="go.int64" >
      <tags>duration:1000000</tags>
    </globalObject>
    <globalObject name="time.Second" type="go.int64" >
      <tags>duration:1000000000</tags>
    </globalObject>
    <globalObject name="time.Minute" type="go.int64" >
      <tags>duration:60000000000</tags>
    </globalObject>
    <globalObject name="time.Hour" type="go.int64" >
      <tags>duration:3600000000000</tags>
    </globalObject>

    <function name="time.Now" signature="time.Now()" >
      <return type="time.Time" />
    </function>
    <function name="time.Sleep" signature="time.Sleep(time.Duration)" >
      <sink argpos="0" kind="command_injection" resource="os" />
    </function>
    <function name="time.After" signature="time.After(time.Duration)" >
      <sink argpos="0" kind="command_injection" resource="os" />
    </function>
    <function name="time.Duration" signature="time.Duration(time.Duration)" >
      <return type="time.Time" />
    </function>

    <class name="time.Time" kind="struct" >
      <method name="Add" signature="Add(time.Duration)" >
        <return type="time.Time" />
      </method>
      <method name="AddDate" signature="AddDate(go.int,go.int,go.int)" >
        <return type="time.Time" />
      </method>
      <method name="After" signature="After(time.Time)" >
        <return type="go.bool" />
      </method>
      <method name="Before" signature="Before(time.Duration)" >
        <return type="time.bool" />
      </method>
      <method name="Add" signature="Add(time.Duration)" >
        <return type="time.Time" />
      </method>
      <method name="Duration" signature="Duration(time.Duration)" >
        <return type="time.Time" />
      </method>
    </class>
  </module>
</library>