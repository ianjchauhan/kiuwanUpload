<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="http://www.optimyth.com/schema/definitions/library_metadata"
         technology="go" name="go_builtin" >

  <module name="builtin" >
    <description url="https://golang.org/pkg/builtin/">Go predeclared identifiers</description>

    <class name="go.bool" />
    <class name="go.int" />
    <class name="go.int8" />
    <class name="go.int16" />
    <class name="go.int32" />
    <class name="go.int64" />
    <class name="go.uint" />
    <class name="go.uint8" />
    <class name="go.uint16" />
    <class name="go.uint32" />
    <class name="go.uint64" />
    <class name="go.uintptr" />
    <class name="go.float32" />
    <class name="go.float64" />
    <class name="go.complex128" />
    <class name="go.string" />
    <class name="go.rune" />

    <class name="go.slice" />
    <class name="go.map" />
    <class name="go.chan" />

    <class name="go.FloatType" supertypes="go.float32" />
    <class name="go.IntegerType" supertypes="go.int" />
    <class name="go.Type" supertypes="go.int" />
    <class name="go.Type1" supertypes="go.int" />
    <class name="go.byte" supertypes="go.uint8" />

    <class name="go.error" kind="interface" >
      <function name="Error" signature="Error()" >
        <return type="go.string" />
      </function>
    </class>

    <function name="append" signature="append(go.slice, ...go.Type)" >
      <return type="slice" elementType="go.Type" />
    </function>
    <function name="cap" signature="cap(go.Type)" >
      <return type="go.int" />
    </function>
    <function name="close" signature="close(go.Type)" />
    <function name="complex" signature="complex(go.FloatType, go.FloatType)" >
      <return type="go.ComplexType" />
    </function>
    <function name="copy" signature="copy(go.slice, go.slice)" >
      <return type="go.int" />
    </function>
    <function name="delete" signature="delete(go.map, go.Type)" />
    <function name="imag" signature="imag(go.ComplexType)" >
      <return type="go.FloatType" />
    </function>
    <function name="len" signature="len(go.Type)" >
      <return type="go.int" />
    </function>
    <function name="make" signature="make(go.Type, ...go.IntegerType)" >
      <return type="go.Type" />
    </function>
    <function name="new" signature="new(go.Type)" >
      <return type="*go.Type" />
    </function>
    <function name="panic" signature="panic(go.interface)" />
    <function name="print" signature="print(...go.Type)" >
      <tags>write</tags>
      <sink argpos="0" kind="log_forging" resource="other" />
    </function>
    <function name="println" signature="println(...go.Type)" >
      <tags>write</tags>
      <sink argpos="0" kind="log_forging" resource="other" />
    </function>
    <function name="real" signature="real(go.ComplexType)" >
      <return type="go.FloatType" />
    </function>
    <function name="recover" signature="recover(go.interface)" />
  </module>
</library>