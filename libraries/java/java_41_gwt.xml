<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="http://www.optimyth.com/schema/definitions/library_metadata"
         name="google.gwt" standard="Google_GWT" technology="java">

  <description url="http://www.gwtproject.org/javadoc/latest/overview-summary.html">Toolkit for browser-based applications</description>

  <module name="com.google.gwt.core.client" >
    <class name="com.google.gwt.core.client.RunAsyncCallback" kind="interface" >
      <method name="onFailure" signature="onFailure(java.lang.Throwable)" />
      <method name="onSuccess" signature="onSuccess(java.lang.Object)" >
        <source kind="external_input" argpos="0" resource="web" />
      </method>
    </class>
    <class name="com.google.gwt.sample.showcase.client.ContentWidget.Callback" >
      <method name="onError" signature="onError()" />
      <method name="onSuccess" signature="onSuccess(java.lang.Object)" >
        <source kind="external_input" argpos="0" resource="web" />
      </method>
    </class>
    <class name="com.google.gwt.core.client.AsyncProvider" >
      <method name="get" signature="get(com.google.gwt.core.client.Callback)" >
      </method>
    </class>
    <class name="com.google.gwt.core.client.JsonUtils" >
      <method name="stringify" signature="stringify(com.google.gwt.core.client.JavaScriptObject)" >
        <return type="java.lang.String" />
      </method>
      <method name="stringify" signature="stringify(com.google.gwt.core.client.JavaScriptObject,java.lang.String)" >
        <return type="java.lang.String" />
      </method>
      <method name="escapeJsonForEval" signature="escapeJsonForEval(java.lang.String)" >
        <return type="java.lang.String" />
        <neutralization argpos="-1" kind="code_injection" resource="other" />
      </method>
      <method name="escapeValue" signature="escapeValue(java.lang.String)" >
        <return type="java.lang.String" />
      </method>
      <method name="safeEval" signature="safeEval(java.lang.String)" >
        <return type="java.lang.Object" />
      </method>
      <method name="safeToEval" signature="safeToEval(java.lang.String)" >
        <return type="boolean" />
      </method>
      <method name="unsafeEval" signature="unsafeEval(java.lang.String)" >
        <return type="java.lang.Object" />
        <sink  argpos="0" kind="code_injection" resource="other" />
      </method>
      <method name="throwIllegalArgumentException" signature="throwIllegalArgumentException(java.lang.String,java.lang.String)" />
    </class>
  </module>

  <module name="com.google.gwt.core.server" >
    <class name="com.google.gwt.core.server.GwtServletBase" supertypes="javax.servlet.http.HttpServlet" >
      <method name="getCookie" signature="getCookie(javax.servlet.http.HttpServletRequest,java.lang.String)" >
        <tags>CWE:784</tags>
        <return type="java.lang.String" />
        <source argpos="-1" kind="user_input" resource="web"/>
      </method>
      <method name="getGwtLocale" signature="getGwtLocale(javax.servlet.http.HttpServletRequest)" >
        <return type="java.lang.String" />
      </method>
      <method name="service" signature="service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)" />
      <method name="setGwtProperties" signature="setGwtProperties(javax.servlet.http.HttpServletRequest)" />
    </class>
    <class name="com.google.gwt.core.server.ServerGwtBridge" supertypes="com.google.gwt.core.shared.GWTBridge" >
      <constructor name="ServerGwtBridge" signature="ServerGwtBridge()" >
      </constructor>
      <method name="getInstance" signature="getInstance()" >
        <return type="com.google.gwt.core.server.ServerGwtBridge" />
      </method>
      <method name="getLocale" signature="getLocale(com.google.gwt.core.server.ServerGwtBridge.Properties)" >
        <return type="com.google.gwt.i18n.shared.GwtLocale" />
      </method>
      <method name="getProperty" signature="getProperty(java.lang.String)" >
        <return type="java.lang.String" />
      </method>
    </class>
  </module>

  <module name="com.google.gwt.core.shared" >
    <class name="com.google.gwt.core.shared.GWT" >
      <method name="create" signature="create(java.lang.Class)" >
        <return type="java.lang.Object" />
      </method>
      <method name="createImpl" signature="createImpl(java.lang.Class)" >
        <return type="java.lang.Object" />
      </method>
      <method name="getUniqueThreadId" signature="getUniqueThreadId()" >
        <return type="java.lang.String" />
      </method>
      <method name="getVersion" signature="getVersion()" >
        <return type="java.lang.String" />
      </method>
      <method name="isClient" signature="isClient()" >
        <return type="boolean" />
      </method>
      <method name="isProdMode" signature="isProdMode()" >
        <return type="boolean" />
      </method>
      <method name="isScript" signature="isScript()" >
        <return type="boolean" />
      </method>
      <method name="log" signature="log(java.lang.String)" >
        <sink kind="log_forging" argpos="0" resource="other" />
      </method>
      <method name="log" signature="log(java.lang.String,java.lang.Throwable)" >
        <sink kind="log_forging" argpos="0" resource="other" />
      </method>
    </class>
    <class name="com.google.gwt.core.shared.GWTBridge" >
      <method name="create" signature="create(java.lang.Class)" >
        <return type="java.lang.Object" />
      </method>
      <method name="getThreadUniqueID" signature="getThreadUniqueID()" >
        <return type="java.lang.String" />
      </method>
      <method name="getVersion" signature="getVersion()" >
        <return type="java.lang.String" />
      </method>
      <method name="isClient" signature="isClient()" >
        <return type="boolean" />
      </method>
      <method name="log" signature="log(java.lang.String,java.lang.Throwable)" >
        <sink kind="log_forging" argpos="0" resource="other" />
      </method>
    </class>
  </module>

  <module name="com.google.gwt.dom" >
  </module>

  <module name="com.google.gwt.jsonp.client" >
    <class name="com.google.gwt.jsonp.client.JsonpRequest" >
      <method name="cancel" signature="cancel()" />
      <method name="getCallback" signature="getCallback()" >
        <return type="com.google.gwt.user.client.rpc.AsyncCallback" />
      </method>
      <method name="getTimeout" signature="getTimeout()" >
        <return type="int" />
      </method>
      <method name="getCallbackId" signature="getCallbackId()" >
        <return type="java.lang.String" />
      </method>
      <method name="send" signature="send(java.lang.String)" >
        <sink kind="ssrf" argpos="0" resource="web" />
        <sink kind="insecure_transport" argpos="0" resource="web" />
      </method>
    </class>
    <class name="com.google.gwt.jsonp.client.JsonpRequestBuilder" >
      <method name="getCallbackParam" signature="getCallbackParam()" >
        <return type="java.lang.String" />
      </method>
      <method name="getFailureCallbackParam" signature="getFailureCallbackParam()" >
        <return type="java.lang.String" />
      </method>
      <method name="getTimeout" signature="getTimeout()" >
        <return type="int" />
      </method>
      <method name="requestBoolean" signature="requestBoolean(java.lang.String,com.google.gwt.user.client.rpc.AsyncCallback)" >
        <return type="com.google.gwt.jsonp.client.JsonpRequest" />
      </method>
      <method name="requestDouble" signature="requestDouble(java.lang.String,com.google.gwt.user.client.rpc.AsyncCallback)" >
        <return type="com.google.gwt.jsonp.client.JsonpRequest" />
      </method>
      <method name="requestInteger" signature="requestInteger(java.lang.String,com.google.gwt.user.client.rpc.AsyncCallback)" >
        <return type="com.google.gwt.jsonp.client.JsonpRequest" />
      </method>
      <method name="requestObject" signature="requestObject(java.lang.String,com.google.gwt.user.client.rpc.AsyncCallback)" >
        <return type="com.google.gwt.jsonp.client.JsonpRequest" />
      </method>
      <method name="requestString" signature="requestString(java.lang.String,com.google.gwt.user.client.rpc.AsyncCallback)" >
        <return type="com.google.gwt.jsonp.client.JsonpRequest" />
      </method>
      <method name="send" signature="send(java.lang.String)" >
        <sink kind="ssrf" argpos="0" resource="web" />
        <sink kind="insecure_transport" argpos="0" resource="web" />
      </method>
      <method name="send" signature="send(java.lang.String,com.google.gwt.user.client.rpc.AsyncCallback)" >
        <return type="com.google.gwt.jsonp.client.JsonpRequest" />
        <sink kind="ssrf" argpos="0" resource="web" />
        <sink kind="insecure_transport" argpos="0" resource="web" />
      </method>
      <method name="setCallbackParam" signature="setCallbackParam(java.lang.String)" />
      <method name="setFailureCallbackParam" signature="setFailureCallbackParam(java.lang.String)" />
      <method name="setPredeterminedId" signature="setPredeterminedId(java.lang.String)" />
      <method name="setTimeout" signature="setTimeout(int)" />
    </class>
  </module>

  <module name="com.google.gwt.safehtml.shared" >
    <class name="com.google.gwt.safehtml.shared.SimpleHtmlSanitizer" supertypes="com.google.gwt.safehtml.shared.HtmlSanitizer,java.lang.Object" >
      <method name="getInstance" signature="getInstance()" >
        <return type="com.google.gwt.safehtml.shared.SimpleHtmlSanitizer" />
      </method>
      <method name="sanitizeHtml" signature="sanitizeHtml(java.lang.String)" >
        <return type="com.google.gwt.safehtml.shared.SafeHtml" />
        <neutralization argpos="-1" kind="xss" resource="web" />
      </method>
    </class>
  </module>

  <module name="com.google.gwt.text.shared" >
    <class name="com.google.gwt.text.shared.AbstractRenderer" supertypes="com.google.gwt.text.shared.Renderer,java.lang.Object" >
      <method name="render" signature="render(com.google.gwt.text.shared.T,java.lang.Appendable)" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
    </class>
  </module>

  <module name="com.google.gwt.user.server" >
    <class name="com.google.gwt.user.server.Base64Utils" >
      <method name="fromBase64" signature="fromBase64(java.lang.String)" >
        <tags>deneutralization:encoding</tags>
        <return type="byte[]" />
      </method>
      <method name="longFromBase64" signature="longFromBase64(java.lang.String)" >
        <tags>deneutralization:encoding</tags>
        <return type="long" />
      </method>
      <method name="toBase64" signature="toBase64(byte[])" >
        <return type="java.lang.String" />
        <neutralization argpos="0" kind="encoding" resource="other"/>
      </method>
      <method name="toBase64" signature="toBase64(long)" >
        <return type="java.lang.String" />
        <neutralization argpos="0" kind="encoding" resource="other"/>
      </method>
    </class>
    <class name="com.google.gwt.user.server.Util" >
      <method name="getClassAnnotation" signature="getClassAnnotation(java.lang.Class,java.lang.Class)" >
        <return type="java.lang.Object" />
      </method>
      <method name="getCookie" signature="getCookie(javax.servlet.http.HttpServletRequest,java.lang.String,boolean)" >
        <return type="javax.servlet.http.Cookie" />
      </method>
      <method name="isMethodXsrfProtected" signature="isMethodXsrfProtected(java.lang.reflect.Method,java.lang.Class,java.lang.Class,java.lang.Class)" >
        <return type="boolean" />
      </method>
    </class>
  </module>

  <module name="com.google.gwt.user.server.rpc" >
    <class name="com.google.gwt.user.server.rpc.SerializationPolicyClient.Logger" >
      <method name="logInfo" signature="logInfo(java.lang.String)" >
        <sink kind="log_forging" argpos="0" resource="other" />
      </method>
      <method name="logError" signature="logError(java.lang.String,java.lang.Throwable)" >
        <sink kind="log_forging" argpos="0" resource="other" />
      </method>
    </class>
    <class name="com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet" supertypes="javax.servlet.http.HttpServlet" >
      <method name="doPost" signature="doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)" />
      <method name="doUnexpectedFailure" signature="doUnexpectedFailure(java.lang.Throwable)" />
      <method name="getPermutationStrongName" signature="getPermutationStrongName()" >
        <return type="java.lang.String" />
      </method>
      <method name="getThreadLocalRequest" signature="getThreadLocalRequest()" >
        <return type="javax.servlet.http.HttpServletRequest" />
      </method>
      <method name="getThreadLocalResponse" signature="getThreadLocalResponse()" >
        <return type="javax.servlet.http.HttpServletResponse" />
      </method>
      <method name="onAfterRequestDeserialized" signature="onAfterRequestDeserialized(com.google.gwt.user.server.rpc.RPCRequest)" />
      <method name="processPost" signature="processPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)" />
      <method name="readContent" signature="readContent(javax.servlet.http.HttpServletRequest)" >
        <return type="java.lang.String" />
      </method>
    </class>
    <class name="com.google.gwt.user.server.rpc.AbstractXsrfProtectedServiceServlet" supertypes="com.google.gwt.user.server.rpc.RemoteServiceServlet" >
      <method name="onAfterRequestDeserialized" signature="onAfterRequestDeserialized(com.google.gwt.user.server.rpc.RPCRequest)" />
      <method name="shouldValidateXsrfToken" signature="shouldValidateXsrfToken(java.lang.reflect.Method)" >
        <return type="boolean" />
      </method>
      <method name="validateXsrfToken" signature="validateXsrfToken(com.google.gwt.user.client.rpc.RpcToken,java.lang.reflect.Method)" />
    </class>
    <class name="com.google.gwt.user.server.rpc.RemoteServiceServlet" supertypes="com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet,com.google.gwt.user.server.rpc.SerializationPolicyProvider" >
      <method name="loadSerializationPolicy" signature="loadSerializationPolicy(javax.servlet.http.HttpServlet,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)" >
        <return type="com.google.gwt.user.server.rpc.SerializationPolicy" />
      </method>
      <method name="getRequestModuleBasePath" signature="getRequestModuleBasePath()" >
        <return type="java.lang.String" />
      </method>
      <method name="getSerializationPolicy" signature="getSerializationPolicy(java.lang.String,java.lang.String)" >
        <return type="com.google.gwt.user.server.rpc.SerializationPolicy" />
      </method>
      <method name="processCall" signature="processCall(java.lang.String)" >
        <return type="java.lang.String" />
      </method>
      <method name="processCall" signature="processCall(com.google.gwt.user.server.rpc.RPCRequest)" >
        <return type="java.lang.String" />
      </method>
      <method name="doGetSerializationPolicy" signature="doGetSerializationPolicy(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)" >
        <return type="com.google.gwt.user.server.rpc.SerializationPolicy" />
      </method>
      <method name="getCodeServerPolicyUrl" signature="getCodeServerPolicyUrl(java.lang.String)" >
        <return type="java.lang.String" />
      </method>
      <method name="loadPolicyFromCodeServer" signature="loadPolicyFromCodeServer(java.lang.String)" >
        <return type="com.google.gwt.user.server.rpc.SerializationPolicy" />
      </method>
      <method name="shouldCompressResponse" signature="shouldCompressResponse(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)" >
        <return type="boolean" />
      </method>
    </class>
    <class name="com.google.gwt.user.server.rpc.RPC" >
      <method name="decodeRequest" signature="decodeRequest(java.lang.String)" >
        <return type="com.google.gwt.user.server.rpc.RPCRequest" />
      </method>
      <method name="decodeRequest" signature="decodeRequest(java.lang.String,java.lang.Class)" >
        <return type="com.google.gwt.user.server.rpc.RPCRequest" />
      </method>
      <method name="decodeRequest" signature="decodeRequest(java.lang.String,java.lang.Class,com.google.gwt.user.server.rpc.SerializationPolicyProvider)" >
        <return type="com.google.gwt.user.server.rpc.RPCRequest" />
      </method>
      <method name="encodeResponseForFailedRequest" signature="encodeResponseForFailedRequest(com.google.gwt.user.server.rpc.RPCRequest,java.lang.Throwable)" >
        <return type="java.lang.String" />
      </method>
      <method name="encodeResponseForFailure" signature="encodeResponseForFailure(java.lang.reflect.Method,java.lang.Throwable)" >
        <return type="java.lang.String" />
      </method>
      <method name="encodeResponseForFailure" signature="encodeResponseForFailure(java.lang.reflect.Method,java.lang.Throwable,com.google.gwt.user.server.rpc.SerializationPolicy)" >
        <return type="java.lang.String" />
      </method>
      <method name="encodeResponseForFailure" signature="encodeResponseForFailure(java.lang.reflect.Method,java.lang.Throwable,com.google.gwt.user.server.rpc.SerializationPolicy,int)" >
        <return type="java.lang.String" />
      </method>
      <method name="encodeResponseForSuccess" signature="encodeResponseForSuccess(java.lang.reflect.Method,java.lang.Object)" >
        <return type="java.lang.String" />
      </method>
      <method name="encodeResponseForSuccess" signature="encodeResponseForSuccess(java.lang.reflect.Method,java.lang.Object,com.google.gwt.user.server.rpc.SerializationPolicy)" >
        <return type="java.lang.String" />
      </method>
      <method name="encodeResponseForSuccess" signature="encodeResponseForSuccess(java.lang.reflect.Method,java.lang.Object,com.google.gwt.user.server.rpc.SerializationPolicy,int)" >
        <return type="java.lang.String" />
      </method>
      <method name="getDefaultSerializationPolicy" signature="getDefaultSerializationPolicy()" >
        <return type="com.google.gwt.user.server.rpc.SerializationPolicy" />
      </method>
      <method name="invokeAndEncodeResponse" signature="invokeAndEncodeResponse(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" >
        <return type="java.lang.String" />
      </method>
      <method name="invokeAndEncodeResponse" signature="invokeAndEncodeResponse(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],com.google.gwt.user.server.rpc.SerializationPolicy)" >
        <return type="java.lang.String" />
      </method>
      <method name="invokeAndEncodeResponse" signature="invokeAndEncodeResponse(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],com.google.gwt.user.server.rpc.SerializationPolicy,int)" >
        <return type="java.lang.String" />
      </method>
    </class>
    <class name="com.google.gwt.user.server.rpc.RPCRequest" >
      <method name="getFlags" signature="getFlags()" >
        <return type="int" />
      </method>
      <method name="getMethod" signature="getMethod()" >
        <return type="java.lang.reflect.Method" />
      </method>
      <method name="getParameters" signature="getParameters()" >
        <return type="java.lang.Object[]" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getRpcToken" signature="getRpcToken()" >
        <return type="com.google.gwt.user.client.rpc.RpcToken" />
      </method>
      <method name="getSerializationPolicy" signature="getSerializationPolicy()" >
        <return type="com.google.gwt.user.server.rpc.SerializationPolicy" />
      </method>
    </class>
    <class name="com.google.gwt.user.server.rpc.RPCServletUtils" >
      <method name="acceptsGzipEncoding" signature="acceptsGzipEncoding(javax.servlet.http.HttpServletRequest)" >
        <return type="boolean" />
      </method>
      <method name="exceedsUncompressedContentLengthLimit" signature="exceedsUncompressedContentLengthLimit(java.lang.String)" >
        <return type="boolean" />
      </method>
      <method name="getCharset" signature="getCharset(java.lang.String)" >
        <return type="java.nio.charset.Charset" />
      </method>
      <method name="isExpectedException" signature="isExpectedException(java.lang.reflect.Method,java.lang.Throwable)" >
        <return type="boolean" />
      </method>
      <method name="readContent" signature="readContent(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="readContentAsGwtRpc" signature="readContentAsGwtRpc(javax.servlet.http.HttpServletRequest)" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="readContentAsUtf8" signature="readContentAsUtf8(javax.servlet.http.HttpServletRequest)" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="readContentAsUtf8" signature="readContentAsUtf8(javax.servlet.http.HttpServletRequest,boolean)" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="shouldGzipResponseContent" signature="shouldGzipResponseContent(javax.servlet.http.HttpServletRequest,java.lang.String)" >
        <return type="boolean" />
      </method>
      <method name="writeResponse" signature="writeResponse(javax.servlet.ServletContext,javax.servlet.http.HttpServletResponse,java.lang.String,boolean)" >
        <sink kind="xss" argpos="2" resource="web" />
      </method>
      <method name="writeResponseForUnexpectedFailure" signature="writeResponseForUnexpectedFailure(javax.servlet.ServletContext,javax.servlet.http.HttpServletResponse,java.lang.Throwable)" >
        <sink kind="xss" argpos="2" resource="web" />
      </method>
    </class>
    <class name="com.google.gwt.user.server.rpc.XsrfProtectedServiceServlet" supertypes="com.google.gwt.user.server.rpc.AbstractXsrfProtectedServiceServlet" />
    <class name="com.google.gwt.user.server.rpc.XsrfTokenServiceServlet" supertypes="com.google.gwt.user.client.rpc.XsrfTokenService,com.google.gwt.user.server.rpc.RemoteServiceServlet" />
  </module>

  <module name="com.google.gwt.http.client" >
    <class name="com.google.gwt.http.client.Header" >
      <method name="getName" signature="getName()" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getValue" signature="getValue()" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
    </class>
    <class name="com.google.gwt.http.client.Request" >
      <method name="cancel" signature="cancel()" />
      <method name="isPending" signature="isPending()" >
        <return type="boolean" />
      </method>
      <method name="fireOnResponseReceived" signature="fireOnResponseReceived(com.google.gwt.http.client.RequestCallback)"/>
    </class>
    <class name="com.google.gwt.http.client.Request.RequestImpl" >
      <method name="createResponse" signature="createResponse(com.google.gwt.xhr.client.XMLHttpRequest)" >
        <return type="com.google.gwt.http.client.Response" />
      </method>
    </class>
    <class name="com.google.gwt.http.client.Request.RequestImplIE8And9" supertypes="com.google.gwt.http.client.Request.RequestImpl" />
    <class name="com.google.gwt.http.client.RequestBuilder" >
      <constructor name="RequestBuilder" signature="RequestBuilder(com.google.gwt.http.client.RequestBuilder.Method,java.lang.String)" >
      </constructor>
      <constructor name="RequestBuilder" signature="RequestBuilder(java.lang.String,java.lang.String)" >
      </constructor>
      <method name="getCallback" signature="getCallback()" >
        <return type="com.google.gwt.http.client.RequestCallback" />
      </method>
      <method name="getHeader" signature="getHeader(java.lang.String)" >
        <return type="java.lang.String" />
      </method>
      <method name="getHTTPMethod" signature="getHTTPMethod()" >
        <return type="java.lang.String" />
      </method>
      <method name="getPassword" signature="getPassword()" >
        <tags>sensitive_info,credential,password</tags>
        <return type="java.lang.String"/>
        <source argpos="-1" kind="sensitive_info" resource="web"/>
      </method>
      <method name="getRequestData" signature="getRequestData()" >
        <return type="java.lang.String" />
      </method>
      <method name="getTimeoutMillis" signature="getTimeoutMillis()" >
        <return type="int" />
      </method>
      <method name="getUrl" signature="getUrl()" >
        <return type="java.lang.String" />
      </method>
      <method name="getUser" signature="getUser()" >
        <tags>sensitive_info,credential,username</tags>
        <return type="java.lang.String" />
        <source argpos="-1" kind="sensitive_info" resource="web"/>
      </method>
      <method name="send" signature="send()" >
        <return type="com.google.gwt.http.client.Request" />
      </method>
      <method name="sendRequest" signature="sendRequest(java.lang.String,com.google.gwt.http.client.RequestCallback)" >
        <return type="com.google.gwt.http.client.Request" />
      </method>
      <method name="setCallback" signature="setCallback(com.google.gwt.http.client.RequestCallback)" />
      <method name="setHeader" signature="setHeader(java.lang.String,java.lang.String)" >
        <sink kind="header_manipulation" argpos="0,1" resource="web" />
      </method>
      <method name="setPassword" signature="setPassword(java.lang.String)" >
        <tags>password:0</tags>
        <sink argpos="0" kind="hardcoded_credentials" resource="network"/>
      </method>
      <method name="setRequestData" signature="setRequestData(java.lang.String)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="setTimeoutMillis" signature="setTimeoutMillis(int)" />
      <method name="setUser" signature="setUser(java.lang.String)" >
        <tags>username:0</tags>
        <sink argpos="0" kind="hardcoded_credentials" resource="network"/>
      </method>
      <method name="setIncludeCredentials" signature="setIncludeCredentials(boolean)" />
    </class>
    <class name="com.google.gwt.http.client.Response" >
      <method name="getHeader" signature="getHeader(java.lang.String)" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getHeaders" signature="getHeaders()" >
        <return type="com.google.gwt.http.client.Header[]" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getHeadersAsString" signature="getHeadersAsString()" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getStatusCode" signature="getStatusCode()" >
        <return type="int" />
      </method>
      <method name="getStatusText" signature="getStatusText()" >
        <return type="java.lang.String" />
      </method>
      <method name="getText" signature="getText()" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
    </class>
    <class name="com.google.gwt.http.client.ResponseImpl" supertypes="com.google.gwt.http.client.Response" >
      <method name="isResponseReady" signature="isResponseReady()" >
        <return type="boolean" />
      </method>
    </class>
    <class name="com.google.gwt.http.client.StringValidator" >
      <method name="isEmptyOrNullString" signature="isEmptyOrNullString(java.lang.String)" >
        <return type="boolean" />
      </method>
      <method name="throwIfEmptyOrNull" signature="throwIfEmptyOrNull(java.lang.String,java.lang.String)" />
      <method name="throwIfNull" signature="throwIfNull(java.lang.String,java.lang.Object)" />
    </class>
    <class name="com.google.gwt.http.client.URL" >
      <method name="decode" signature="decode(java.lang.String)" >
        <return type="java.lang.String" />
        <source argpos="-1" kind="user_input" resource="network"/>
      </method>
      <method name="decodeComponent" signature="decodeComponent(java.lang.String)" >
        <return type="java.lang.String" />
        <source argpos="-1" kind="user_input" resource="network"/>
      </method>
      <method name="decodeComponent" signature="decodeComponent(java.lang.String,boolean)" >
        <return type="java.lang.String" />
        <source argpos="-1" kind="user_input" resource="network"/>
      </method>
      <method name="decodePathSegment" signature="decodePathSegment(java.lang.String)" >
        <return type="java.lang.String" />
        <source argpos="-1" kind="user_input" resource="network"/>
      </method>
      <method name="decodeQueryString" signature="decodeQueryString(java.lang.String)" >
        <return type="java.lang.String" />
        <source argpos="-1" kind="user_input" resource="network"/>
      </method>
      <method name="encode" signature="encode(java.lang.String)" >
        <return type="java.lang.String" />
      </method>
      <method name="encodeComponent" signature="encodeComponent(java.lang.String)" >
        <return type="java.lang.String" />
      </method>
      <method name="encodeComponent" signature="encodeComponent(java.lang.String,boolean)" >
        <return type="java.lang.String" />
      </method>
      <method name="encodePathSegment" signature="encodePathSegment(java.lang.String)" >
        <return type="java.lang.String" />
      </method>
      <method name="encodeQueryString" signature="encodeQueryString(java.lang.String)" >
        <return type="java.lang.String" />
      </method>
    </class>
    <class name="com.google.gwt.http.client.UrlBuilder" >
      <method name="buildString" signature="buildString()" >
        <return type="java.lang.String" />
      </method>
      <method name="removeParameter" signature="removeParameter(java.lang.String)" >
        <return type="com.google.gwt.http.client.UrlBuilder" />
      </method>
      <method name="setHash" signature="setHash(java.lang.String)" >
        <return type="com.google.gwt.http.client.UrlBuilder" />
      </method>
      <method name="setHost" signature="setHost(java.lang.String)" >
        <return type="com.google.gwt.http.client.UrlBuilder" />
        <sink kind="ssrf" argpos="0" resource="web" />
        <sink kind="insecure_transport" argpos="0" resource="web" />
      </method>
      <method name="setParameter" signature="setParameter(java.lang.String,java.lang.String...)" >
        <return type="com.google.gwt.http.client.UrlBuilder" />
        <sink kind="http_parameter_pollution" argpos="0" resource="web" />
      </method>
      <method name="setPath" signature="setPath(java.lang.String)" >
        <return type="com.google.gwt.http.client.UrlBuilder" />
        <sink kind="http_parameter_pollution" argpos="0" resource="web" />
      </method>
      <method name="setPort" signature="setPort(int)" >
        <return type="com.google.gwt.http.client.UrlBuilder" />
        <sink kind="resource_injection" argpos="0" resource="web" />
      </method>
      <method name="setProtocol" signature="setProtocol(java.lang.String)" >
        <return type="com.google.gwt.http.client.UrlBuilder" />
        <sink kind="http_parameter_pollution" argpos="0" resource="web" />
      </method>
    </class>
  </module>

  <module name="com.google.gwt.user.client" >
    <class name="com.google.gwt.user.client.ResponseTextHandler" kind="interface" >
      <method name="onCompletion" signature="onCompletion(java.lang.String)" >
        <source argpos="0" kind="user_input" resource="web" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.Cookies" >
      <method name="getCookie" signature="getCookie(java.lang.String)" >
        <tags>CWE:784</tags>
        <return type="java.lang.String" />
        <source argpos="-1" kind="user_input" resource="web"/>
      </method>
      <method name="getCookieNames" signature="getCookieNames()" >
        <return type="java.util.Collection" elementType="java.lang.String" />
        <source argpos="-1" kind="user_input" resource="web"/>
      </method>
      <method name="getUriEncode" signature="getUriEncode()" >
        <return type="boolean" />
      </method>
      <method name="isCookieEnabled" signature="isCookieEnabled()" >
        <return type="boolean" />
      </method>
      <method name="removeCookie" signature="removeCookie(java.lang.String)" />
      <method name="removeCookie" signature="removeCookie(java.lang.String,java.lang.String)" />
      <method name="removeCookieNative" signature="removeCookieNative(java.lang.String,java.lang.String)" />
      <method name="setCookie" signature="setCookie(java.lang.String,java.lang.String)" >
        <tags>cookie,cookie.create,cookie.name:0,cookie.value:1</tags>
        <sink argpos="1" kind="cookie_plaintext_storage" resource="web" />
        <sink argpos="1" kind="header_manipulation" resource="web"/>
      </method>
      <method name="setCookie" signature="setCookie(java.lang.String,java.lang.String,java.util.Date)" >
        <tags>cookie,cookie.create,cookie.name:0,cookie.value:1,cookie.maxAge:2</tags>
        <sink argpos="1" kind="cookie_plaintext_storage" resource="web" />
        <sink argpos="1" kind="header_manipulation" resource="web"/>
      </method>
      <method name="setCookie" signature="setCookie(java.lang.String,java.lang.String,java.util.Date,java.lang.String,java.lang.String,boolean)" >
        <tags>cookie,cookie.create,cookie.name:0,cookie.value:1,cookie.maxAge:2,cookie.domain:3,cookie.path:4,cookie.secure:5</tags>
        <sink argpos="1" kind="cookie_plaintext_storage" resource="web" />
        <sink argpos="1" kind="header_manipulation" resource="web"/>
      </method>
      <method name="setUriEncode" signature="setUriEncode(boolean)" />
      <method name="loadCookies" signature="loadCookies(java.util.HashMap)" />
    </class>
    <class name="com.google.gwt.user.client.DOM" >
      <method name="addEventPreview" signature="addEventPreview(com.google.gwt.user.client.EventPreview)" />
      <method name="appendChild" signature="appendChild(com.google.gwt.dom.client.Element,com.google.gwt.dom.client.Element)" />
      <method name="clone" signature="clone(com.google.gwt.dom.client.Element,boolean)" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="compare" signature="compare(com.google.gwt.dom.client.Element,com.google.gwt.dom.client.Element)" >
        <return type="boolean" />
      </method>
      <method name="createAnchor" signature="createAnchor()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createButton" signature="createButton()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createCaption" signature="createCaption()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createCol" signature="createCol()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createColGroup" signature="createColGroup()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createDiv" signature="createDiv()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createElement" signature="createElement(java.lang.String)" >
        <return type="com.google.gwt.user.client.Element" />
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="createFieldSet" signature="createFieldSet()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createForm" signature="createForm()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createIFrame" signature="createIFrame()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createImg" signature="createImg()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createInputCheck" signature="createInputCheck()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createInputPassword" signature="createInputPassword()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createInputRadio" signature="createInputRadio(java.lang.String)" >
        <return type="com.google.gwt.user.client.Element" />
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="createInputText" signature="createInputText()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createLabel" signature="createLabel()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createLegend" signature="createLegend()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createOption" signature="createOption()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createOptions" signature="createOptions()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createSelect" signature="createSelect()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createSelect" signature="createSelect(boolean)" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createSpan" signature="createSpan()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createTable" signature="createTable()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createTBody" signature="createTBody()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createTD" signature="createTD()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createTextArea" signature="createTextArea()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createTFoot" signature="createTFoot()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createTH" signature="createTH()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createTHead" signature="createTHead()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createTR" signature="createTR()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="createUniqueId" signature="createUniqueId()" >
        <return type="java.lang.String" />
      </method>
      <method name="eventCancelBubble" signature="eventCancelBubble(com.google.gwt.user.client.Event,boolean)" />
      <method name="eventGetAltKey" signature="eventGetAltKey(com.google.gwt.user.client.Event)" >
        <return type="boolean" />
      </method>
      <method name="eventGetButton" signature="eventGetButton(com.google.gwt.user.client.Event)" >
        <return type="int" />
      </method>
      <method name="eventGetClientX" signature="eventGetClientX(com.google.gwt.user.client.Event)" >
        <return type="int" />
      </method>
      <method name="eventGetClientY" signature="eventGetClientY(com.google.gwt.user.client.Event)" >
        <return type="int" />
      </method>
      <method name="eventGetCtrlKey" signature="eventGetCtrlKey(com.google.gwt.user.client.Event)" >
        <return type="boolean" />
      </method>
      <method name="eventGetCurrentEvent" signature="eventGetCurrentEvent()" >
        <return type="com.google.gwt.user.client.Event" />
      </method>
      <method name="eventGetCurrentTarget" signature="eventGetCurrentTarget(com.google.gwt.user.client.Event)" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="eventGetFromElement" signature="eventGetFromElement(com.google.gwt.user.client.Event)" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="eventGetKeyCode" signature="eventGetKeyCode(com.google.gwt.user.client.Event)" >
        <return type="int" />
      </method>
      <method name="eventGetMetaKey" signature="eventGetMetaKey(com.google.gwt.user.client.Event)" >
        <return type="boolean" />
      </method>
      <method name="eventGetMouseWheelVelocityY" signature="eventGetMouseWheelVelocityY(com.google.gwt.user.client.Event)" >
        <return type="int" />
      </method>
      <method name="eventGetRepeat" signature="eventGetRepeat(com.google.gwt.user.client.Event)" >
        <return type="boolean" />
      </method>
      <method name="eventGetScreenX" signature="eventGetScreenX(com.google.gwt.user.client.Event)" >
        <return type="int" />
      </method>
      <method name="eventGetScreenY" signature="eventGetScreenY(com.google.gwt.user.client.Event)" >
        <return type="int" />
      </method>
      <method name="eventGetShiftKey" signature="eventGetShiftKey(com.google.gwt.user.client.Event)" >
        <return type="boolean" />
      </method>
      <method name="eventGetTarget" signature="eventGetTarget(com.google.gwt.user.client.Event)" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="eventGetToElement" signature="eventGetToElement(com.google.gwt.user.client.Event)" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="eventGetType" signature="eventGetType(com.google.gwt.user.client.Event)" >
        <return type="int" />
      </method>
      <method name="eventGetTypeString" signature="eventGetTypeString(com.google.gwt.user.client.Event)" >
        <return type="java.lang.String" />
      </method>
      <method name="eventPreventDefault" signature="eventPreventDefault(com.google.gwt.user.client.Event)" />
      <method name="eventSetKeyCode" signature="eventSetKeyCode(com.google.gwt.user.client.Event,char)" />
      <method name="eventToString" signature="eventToString(com.google.gwt.user.client.Event)" >
        <return type="java.lang.String" />
      </method>
      <method name="getAbsoluteLeft" signature="getAbsoluteLeft(com.google.gwt.dom.client.Element)" >
        <return type="int" />
      </method>
      <method name="getAbsoluteTop" signature="getAbsoluteTop(com.google.gwt.dom.client.Element)" >
        <return type="int" />
      </method>
      <method name="getAttribute" signature="getAttribute(com.google.gwt.dom.client.Element,java.lang.String)" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getBooleanAttribute" signature="getBooleanAttribute(com.google.gwt.dom.client.Element,java.lang.String)" >
        <return type="boolean" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getCaptureElement" signature="getCaptureElement()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="getChild" signature="getChild(com.google.gwt.dom.client.Element,int)" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="getChildCount" signature="getChildCount(com.google.gwt.dom.client.Element)" >
        <return type="int" />
      </method>
      <method name="getChildIndex" signature="getChildIndex(com.google.gwt.dom.client.Element,com.google.gwt.dom.client.Element)" >
        <return type="int" />
      </method>
      <method name="getElementAttribute" signature="getElementAttribute(com.google.gwt.dom.client.Element,java.lang.String)" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getElementById" signature="getElementById(java.lang.String)" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="getElementProperty" signature="getElementProperty(com.google.gwt.dom.client.Element,java.lang.String)" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getElementPropertyBoolean" signature="getElementPropertyBoolean(com.google.gwt.dom.client.Element,java.lang.String)" >
        <return type="boolean" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getElementPropertyInt" signature="getElementPropertyInt(com.google.gwt.dom.client.Element,java.lang.String)" >
        <return type="int" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getEventListener" signature="getEventListener(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.user.client.EventListener" />
      </method>
      <method name="getEventsSunk" signature="getEventsSunk(com.google.gwt.dom.client.Element)" >
        <return type="int" />
      </method>
      <method name="getFirstChild" signature="getFirstChild(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="getImgSrc" signature="getImgSrc(com.google.gwt.dom.client.Element)" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getInnerHTML" signature="getInnerHTML(com.google.gwt.dom.client.Element)" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getInnerText" signature="getInnerText(com.google.gwt.dom.client.Element)" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getIntAttribute" signature="getIntAttribute(com.google.gwt.dom.client.Element,java.lang.String)" >
        <return type="int" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getIntStyleAttribute" signature="getIntStyleAttribute(com.google.gwt.dom.client.Element,java.lang.String)" >
        <return type="int" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getNextSibling" signature="getNextSibling(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="getParent" signature="getParent(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="getStyleAttribute" signature="getStyleAttribute(com.google.gwt.dom.client.Element,java.lang.String)" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="insertBefore" signature="insertBefore(com.google.gwt.dom.client.Element,com.google.gwt.dom.client.Element,com.google.gwt.dom.client.Element)" />
      <method name="insertChild" signature="insertChild(com.google.gwt.dom.client.Element,com.google.gwt.dom.client.Element,int)" />
      <method name="insertListItem" signature="insertListItem(com.google.gwt.dom.client.Element,java.lang.String,java.lang.String,int)" />
      <method name="isOrHasChild" signature="isOrHasChild(com.google.gwt.dom.client.Element,com.google.gwt.dom.client.Element)" >
        <return type="boolean" />
      </method>
      <method name="releaseCapture" signature="releaseCapture(com.google.gwt.dom.client.Element)" />
      <method name="removeChild" signature="removeChild(com.google.gwt.dom.client.Element,com.google.gwt.dom.client.Element)" />
      <method name="removeElementAttribute" signature="removeElementAttribute(com.google.gwt.dom.client.Element,java.lang.String)" />
      <method name="removeEventPreview" signature="removeEventPreview(com.google.gwt.user.client.EventPreview)" />
      <method name="scrollIntoView" signature="scrollIntoView(com.google.gwt.dom.client.Element)" />
      <method name="setAttribute" signature="setAttribute(com.google.gwt.dom.client.Element,java.lang.String,java.lang.String)" >
        <tags>map.key:1, map.value:2</tags>
        <sink kind="xss" argpos="1,2" resource="web" />
      </method>
      <method name="setBooleanAttribute" signature="setBooleanAttribute(com.google.gwt.dom.client.Element,java.lang.String,boolean)" >
        <tags>map.key:1, map.value:2</tags>
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="setCapture" signature="setCapture(com.google.gwt.dom.client.Element)" />
      <method name="setElementAttribute" signature="setElementAttribute(com.google.gwt.dom.client.Element,java.lang.String,java.lang.String)" >
        <tags>map.key:1, map.value:2</tags>
        <sink kind="xss" argpos="1,2" resource="web" />
      </method>
      <method name="setElementProperty" signature="setElementProperty(com.google.gwt.dom.client.Element,java.lang.String,java.lang.String)" >
        <tags>map.key:1, map.value:2</tags>
        <sink kind="xss" argpos="1,2" resource="web" />
      </method>
      <method name="setElementPropertyBoolean" signature="setElementPropertyBoolean(com.google.gwt.dom.client.Element,java.lang.String,boolean)" >
        <tags>map.key:1, map.value:2</tags>
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="setElementPropertyInt" signature="setElementPropertyInt(com.google.gwt.dom.client.Element,java.lang.String,int)" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="setEventListener" signature="setEventListener(com.google.gwt.dom.client.Element,com.google.gwt.user.client.EventListener)" />
      <method name="setImgSrc" signature="setImgSrc(com.google.gwt.dom.client.Element,java.lang.String)" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="setInnerHTML" signature="setInnerHTML(com.google.gwt.dom.client.Element,java.lang.String)" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="setInnerText" signature="setInnerText(com.google.gwt.dom.client.Element,java.lang.String)" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="setIntAttribute" signature="setIntAttribute(com.google.gwt.dom.client.Element,java.lang.String,int)" >
        <tags>map.key:1, map.value:2</tags>
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="setIntStyleAttribute" signature="setIntStyleAttribute(com.google.gwt.dom.client.Element,java.lang.String,int)" >
        <tags>map.key:1, map.value:2</tags>
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="setOptionText" signature="setOptionText(com.google.gwt.dom.client.Element,java.lang.String,int)" >
        <tags>map.key:1, map.value:2</tags>
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="setStyleAttribute" signature="setStyleAttribute(com.google.gwt.dom.client.Element,java.lang.String,java.lang.String)" >
        <tags>map.key:1, map.value:2</tags>
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="sinkBitlessEvent" signature="sinkBitlessEvent(com.google.gwt.dom.client.Element,java.lang.String)" />
      <method name="sinkEvents" signature="sinkEvents(com.google.gwt.dom.client.Element,int)" />
      <method name="windowGetClientHeight" signature="windowGetClientHeight()" >
        <return type="int" />
      </method>
      <method name="windowGetClientWidth" signature="windowGetClientWidth()" >
        <return type="int" />
      </method>
      <method name="dispatchEvent" signature="dispatchEvent(com.google.gwt.user.client.Event,com.google.gwt.dom.client.Element,com.google.gwt.user.client.EventListener)" />
      <method name="dispatchEvent" signature="dispatchEvent(com.google.gwt.user.client.Event,com.google.gwt.dom.client.Element)" >
        <return type="boolean" />
      </method>
      <method name="maybeInitializeEventSystem" signature="maybeInitializeEventSystem()" />
      <method name="previewEvent" signature="previewEvent(com.google.gwt.user.client.Event)" >
        <return type="boolean" />
      </method>
      <method name="asOld" signature="asOld(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.Element" supertypes="com.google.gwt.dom.client.Element" />
    <class name="com.google.gwt.user.client.History" >
      <method name="addHistoryListener" signature="addHistoryListener(com.google.gwt.user.client.HistoryListener)" />
      <method name="addValueChangeHandler" signature="addValueChangeHandler(com.google.gwt.event.logical.shared.ValueChangeHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="back" signature="back()" />
      <method name="encodeHistoryToken" signature="encodeHistoryToken(java.lang.String)" >
        <return type="java.lang.String" />
      </method>
      <method name="fireCurrentHistoryState" signature="fireCurrentHistoryState()" />
      <method name="forward" signature="forward()" />
      <method name="getToken" signature="getToken()" >
        <return type="java.lang.String" />
      </method>
      <method name="newItem" signature="newItem(java.lang.String)" />
      <method name="newItem" signature="newItem(java.lang.String,boolean)" />
      <method name="onHistoryChanged" signature="onHistoryChanged(java.lang.String)" />
      <method name="removeHistoryListener" signature="removeHistoryListener(com.google.gwt.user.client.HistoryListener)" />
      <method name="replaceItem" signature="replaceItem(java.lang.String)" />
      <method name="replaceItem" signature="replaceItem(java.lang.String,boolean)" />
    </class>
    <class name="com.google.gwt.user.client.HistoryListener" supertypes="java.util.EventListener" >
      <method name="onHistoryChanged" signature="onHistoryChanged(java.lang.String)" >
      </method>
    </class>
    <class name="com.google.gwt.user.client.Random" >
      <method name="nextBoolean" signature="nextBoolean()" >
        <return type="boolean" />
        <source argpos="-1" kind="insecure_random" resource="crypto"/>
      </method>
      <method name="nextDouble" signature="nextDouble()" >
        <return type="double" />
        <source argpos="-1" kind="insecure_random" resource="crypto"/>
      </method>
      <method name="nextInt" signature="nextInt()" >
        <return type="int" />
        <source argpos="-1" kind="insecure_random" resource="crypto"/>
      </method>
      <method name="nextInt" signature="nextInt(int)" >
        <return type="int" />
        <source argpos="-1" kind="insecure_random" resource="crypto"/>
      </method>
    </class>
    <class name="com.google.gwt.user.client.Window" >
      <method name="addCloseHandler" signature="addCloseHandler(com.google.gwt.event.logical.shared.CloseHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addResizeHandler" signature="addResizeHandler(com.google.gwt.event.logical.shared.ResizeHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addWindowCloseListener" signature="addWindowCloseListener(com.google.gwt.user.client.WindowCloseListener)" />
      <method name="addWindowClosingHandler" signature="addWindowClosingHandler(com.google.gwt.user.client.Window.ClosingHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addWindowResizeListener" signature="addWindowResizeListener(com.google.gwt.user.client.WindowResizeListener)" />
      <method name="addWindowScrollHandler" signature="addWindowScrollHandler(Window.ScrollHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addWindowScrollListener" signature="addWindowScrollListener(com.google.gwt.user.client.WindowScrollListener)" />
      <method name="alert" signature="alert(java.lang.String)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="confirm" signature="confirm(java.lang.String)" >
        <return type="boolean" />
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="enableScrolling" signature="enableScrolling(boolean)" />
      <method name="getClientHeight" signature="getClientHeight()" >
        <return type="int" />
      </method>
      <method name="getClientWidth" signature="getClientWidth()" >
        <return type="int" />
      </method>
      <method name="getScrollLeft" signature="getScrollLeft()" >
        <return type="int" />
      </method>
      <method name="getScrollTop" signature="getScrollTop()" >
        <return type="int" />
      </method>
      <method name="getTitle" signature="getTitle()" >
        <return type="java.lang.String" />
      </method>
      <method name="moveBy" signature="moveBy(int,int)" />
      <method name="moveTo" signature="moveTo(int,int)" />
      <method name="open" signature="open(java.lang.String,java.lang.String,java.lang.String)" >
        <sink kind="ssrf" argpos="0" resource="network" />
      </method>
      <method name="print" signature="print()" />
      <method name="prompt" signature="prompt(java.lang.String,java.lang.String)" >
        <return type="java.lang.String" />
        <sink kind="xss" argpos="0,1" resource="web" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="removeWindowCloseListener" signature="removeWindowCloseListener(com.google.gwt.user.client.WindowCloseListener)" />
      <method name="removeWindowResizeListener" signature="removeWindowResizeListener(com.google.gwt.user.client.WindowResizeListener)" />
      <method name="removeWindowScrollListener" signature="removeWindowScrollListener(com.google.gwt.user.client.WindowScrollListener)" />
      <method name="resizeBy" signature="resizeBy(int,int)" />
      <method name="resizeTo" signature="resizeTo(int,int)" />
      <method name="scrollTo" signature="scrollTo(int,int)" />
      <method name="setMargin" signature="setMargin(java.lang.String)" />
      <method name="setStatus" signature="setStatus(java.lang.String)" />
      <method name="setTitle" signature="setTitle(java.lang.String)" />
      <method name="onClosed" signature="onClosed()" />
      <method name="onClosing" signature="onClosing()" >
        <return type="java.lang.String" />
      </method>
      <method name="onResize" signature="onResize()" />
      <method name="onScroll" signature="onScroll()" />
    </class>
    <class name="com.google.gwt.user.client.Window.ClosingEvent" supertypes="com.google.gwt.event.shared.GwtEvent" >
      <method name="getType" signature="getType()" >
        <return type="com.google.gwt.user.client.Type" />
      </method>
      <method name="getMessage" signature="getMessage()" >
        <return type="java.lang.String" />
      </method>
      <method name="setMessage" signature="setMessage(java.lang.String)" />
      <method name="dispatch" signature="dispatch(com.google.gwt.user.client.Window.ClosingHandler)" />
    </class>
    <class name="com.google.gwt.user.client.Window.ClosingHandler" supertypes="com.google.gwt.event.shared.EventHandler" >
      <method name="onWindowClosing" signature="onWindowClosing(Window.ClosingEvent)" />
    </class>
    <class name="com.google.gwt.user.client.Window.Location" >
      <method name="assign" signature="assign(java.lang.String)" instance="false">
        <sink kind="open_redirect" argpos="0" resource="web" />
        <sink kind="execution_after_redirect" argpos="-1" resource="web"/>
      </method>
      <method name="createUrlBuilder" signature="createUrlBuilder()" instance="false">
        <return type="com.google.gwt.http.client.UrlBuilder" />
      </method>
      <method name="getHash" signature="getHash()" instance="false">
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getHost" signature="getHost()" instance="false">
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getHostName" signature="getHostName()" instance="false">
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getHref" signature="getHref()" instance="false">
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getParameter" signature="getParameter(java.lang.String)" instance="false">
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getParameterMap" signature="getParameterMap()" instance="false">
        <return type="java.util.Map" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getPath" signature="getPath()" instance="false">
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getPort" signature="getPort()" instance="false">
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getProtocol" signature="getProtocol()" instance="false">
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getQueryString" signature="getQueryString()" instance="false">
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="reload" signature="reload()" />
      <method name="replace" signature="replace(java.lang.String)" instance="false">
        <sink kind="open_redirect" argpos="0" resource="web" />
        <sink kind="execution_after_redirect" argpos="-1" resource="web"/>
      </method>
      <method name="buildListParamMap" signature="buildListParamMap(java.lang.String)" instance="false">
        <return type="java.util.Map" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.Window.Navigator" >
      <method name="getAppCodeName" signature="getAppCodeName()" >
        <return type="java.lang.String" />
      </method>
      <method name="getAppName" signature="getAppName()" >
        <return type="java.lang.String" />
      </method>
      <method name="getAppVersion" signature="getAppVersion()" >
        <return type="java.lang.String" />
      </method>
      <method name="getPlatform" signature="getPlatform()" >
        <return type="java.lang.String" />
      </method>
      <method name="getUserAgent" signature="getUserAgent()" >
        <return type="java.lang.String" />
      </method>
      <method name="isCookieEnabled" signature="isCookieEnabled()" >
        <return type="boolean" />
      </method>
      <method name="isJavaEnabled" signature="isJavaEnabled()" >
        <return type="boolean" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.Window.ScrollEvent" supertypes="com.google.gwt.event.shared.GwtEvent" >
      <method name="getType" signature="getType()" >
        <return type="com.google.gwt.user.client.Type" />
      </method>
      <method name="getScrollLeft" signature="getScrollLeft()" >
        <return type="int" />
      </method>
      <method name="getScrollTop" signature="getScrollTop()" >
        <return type="int" />
      </method>
      <method name="dispatch" signature="dispatch(com.google.gwt.user.client.Window.ScrollHandler)" />
    </class>
    <class name="com.google.gwt.user.client.Window.ScrollHandler" supertypes="com.google.gwt.event.shared.EventHandler" >
      <method name="onWindowScroll" signature="onWindowScroll(Window.ScrollEvent)" />
    </class>
    <class name="com.google.gwt.user.client.WindowCloseListener" supertypes="java.util.EventListener" >
      <method name="onWindowClosing" signature="onWindowClosing()" >
        <return type="java.lang.String" />
      </method>
      <method name="onWindowClosed" signature="onWindowClosed()" />
    </class>
    <class name="com.google.gwt.user.client.WindowResizeListener" supertypes="java.util.EventListener" >
      <method name="onWindowResized" signature="onWindowResized(int,int)" />
    </class>
    <class name="com.google.gwt.user.client.WindowScrollListener" supertypes="java.util.EventListener" >
      <method name="onWindowScrolled" signature="onWindowScrolled(int,int)" />
    </class>
  </module>

  <module name="com.google.gwt.user.client.ui" >
    <class name="com.google.gwt.user.client.ui.FormSubmitCompleteEvent" supertypes="java.util.EventObject" >
      <method name="getResults" signature="getResults()" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.FormPanel.IFrameTemplate" supertypes="com.google.gwt.safehtml.client.SafeHtmlTemplates" >
      <method name="get" signature="get(java.lang.String)" >
        <return type="com.google.gwt.safehtml.shared.SafeHtml" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.FormPanel.SubmitCompleteEvent" supertypes="com.google.gwt.event.shared.GwtEvent" >
      <method name="getType" signature="getType()" >
        <return type="com.google.gwt.user.client.ui.Type" />
      </method>
      <method name="getResults" signature="getResults()" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="dispatch" signature="dispatch(com.google.gwt.user.client.ui.FormPanel.SubmitCompleteHandler)" />
    </class>
    <class name="com.google.gwt.user.client.ui.HasHTML" supertypes="com.google.gwt.user.client.ui.HasText" >
      <method name="getHTML" signature="getHTML()" >
        <return type="java.lang.String" />
      </method>
      <method name="setHTML" signature="setHTML(java.lang.String)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.HasText" >
      <method name="getText" signature="getText()" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="setText" signature="setText(java.lang.String)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.ImageResourceRenderer.Template" supertypes="com.google.gwt.safehtml.client.SafeHtmlTemplates" >
      <method name="image" signature="image(com.google.gwt.safehtml.shared.SafeUri,int,int)" >
        <return type="com.google.gwt.safehtml.shared.SafeHtml" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.RichTextArea.BasicFormatter" >
      <method name="getBackColor" signature="getBackColor()" >
        <return type="java.lang.String" />
      </method>
      <method name="getForeColor" signature="getForeColor()" >
        <return type="java.lang.String" />
      </method>
      <method name="isBold" signature="isBold()" >
        <return type="boolean" />
      </method>
      <method name="isItalic" signature="isItalic()" >
        <return type="boolean" />
      </method>
      <method name="isSubscript" signature="isSubscript()" >
        <return type="boolean" />
      </method>
      <method name="isSuperscript" signature="isSuperscript()" >
        <return type="boolean" />
      </method>
      <method name="isUnderlined" signature="isUnderlined()" >
        <return type="boolean" />
      </method>
      <method name="selectAll" signature="selectAll()" />
      <method name="setBackColor" signature="setBackColor(java.lang.String)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="setFontName" signature="setFontName(java.lang.String)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="setFontSize" signature="setFontSize(com.google.gwt.user.client.ui.RichTextArea.FontSize)" />
      <method name="setForeColor" signature="setForeColor(java.lang.String)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="setJustification" signature="setJustification(com.google.gwt.user.client.ui.RichTextArea.Justification)" />
      <method name="toggleBold" signature="toggleBold()" />
      <method name="toggleItalic" signature="toggleItalic()" />
      <method name="toggleSubscript" signature="toggleSubscript()" />
      <method name="toggleSuperscript" signature="toggleSuperscript()" />
      <method name="toggleUnderline" signature="toggleUnderline()" />
    </class>
    <class name="com.google.gwt.user.client.ui.RichTextArea.ExtendedFormatter" supertypes="com.google.gwt.user.client.ui.RichTextArea.BasicFormatter" >
      <method name="createLink" signature="createLink(java.lang.String)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="insertHorizontalRule" signature="insertHorizontalRule()" />
      <method name="insertImage" signature="insertImage(java.lang.String)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="insertOrderedList" signature="insertOrderedList()" />
      <method name="insertUnorderedList" signature="insertUnorderedList()" />
      <method name="isStrikethrough" signature="isStrikethrough()" >
        <return type="boolean" />
      </method>
      <method name="leftIndent" signature="leftIndent()" />
      <method name="removeFormat" signature="removeFormat()" />
      <method name="removeLink" signature="removeLink()" />
      <method name="rightIndent" signature="rightIndent()" />
      <method name="toggleStrikethrough" signature="toggleStrikethrough()" />
    </class>
    <class name="com.google.gwt.user.client.ui.RichTextArea.Formatter" supertypes="com.google.gwt.user.client.ui.RichTextArea.ExtendedFormatter" >
      <method name="insertHTML" signature="insertHTML(java.lang.String)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="redo" signature="redo()" />
      <method name="undo" signature="undo()" />
    </class>
    <class name="com.google.gwt.user.client.ui.AbsolutePanel" supertypes="InsertPanel.ForIsWidget,com.google.gwt.user.client.ui.ComplexPanel" >
      <method name="add" signature="add(com.google.gwt.user.client.ui.Widget)" />
      <method name="add" signature="add(com.google.gwt.user.client.ui.Widget,int,int)" />
      <method name="add" signature="add(com.google.gwt.user.client.ui.IsWidget,int,int)" />
      <method name="getWidgetLeft" signature="getWidgetLeft(com.google.gwt.user.client.ui.Widget)" >
        <return type="int" />
      </method>
      <method name="getWidgetTop" signature="getWidgetTop(com.google.gwt.user.client.ui.Widget)" >
        <return type="int" />
      </method>
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.Widget,int)" />
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.IsWidget,int)" />
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.Widget,int,int,int)" />
      <method name="remove" signature="remove(com.google.gwt.user.client.ui.Widget)" >
        <return type="boolean" />
      </method>
      <method name="setWidgetPosition" signature="setWidgetPosition(com.google.gwt.user.client.ui.Widget,int,int)" />
      <method name="setWidgetPositionImpl" signature="setWidgetPositionImpl(com.google.gwt.user.client.ui.Widget,int,int)" />
    </class>
    <class name="com.google.gwt.user.client.ui.AbstractImagePrototype" >
      <method name="create" signature="create(com.google.gwt.resources.client.ImageResource)" >
        <return type="com.google.gwt.user.client.ui.AbstractImagePrototype" />
      </method>
      <method name="applyTo" signature="applyTo(com.google.gwt.user.client.ui.Image)" />
      <method name="applyTo" signature="applyTo(com.google.gwt.user.client.ui.AbstractImagePrototype.ImagePrototypeElement)" />
      <method name="createElement" signature="createElement()" >
        <return type="com.google.gwt.user.client.ui.AbstractImagePrototype.ImagePrototypeElement" />
      </method>
      <method name="createImage" signature="createImage()" >
        <return type="com.google.gwt.user.client.ui.Image" />
      </method>
      <method name="getHTML" signature="getHTML()" >
        <return type="java.lang.String" />
      </method>
      <method name="getSafeHtml" signature="getSafeHtml()" >
        <return type="com.google.gwt.safehtml.shared.SafeHtml" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.AbstractNativeScrollbar" supertypes="com.google.gwt.event.dom.client.HasScrollHandlers,com.google.gwt.user.client.ui.Widget" >
      <method name="getNativeScrollbarHeight" signature="getNativeScrollbarHeight()" >
        <return type="int" />
      </method>
      <method name="getNativeScrollbarWidth" signature="getNativeScrollbarWidth()" >
        <return type="int" />
      </method>
      <method name="isScrollbarLeftAlignedInRtl" signature="isScrollbarLeftAlignedInRtl()" >
        <return type="boolean" />
      </method>
      <method name="getScrollableElement" signature="getScrollableElement()" >
        <return type="com.google.gwt.dom.client.Element" />
      </method>
      <method name="onAttach" signature="onAttach()" />
      <method name="onDetach" signature="onDetach()" />
    </class>
    <class name="com.google.gwt.user.client.ui.Accessibility" >
      <method name="getRole" signature="getRole(com.google.gwt.dom.client.Element)" >
        <return type="java.lang.String" />
      </method>
      <method name="getState" signature="getState(com.google.gwt.dom.client.Element,java.lang.String)" >
        <return type="java.lang.String" />
      </method>
      <method name="removeState" signature="removeState(com.google.gwt.dom.client.Element,java.lang.String)" />
      <method name="setRole" signature="setRole(com.google.gwt.dom.client.Element,java.lang.String)" />
      <method name="setState" signature="setState(com.google.gwt.dom.client.Element,java.lang.String,java.lang.String)" />
    </class>
    <class name="com.google.gwt.user.client.ui.Anchor" supertypes="com.google.gwt.i18n.client.HasDirection,com.google.gwt.i18n.shared.HasDirectionEstimator,com.google.gwt.user.client.ui.FocusWidget,com.google.gwt.user.client.ui.HasDirectionalSafeHtml,com.google.gwt.user.client.ui.HasHTML,com.google.gwt.user.client.ui.HasHorizontalAlignment,com.google.gwt.user.client.ui.HasName,com.google.gwt.user.client.ui.HasWordWrap" >
      <method name="wrap" signature="wrap(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.user.client.ui.Anchor" />
      </method>
      <method name="getHorizontalAlignment" signature="getHorizontalAlignment()" >
        <return type="com.google.gwt.user.client.ui.HorizontalAlignmentConstant" />
      </method>
      <method name="getHref" signature="getHref()" >
        <return type="java.lang.String" />
      </method>
      <method name="getHTML" signature="getHTML()" >
        <return type="java.lang.String" />
      </method>
      <method name="getName" signature="getName()" >
        <return type="java.lang.String" />
      </method>
      <method name="getTabIndex" signature="getTabIndex()" >
        <return type="int" />
      </method>
      <method name="getTarget" signature="getTarget()" >
        <return type="java.lang.String" />
      </method>
      <method name="getText" signature="getText()" >
        <return type="java.lang.String" />
      </method>
      <method name="getTextDirection" signature="getTextDirection()" >
        <return type="com.google.gwt.user.client.ui.Direction" />
      </method>
      <method name="getWordWrap" signature="getWordWrap()" >
        <return type="boolean" />
      </method>
      <method name="setAccessKey" signature="setAccessKey(char)" />
      <method name="setDirection" signature="setDirection(com.google.gwt.user.client.ui.Direction)" />
      <method name="setFocus" signature="setFocus(boolean)" />
      <method name="setHorizontalAlignment" signature="setHorizontalAlignment(com.google.gwt.user.client.ui.HorizontalAlignmentConstant)" />
      <method name="setHref" signature="setHref(com.google.gwt.safehtml.shared.SafeUri)" match="fullsignature" />
      <method name="setHref" signature="setHref(java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="setHTML" signature="setHTML(com.google.gwt.safehtml.shared.SafeHtml)" match="fullsignature" />
      <method name="setHTML" signature="setHTML(java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="setHTML" signature="setHTML(com.google.gwt.safehtml.shared.SafeHtml,com.google.gwt.user.client.ui.Direction)" />
      <method name="setName" signature="setName(java.lang.String)" />
      <method name="setTabIndex" signature="setTabIndex(int)" />
      <method name="setTarget" signature="setTarget(java.lang.String)" />
      <method name="setText" signature="setText(java.lang.String)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="setText" signature="setText(java.lang.String,com.google.gwt.user.client.ui.Direction)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="setWordWrap" signature="setWordWrap(boolean)" />
    </class>
    <class name="com.google.gwt.user.client.ui.Button" supertypes="com.google.gwt.user.client.ui.ButtonBase" >
      <method name="wrap" signature="wrap(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.user.client.ui.Button" />
      </method>
      <method name="click" signature="click()" />
      <method name="getButtonElement" signature="getButtonElement()" >
        <return type="com.google.gwt.dom.client.ButtonElement" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.ButtonBase" supertypes="com.google.gwt.safehtml.client.HasSafeHtml,com.google.gwt.user.client.ui.FocusWidget,com.google.gwt.user.client.ui.HasHTML" >
      <method name="getHTML" signature="getHTML()" >
        <return type="java.lang.String" />
      </method>
      <method name="getText" signature="getText()" >
        <return type="java.lang.String" />
      </method>
      <method name="setHTML" signature="setHTML(java.lang.String)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="setText" signature="setText(java.lang.String)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.FocusWidget" supertypes="com.google.gwt.event.dom.client.HasAllDragAndDropHandlers,com.google.gwt.event.dom.client.HasAllFocusHandlers,com.google.gwt.event.dom.client.HasAllGestureHandlers,com.google.gwt.event.dom.client.HasAllKeyHandlers,com.google.gwt.event.dom.client.HasAllMouseHandlers,com.google.gwt.event.dom.client.HasAllTouchHandlers,com.google.gwt.event.dom.client.HasClickHandlers,com.google.gwt.event.dom.client.HasDoubleClickHandlers,com.google.gwt.user.client.ui.HasEnabled,com.google.gwt.user.client.ui.HasFocus,com.google.gwt.user.client.ui.SourcesClickEvents,com.google.gwt.user.client.ui.SourcesMouseEvents,com.google.gwt.user.client.ui.Widget" />
    <class name="com.google.gwt.user.client.ui.Widget" supertypes="com.google.gwt.event.logical.shared.HasAttachHandlers,com.google.gwt.user.client.EventListener,com.google.gwt.user.client.ui.IsWidget,com.google.gwt.user.client.ui.UIObject" />
    <class name="com.google.gwt.user.client.ui.UIObject" supertypes="com.google.gwt.user.client.ui.HasVisibility,java.lang.Object" >
      <method name="isVisible" signature="isVisible(com.google.gwt.dom.client.Element)" >
        <return type="boolean" />
      </method>
      <method name="setVisible" signature="setVisible(com.google.gwt.dom.client.Element,boolean)" />
      <method name="getStyleName" signature="getStyleName(com.google.gwt.dom.client.Element)" >
        <return type="java.lang.String" />
      </method>
      <method name="getStylePrimaryName" signature="getStylePrimaryName(com.google.gwt.dom.client.Element)" >
        <return type="java.lang.String" />
      </method>
      <method name="setStyleName" signature="setStyleName(com.google.gwt.dom.client.Element,java.lang.String)" />
      <method name="setStyleName" signature="setStyleName(com.google.gwt.dom.client.Element,java.lang.String,boolean)" />
      <method name="setStylePrimaryName" signature="setStylePrimaryName(com.google.gwt.dom.client.Element,java.lang.String)" />
      <method name="addStyleDependentName" signature="addStyleDependentName(java.lang.String)" />
      <method name="addStyleName" signature="addStyleName(java.lang.String)" />
      <method name="getAbsoluteLeft" signature="getAbsoluteLeft()" >
        <return type="int" />
      </method>
      <method name="getAbsoluteTop" signature="getAbsoluteTop()" >
        <return type="int" />
      </method>
      <method name="getElement" signature="getElement()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="getOffsetHeight" signature="getOffsetHeight()" >
        <return type="int" />
      </method>
      <method name="getOffsetWidth" signature="getOffsetWidth()" >
        <return type="int" />
      </method>
      <method name="getStyleName" signature="getStyleName()" >
        <return type="java.lang.String" />
      </method>
      <method name="getStylePrimaryName" signature="getStylePrimaryName()" >
        <return type="java.lang.String" />
      </method>
      <method name="getTitle" signature="getTitle()" >
        <return type="java.lang.String" />
      </method>
      <method name="removeStyleDependentName" signature="removeStyleDependentName(java.lang.String)"/>
      <method name="removeStyleName" signature="removeStyleName(java.lang.String)"/>
      <method name="setHeight" signature="setHeight(java.lang.String)" />
      <method name="setPixelSize" signature="setPixelSize(int,int)" />
      <method name="setSize" signature="setSize(java.lang.String,java.lang.String)" />
      <method name="setStyleDependentName" signature="setStyleDependentName(java.lang.String,boolean)" />
      <method name="setStyleName" signature="setStyleName(java.lang.String,boolean)" />
      <method name="setStyleName" signature="setStyleName(java.lang.String)" />
      <method name="setStylePrimaryName" signature="setStylePrimaryName(java.lang.String)"/>
      <method name="setTitle" signature="setTitle(java.lang.String)" />
      <method name="setWidth" signature="setWidth(java.lang.String)" />
      <method name="sinkBitlessEvent" signature="sinkBitlessEvent(java.lang.String)" />
      <method name="sinkEvents" signature="sinkEvents(int)" />
      <method name="unsinkEvents" signature="unsinkEvents(int)" />
      <method name="getStyleElement" signature="getStyleElement()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="resolvePotentialElement" signature="resolvePotentialElement()" >
        <return type="com.google.gwt.dom.client.Element" />
      </method>
      <method name="setElement" signature="setElement(com.google.gwt.dom.client.Element)" />
      <method name="setElement" signature="setElement(com.google.gwt.user.client.Element)" />
      <method name="replaceElement" signature="replaceElement(com.google.gwt.dom.client.Element)" />
    </class>
    <class name="com.google.gwt.user.client.ui.CaptionPanel" supertypes="HasWidgets.ForIsWidget,com.google.gwt.user.client.ui.Composite" >
      <constructor name="CaptionPanel" signature="CaptionPanel()" />
      <constructor name="CaptionPanel" signature="CaptionPanel(com.google.gwt.safehtml.shared.SafeHtml)" match="fullsignature" />
      <constructor name="CaptionPanel" signature="CaptionPanel(java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="CaptionPanel" signature="CaptionPanel(java.lang.String,boolean)" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <method name="add" signature="add(com.google.gwt.user.client.ui.Widget)" />
      <method name="add" signature="add(com.google.gwt.user.client.ui.IsWidget)" />
      <method name="clear" signature="clear()" />
      <method name="getCaptionHTML" signature="getCaptionHTML()" >
        <return type="java.lang.String" />
      </method>
      <method name="getCaptionText" signature="getCaptionText()" >
        <return type="java.lang.String" />
      </method>
      <method name="getContentWidget" signature="getContentWidget()" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="iterator" signature="iterator()" >
        <return type="java.util.Iterator" />
      </method>
      <method name="remove" signature="remove(com.google.gwt.user.client.ui.Widget)" >
        <return type="boolean" />
      </method>
      <method name="remove" signature="remove(com.google.gwt.user.client.ui.IsWidget)" >
        <return type="boolean" />
      </method>
      <method name="setCaptionHTML" signature="setCaptionHTML(java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="setCaptionHTML" signature="setCaptionHTML(com.google.gwt.safehtml.shared.SafeHtml)" />
      <method name="setCaptionText" signature="setCaptionText(java.lang.String)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="setContentWidget" signature="setContentWidget(com.google.gwt.user.client.ui.Widget)" />
    </class>
    <class name="com.google.gwt.user.client.ui.CaptionPanel.CaptionPanelImpl" >
      <method name="setCaption" signature="setCaption(com.google.gwt.dom.client.FieldSetElement,com.google.gwt.dom.client.Element,com.google.gwt.safehtml.shared.SafeHtml)" />
      <method name="setCaption" signature="setCaption(com.google.gwt.dom.client.FieldSetElement,com.google.gwt.dom.client.Element,java.lang.String,boolean)" >
        <sink kind="xss" argpos="2" resource="web" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.CaptionPanel.CaptionPanelImplMozilla" supertypes="com.google.gwt.user.client.ui.CaptionPanel.CaptionPanelImpl" />
    <class name="com.google.gwt.user.client.ui.CaptionPanel.CaptionPanelImplSafari" supertypes="com.google.gwt.user.client.ui.CaptionPanel.CaptionPanelImpl" />
    <class name="com.google.gwt.user.client.ui.CellPanel" supertypes="com.google.gwt.user.client.ui.ComplexPanel" >
      <method name="getSpacing" signature="getSpacing()" >
        <return type="int" />
      </method>
      <method name="getBody" signature="getBody()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="getTable" signature="getTable()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="getWidgetTd" signature="getWidgetTd(com.google.gwt.user.client.ui.Widget)" >
        <return type="com.google.gwt.dom.client.Element" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.ChangeListenerCollection" supertypes="java.util.ArrayList" >
      <method name="fireChange" signature="fireChange(com.google.gwt.user.client.ui.Widget)" >
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.CheckBox" supertypes="com.google.gwt.editor.client.IsEditor,com.google.gwt.i18n.shared.HasDirectionEstimator,com.google.gwt.user.client.ui.ButtonBase,com.google.gwt.user.client.ui.HasDirectionalSafeHtml,com.google.gwt.user.client.ui.HasName,com.google.gwt.user.client.ui.HasValue,com.google.gwt.user.client.ui.HasWordWrap" >
      <constructor name="CheckBox" signature="CheckBox()" />
      <constructor name="CheckBox" signature="CheckBox(com.google.gwt.safehtml.shared.SafeHtml)" match="fullsignature" />
      <constructor name="CheckBox" signature="CheckBox(com.google.gwt.safehtml.shared.SafeHtml,com.google.gwt.i18n.client.HasDirection.Direction)" match="fullsignature" />
      <constructor name="CheckBox" signature="CheckBox(com.google.gwt.safehtml.shared.SafeHtml,com.google.gwt.i18n.shared.DirectionEstimator)" match="fullsignature" />
      <constructor name="CheckBox" signature="CheckBox(java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="CheckBox" signature="CheckBox(java.lang.String,com.google.gwt.i18n.client.HasDirection.Direction)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="CheckBox" signature="CheckBox(java.lang.String,com.google.gwt.i18n.shared.DirectionEstimator)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="CheckBox" signature="CheckBox(java.lang.String,boolean)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="CheckBox" signature="CheckBox(com.google.gwt.dom.client.Element)" match="fullsignature" />
      <method name="addValueChangeHandler" signature="addValueChangeHandler(com.google.gwt.event.logical.shared.ValueChangeHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="getFormValue" signature="getFormValue()" >
        <return type="java.lang.String" />
      </method>
      <method name="getName" signature="getName()" >
        <return type="java.lang.String" />
      </method>
      <method name="getTabIndex" signature="getTabIndex()" >
        <return type="int" />
      </method>
      <method name="getTextDirection" signature="getTextDirection()" >
        <return type="com.google.gwt.i18n.client.HasDirection.Direction" />
      </method>
      <method name="getValue" signature="getValue()" >
        <return type="java.lang.Boolean" />
      </method>
      <method name="getWordWrap" signature="getWordWrap()" >
        <return type="boolean" />
      </method>
      <method name="isChecked" signature="isChecked()" >
        <return type="boolean" />
      </method>
      <method name="isEnabled" signature="isEnabled()" >
        <return type="boolean" />
      </method>
      <method name="setAccessKey" signature="setAccessKey(char)" />
      <method name="setChecked" signature="setChecked(boolean)" />
      <method name="setEnabled" signature="setEnabled(boolean)" />
      <method name="setFocus" signature="setFocus(boolean)" />
      <method name="setFormValue" signature="setFormValue(java.lang.String)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="setHTML" signature="setHTML(com.google.gwt.safehtml.shared.SafeHtml,com.google.gwt.i18n.client.HasDirection.Direction)" />
      <method name="setName" signature="setName(java.lang.String)" />
      <method name="setTabIndex" signature="setTabIndex(int)" />
      <method name="setText" signature="setText(java.lang.String,com.google.gwt.i18n.client.HasDirection.Direction)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="setValue" signature="setValue(java.lang.Boolean)" />
      <method name="setValue" signature="setValue(java.lang.Boolean,boolean)" />
      <method name="setWordWrap" signature="setWordWrap(boolean)" />
      <method name="sinkEvents" signature="sinkEvents(int)" />
      <method name="ensureDomEventHandlers" signature="ensureDomEventHandlers()" />
      <method name="onLoad" signature="onLoad()" />
      <method name="onUnload" signature="onUnload()" />
      <method name="replaceInputElement" signature="replaceInputElement(com.google.gwt.dom.client.Element)" />
      <method name="replaceInputElement" signature="replaceInputElement(com.google.gwt.user.client.Element)" />
    </class>
    <class name="com.google.gwt.user.client.ui.ClickListenerCollection" supertypes="java.util.ArrayList" >
      <method name="fireClick" signature="fireClick(com.google.gwt.user.client.ui.Widget)" >
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.ComplexPanel" supertypes="IndexedPanel.ForIsWidget,com.google.gwt.user.client.ui.Panel" >
      <method name="getWidget" signature="getWidget(int)" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="getWidgetCount" signature="getWidgetCount()" >
        <return type="int" />
      </method>
      <method name="getWidgetIndex" signature="getWidgetIndex(com.google.gwt.user.client.ui.Widget)" >
        <return type="int" />
      </method>
      <method name="getWidgetIndex" signature="getWidgetIndex(com.google.gwt.user.client.ui.IsWidget)" >
        <return type="int" />
      </method>
      <method name="iterator" signature="iterator()" >
        <return type="java.util.Iterator" />
      </method>
      <method name="remove" signature="remove(int)" >
        <return type="boolean" />
      </method>
      <method name="remove" signature="remove(com.google.gwt.user.client.ui.Widget)" >
        <return type="boolean" />
      </method>
      <method name="add" signature="add(com.google.gwt.user.client.ui.Widget,com.google.gwt.dom.client.Element)" />
      <method name="add" signature="add(com.google.gwt.user.client.ui.Widget,com.google.gwt.user.client.Element)" />
      <method name="adjustIndex" signature="adjustIndex(com.google.gwt.user.client.ui.Widget,int)" >
        <return type="int" />
      </method>
      <method name="checkIndexBoundsForAccess" signature="checkIndexBoundsForAccess(int)" />
      <method name="checkIndexBoundsForInsertion" signature="checkIndexBoundsForInsertion(int)" />
      <method name="getChildren" signature="getChildren()" >
        <return type="com.google.gwt.user.client.ui.WidgetCollection" />
      </method>
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.Widget,com.google.gwt.dom.client.Element,int,boolean)" />
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.Widget,com.google.gwt.user.client.Element,int,boolean)" />
      <method name="doLogicalClear" signature="doLogicalClear()" />
    </class>
    <class name="com.google.gwt.user.client.ui.Composite" supertypes="com.google.gwt.user.client.ui.IsRenderable,com.google.gwt.user.client.ui.Widget" >
      <method name="claimElement" signature="claimElement(com.google.gwt.dom.client.Element)" />
      <method name="initializeClaimedElement" signature="initializeClaimedElement()" />
      <method name="isAttached" signature="isAttached()" >
        <return type="boolean" />
      </method>
      <method name="onBrowserEvent" signature="onBrowserEvent(com.google.gwt.user.client.Event)" />
      <method name="render" signature="render(com.google.gwt.user.client.ui.RenderableStamper)" >
        <return type="com.google.gwt.safehtml.shared.SafeHtml" />
      </method>
      <method name="render" signature="render(com.google.gwt.user.client.ui.RenderableStamper,com.google.gwt.safehtml.shared.SafeHtmlBuilder)" />
      <method name="getWidget" signature="getWidget()" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="initWidget" signature="initWidget(com.google.gwt.user.client.ui.Widget)" />
      <method name="onAttach" signature="onAttach()" />
      <method name="onDetach" signature="onDetach()" />
      <method name="resolvePotentialElement" signature="resolvePotentialElement()" >
        <return type="com.google.gwt.dom.client.Element" />
      </method>
      <method name="setWidget" signature="setWidget(com.google.gwt.user.client.ui.Widget)" />
    </class>
    <class name="com.google.gwt.user.client.ui.CustomButton" supertypes="com.google.gwt.user.client.ui.ButtonBase" >
      <constructor name="CustomButton" signature="CustomButton(com.google.gwt.user.client.ui.Image)" match="fullsignature" />
      <constructor name="CustomButton" signature="CustomButton(com.google.gwt.user.client.ui.Image,com.google.gwt.event.dom.client.ClickHandler)" match="fullsignature" />
      <constructor name="CustomButton" signature="CustomButton(com.google.gwt.user.client.ui.Image,com.google.gwt.user.client.ui.ClickListener)" match="fullsignature" />
      <constructor name="CustomButton" signature="CustomButton(com.google.gwt.user.client.ui.Image,com.google.gwt.user.client.ui.Image)" match="fullsignature" />
      <constructor name="CustomButton" signature="CustomButton(com.google.gwt.user.client.ui.Image,com.google.gwt.user.client.ui.Image,com.google.gwt.event.dom.client.ClickHandler)" />
      <constructor name="CustomButton" signature="CustomButton(com.google.gwt.user.client.ui.Image,com.google.gwt.user.client.ui.Image,com.google.gwt.user.client.ui.ClickListener)" match="fullsignature" />
      <constructor name="CustomButton" signature="CustomButton(java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="CustomButton" signature="CustomButton(java.lang.String,com.google.gwt.event.dom.client.ClickHandler)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="CustomButton" signature="CustomButton(java.lang.String,com.google.gwt.user.client.ui.ClickListener)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="CustomButton" signature="CustomButton(java.lang.String,java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0,1" resource="web" />
      </constructor>
      <constructor name="CustomButton" signature="CustomButton(java.lang.String,java.lang.String,com.google.gwt.event.dom.client.ClickHandler)" match="fullsignature" >
        <sink kind="xss" argpos="0,1" resource="web" />
      </constructor>
      <constructor name="CustomButton" signature="CustomButton(java.lang.String,java.lang.String,com.google.gwt.user.client.ui.ClickListener)" match="fullsignature" >
        <sink kind="xss" argpos="0,1" resource="web" />
      </constructor>
      <constructor name="CustomButton" signature="CustomButton()" />
      <method name="getDownDisabledFace" signature="getDownDisabledFace()" >
        <return type="com.google.gwt.user.client.ui.CustomButton.Face" />
      </method>
      <method name="getDownFace" signature="getDownFace()" >
        <return type="com.google.gwt.user.client.ui.CustomButton.Face" />
      </method>
      <method name="getDownHoveringFace" signature="getDownHoveringFace()" >
        <return type="com.google.gwt.user.client.ui.CustomButton.Face" />
      </method>
      <method name="getTabIndex" signature="getTabIndex()" >
        <return type="int" />
      </method>
      <method name="getUpDisabledFace" signature="getUpDisabledFace()" >
        <return type="com.google.gwt.user.client.ui.CustomButton.Face" />
      </method>
      <method name="getUpFace" signature="getUpFace()" >
        <return type="com.google.gwt.user.client.ui.CustomButton.Face" />
      </method>
      <method name="getUpHoveringFace" signature="getUpHoveringFace()" >
        <return type="com.google.gwt.user.client.ui.CustomButton.Face" />
      </method>
      <method name="onBrowserEvent" signature="onBrowserEvent(com.google.gwt.user.client.Event)" >
      </method>
      <method name="setAccessKey" signature="setAccessKey(char)" >
      </method>
      <method name="setEnabled" signature="setEnabled(boolean)" >
      </method>
      <method name="setFocus" signature="setFocus(boolean)" >
      </method>
      <method name="setTabIndex" signature="setTabIndex(int)" >
      </method>
      <method name="isDown" signature="isDown()" >
        <return type="boolean" />
      </method>
      <method name="onAttach" signature="onAttach()" >
      </method>
      <method name="onClick" signature="onClick()" >
      </method>
      <method name="onClickCancel" signature="onClickCancel()" >
      </method>
      <method name="onClickStart" signature="onClickStart()" >
      </method>
      <method name="onDetach" signature="onDetach()" >
      </method>
      <method name="setDown" signature="setDown(boolean)" >
      </method>
      <method name="finishSetup" signature="finishSetup()" >
      </method>
      <method name="fireClickListeners" signature="fireClickListeners(com.google.gwt.user.client.Event)" >
      </method>
      <method name="getCurrentFace" signature="getCurrentFace()" >
        <return type="com.google.gwt.user.client.ui.CustomButton.Face" />
      </method>
      <method name="isHovering" signature="isHovering()" >
        <return type="boolean" />
      </method>
      <method name="setCurrentFace" signature="setCurrentFace(com.google.gwt.user.client.ui.CustomButton.Face)" >
      </method>
      <method name="setHovering" signature="setHovering(boolean)" >
      </method>
      <method name="toggleDown" signature="toggleDown()" >
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.CustomScrollPanel" supertypes="com.google.gwt.user.client.ui.ScrollPanel" />
    <class name="com.google.gwt.user.client.ui.DateLabel" supertypes="com.google.gwt.user.client.ui.ValueLabel" />
    <class name="com.google.gwt.user.client.ui.DeckLayoutPanel" supertypes="InsertPanel.ForIsWidget,com.google.gwt.user.client.ui.AcceptsOneWidget,com.google.gwt.user.client.ui.AnimatedLayout,com.google.gwt.user.client.ui.ComplexPanel,com.google.gwt.user.client.ui.ProvidesResize,com.google.gwt.user.client.ui.RequiresResize" >
      <method name="add" signature="add(com.google.gwt.user.client.ui.Widget)" />
      <method name="getAnimationDuration" signature="getAnimationDuration()" >
        <return type="int" />
      </method>
      <method name="getVisibleWidget" signature="getVisibleWidget()" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="getVisibleWidgetIndex" signature="getVisibleWidgetIndex()" >
        <return type="int" />
      </method>
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.IsWidget,int)" />
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.Widget,int)" />
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.Widget,com.google.gwt.user.client.ui.Widget)" />
      <method name="isAnimationVertical" signature="isAnimationVertical()" >
        <return type="boolean" />
      </method>
      <method name="onResize" signature="onResize()" />
      <method name="setAnimationDuration" signature="setAnimationDuration(int)" />
      <method name="setAnimationVertical" signature="setAnimationVertical(boolean)" />
      <method name="showWidget" signature="showWidget(int)" />
      <method name="showWidget" signature="showWidget(com.google.gwt.user.client.ui.Widget)" />
      <method name="onAttach" signature="onAttach()" />
      <method name="onDetach" signature="onDetach()"/>
      <method name="assertIsChild" signature="assertIsChild(com.google.gwt.user.client.ui.Widget)" />
    </class>
    <class name="com.google.gwt.user.client.ui.DeckPanel" supertypes="InsertPanel.ForIsWidget,com.google.gwt.user.client.ui.ComplexPanel,com.google.gwt.user.client.ui.HasAnimation" >
      <method name="getVisibleWidget" signature="getVisibleWidget()" >
        <return type="int" />
      </method>
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.IsWidget,int)" />
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.Widget,int)" />
      <method name="isAnimationEnabled" signature="isAnimationEnabled()" >
        <return type="boolean" />
      </method>
      <method name="setAnimationEnabled" signature="setAnimationEnabled(boolean)" />
      <method name="showWidget" signature="showWidget(int)" />
    </class>
    <class name="com.google.gwt.user.client.ui.DecoratedPopupPanel" supertypes="com.google.gwt.user.client.ui.PopupPanel" >
      <method name="getWidget" signature="getWidget()" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="iterator" signature="iterator()" >
        <return type="java.util.Iterator" />
      </method>
      <method name="remove" signature="remove(com.google.gwt.user.client.ui.Widget)" >
        <return type="boolean" />
      </method>
      <method name="setWidget" signature="setWidget(com.google.gwt.user.client.ui.Widget)" />
      <method name="getCellElement" signature="getCellElement(int,int)" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.DecoratedStackPanel" supertypes="com.google.gwt.user.client.ui.StackPanel" >
      <method name="createHeaderElem" signature="createHeaderElem()" >
        <return type="com.google.gwt.dom.client.Element" />
      </method>
      <method name="getHeaderTextElem" signature="getHeaderTextElem(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.dom.client.Element" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.DecoratedTabBar" supertypes="com.google.gwt.user.client.ui.TabBar" >
      <method name="createTabTextWrapper" signature="createTabTextWrapper()" >
        <return type="com.google.gwt.user.client.ui.SimplePanel" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.DecoratedTabPanel" supertypes="com.google.gwt.user.client.ui.TabPanel" >
      <method name="createTabTextWrapper" signature="createTabTextWrapper()" >
        <return type="com.google.gwt.user.client.ui.SimplePanel" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.DecoratorPanel" supertypes="com.google.gwt.user.client.ui.SimplePanel" >
      <method name="createTR" signature="createTR(java.lang.String)" >
        <return type="com.google.gwt.dom.client.Element" />
      </method>
      <method name="getCellElement" signature="getCellElement(int,int)" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="getContainerElement" signature="getContainerElement()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.DelegatingChangeListenerCollection" supertypes="com.google.gwt.user.client.ui.ChangeListener,com.google.gwt.user.client.ui.ChangeListenerCollection" />
    <class name="com.google.gwt.user.client.ui.DelegatingClickListenerCollection" supertypes="com.google.gwt.user.client.ui.ClickListener,com.google.gwt.user.client.ui.ClickListenerCollection" />
    <class name="com.google.gwt.user.client.ui.DelegatingFocusListenerCollection" supertypes="com.google.gwt.user.client.ui.FocusListener,com.google.gwt.user.client.ui.FocusListenerCollection" />
    <class name="com.google.gwt.user.client.ui.DelegatingKeyboardListenerCollection" supertypes="com.google.gwt.user.client.ui.KeyboardListener,com.google.gwt.user.client.ui.KeyboardListenerCollection" />
    <class name="com.google.gwt.user.client.ui.DialogBox" supertypes="com.google.gwt.safehtml.client.HasSafeHtml,com.google.gwt.user.client.ui.DecoratedPopupPanel,com.google.gwt.user.client.ui.HasHTML,com.google.gwt.user.client.ui.MouseListener" >
      <method name="getCaption" signature="getCaption()" >
        <return type="com.google.gwt.user.client.ui.DialogBox.Caption" />
      </method>
      <method name="getHTML" signature="getHTML()" >
        <return type="java.lang.String" />
      </method>
      <method name="getText" signature="getText()" >
        <return type="java.lang.String" />
      </method>
      <method name="setHTML" signature="setHTML(java.lang.String)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="setText" signature="setText(java.lang.String)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.DialogBox.CaptionImpl" supertypes="com.google.gwt.user.client.ui.DialogBox.Caption,com.google.gwt.user.client.ui.HTML" />
    <class name="com.google.gwt.user.client.ui.DirectionalTextHelper" supertypes="com.google.gwt.i18n.shared.HasDirectionEstimator,java.lang.Object" >
      <method name="getTextDirection" signature="getTextDirection()" >
        <return type="com.google.gwt.i18n.client.HasDirection.Direction" />
      </method>
      <method name="getText" signature="getText()" >
        <return type="java.lang.String" />
      </method>
      <method name="getHtml" signature="getHtml()" >
        <return type="java.lang.String" />
      </method>
      <method name="getTextOrHtml" signature="getTextOrHtml(boolean)" >
        <return type="java.lang.String" />
      </method>
      <method name="setText" signature="setText(java.lang.String)" >
      </method>
      <method name="setHtml" signature="setHtml(com.google.gwt.safehtml.shared.SafeHtml)" match="fullsignature" />
      <method name="setHtml" signature="setHtml(java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="setTextOrHtml" signature="setTextOrHtml(java.lang.String,boolean)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="setText" signature="setText(java.lang.String,com.google.gwt.i18n.client.HasDirection.Direction)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="setHtml" signature="setHtml(com.google.gwt.safehtml.shared.SafeHtml,com.google.gwt.i18n.client.HasDirection.Direction)" match="fullsignature" />
      <method name="setHtml" signature="setHtml(java.lang.String,com.google.gwt.i18n.client.HasDirection.Direction)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="setTextOrHtml" signature="setTextOrHtml(java.lang.String,com.google.gwt.i18n.client.HasDirection.Direction,boolean)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.DisclosureEvent" supertypes="java.util.EventObject" />
    <class name="com.google.gwt.user.client.ui.DisclosurePanel" supertypes="HasWidgets.ForIsWidget,com.google.gwt.event.logical.shared.HasCloseHandlers,com.google.gwt.event.logical.shared.HasOpenHandlers,com.google.gwt.user.client.ui.Composite,com.google.gwt.user.client.ui.FiresDisclosureEvents,com.google.gwt.user.client.ui.HasAnimation" >
      <constructor name="DisclosurePanel" signature="DisclosurePanel()" />
      <constructor name="DisclosurePanel" signature="DisclosurePanel(com.google.gwt.user.client.ui.DisclosurePanelImages,java.lang.String,boolean)" match="fullsignature" >
        <sink kind="xss" argpos="1" resource="web" />
      </constructor>
      <constructor name="DisclosurePanel" signature="DisclosurePanel(com.google.gwt.resources.client.ImageResource,com.google.gwt.resources.client.ImageResource,java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="2" resource="web" />
      </constructor>
      <constructor name="DisclosurePanel" signature="DisclosurePanel(java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="DisclosurePanel" signature="DisclosurePanel(java.lang.String,boolean)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="DisclosurePanel" signature="DisclosurePanel(com.google.gwt.user.client.ui.Widget)" match="fullsignature" />
      <constructor name="DisclosurePanel" signature="DisclosurePanel(com.google.gwt.user.client.ui.Widget,boolean)" match="fullsignature" />
      <method name="add" signature="add(com.google.gwt.user.client.ui.Widget)" />
      <method name="add" signature="add(com.google.gwt.user.client.ui.IsWidget)" />
      <method name="addEventHandler" signature="addEventHandler(com.google.gwt.user.client.ui.DisclosureHandler)" />
      <method name="clear" signature="clear()" />
      <method name="getContent" signature="getContent()" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="getHeader" signature="getHeader()" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="getHeaderTextAccessor" signature="getHeaderTextAccessor()" >
        <return type="com.google.gwt.user.client.ui.HasText" />
      </method>
      <method name="isAnimationEnabled" signature="isAnimationEnabled()" >
        <return type="boolean" />
      </method>
      <method name="isOpen" signature="isOpen()" >
        <return type="boolean" />
      </method>
      <method name="iterator" signature="iterator()" >
        <return type="java.util.Iterator" />
      </method>
      <method name="remove" signature="remove(com.google.gwt.user.client.ui.Widget)" >
        <return type="boolean" />
      </method>
      <method name="remove" signature="remove(com.google.gwt.user.client.ui.IsWidget)" >
        <return type="boolean" />
      </method>
      <method name="removeEventHandler" signature="removeEventHandler(com.google.gwt.user.client.ui.DisclosureHandler)" />
      <method name="setAnimationEnabled" signature="setAnimationEnabled(boolean)" />
      <method name="setContent" signature="setContent(com.google.gwt.user.client.ui.Widget)" />
      <method name="setHeader" signature="setHeader(com.google.gwt.user.client.ui.Widget)" />
      <method name="setOpen" signature="setOpen(boolean)" />
    </class>
    <class name="com.google.gwt.user.client.ui.DockLayoutPanel" supertypes="com.google.gwt.user.client.ui.AnimatedLayout,com.google.gwt.user.client.ui.ComplexPanel,com.google.gwt.user.client.ui.ProvidesResize,com.google.gwt.user.client.ui.RequiresResize" >

      <method name="getWidgetContainerElement" signature="getWidgetContainerElement(com.google.gwt.user.client.ui.Widget)" >
        <return type="com.google.gwt.dom.client.Element" />
      </method>
      <method name="getWidgetDirection" signature="getWidgetDirection(com.google.gwt.user.client.ui.Widget)" >
        <return type="com.google.gwt.user.client.ui.DockLayoutPanel.Direction" />
      </method>
      <method name="getWidgetSize" signature="getWidgetSize(com.google.gwt.user.client.ui.Widget)" >
        <return type="java.lang.Double" />
      </method>
      <method name="getCenterHeight" signature="getCenterHeight()" >
        <return type="double" />
      </method>
      <method name="getCenterWidth" signature="getCenterWidth()" >
        <return type="double" />
      </method>
      <method name="getResolvedDirection" signature="getResolvedDirection(com.google.gwt.user.client.ui.DockLayoutPanel.Direction)" >
        <return type="com.google.gwt.user.client.ui.DockLayoutPanel.Direction" />
      </method>
      <method name="getUnit" signature="getUnit()" >
        <return type="com.google.gwt.dom.client.Style.Unit" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.DockLayoutPanel.LayoutData" />
    <class name="com.google.gwt.user.client.ui.DockPanel" supertypes="com.google.gwt.user.client.ui.CellPanel,com.google.gwt.user.client.ui.HasAlignment" >
      <method name="getHorizontalAlignment" signature="getHorizontalAlignment()" >
        <return type="com.google.gwt.user.client.ui.HorizontalAlignmentConstant" />
      </method>
      <method name="getVerticalAlignment" signature="getVerticalAlignment()" >
        <return type="com.google.gwt.user.client.ui.VerticalAlignmentConstant" />
      </method>
      <method name="getWidgetDirection" signature="getWidgetDirection(com.google.gwt.user.client.ui.Widget)" >
        <return type="com.google.gwt.user.client.ui.DockPanel.DockLayoutConstant" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.DockPanel.LayoutData" />
    <class name="com.google.gwt.user.client.ui.DoubleBox" supertypes="com.google.gwt.user.client.ui.ValueBox" />
    <class name="com.google.gwt.user.client.ui.FileUpload" supertypes="com.google.gwt.event.dom.client.HasChangeHandlers,com.google.gwt.user.client.ui.FocusWidget,com.google.gwt.user.client.ui.HasEnabled,com.google.gwt.user.client.ui.HasName" >
      <method name="wrap" signature="wrap(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.user.client.ui.FileUpload" />
      </method>
      <method name="getFilename" signature="getFilename()" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="0" resource="web" />
      </method>
      <method name="getName" signature="getName()" >
        <return type="java.lang.String" />
      </method>
      <method name="isEnabled" signature="isEnabled()" >
        <return type="boolean" />
      </method>
      <method name="setEnabled" signature="setEnabled(boolean)" />
      <method name="setName" signature="setName(java.lang.String)" />
      <method name="click" signature="click()" />
    </class>
    <class name="com.google.gwt.user.client.ui.FiniteWidgetIterator" supertypes="java.lang.Object,java.util.Iterator" />
    <class name="com.google.gwt.user.client.ui.FlexTable" supertypes="com.google.gwt.user.client.ui.HTMLTable" >
      <method name="getCellCount" signature="getCellCount(int)" >
        <return type="int" />
      </method>
      <method name="getFlexCellFormatter" signature="getFlexCellFormatter()" >
        <return type="com.google.gwt.user.client.ui.FlexTable.FlexCellFormatter" />
      </method>
      <method name="getRowCount" signature="getRowCount()" >
        <return type="int" />
      </method>
      <method name="insertRow" signature="insertRow(int)" >
        <return type="int" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.FlowPanel" supertypes="InsertPanel.ForIsWidget,com.google.gwt.user.client.ui.ComplexPanel" />
    <class name="com.google.gwt.user.client.ui.FocusListenerAdapter" supertypes="com.google.gwt.user.client.ui.FocusListener,java.lang.Object" />
    <class name="com.google.gwt.user.client.ui.FocusListenerCollection" supertypes="java.util.ArrayList" />
    <class name="com.google.gwt.user.client.ui.FocusPanel" supertypes="com.google.gwt.event.dom.client.HasAllDragAndDropHandlers,com.google.gwt.event.dom.client.HasAllFocusHandlers,com.google.gwt.event.dom.client.HasAllGestureHandlers,com.google.gwt.event.dom.client.HasAllKeyHandlers,com.google.gwt.event.dom.client.HasAllMouseHandlers,com.google.gwt.event.dom.client.HasAllTouchHandlers,com.google.gwt.event.dom.client.HasClickHandlers,com.google.gwt.event.dom.client.HasDoubleClickHandlers,com.google.gwt.user.client.ui.HasFocus,com.google.gwt.user.client.ui.SimplePanel,com.google.gwt.user.client.ui.SourcesClickEvents,com.google.gwt.user.client.ui.SourcesMouseEvents,com.google.gwt.user.client.ui.SourcesMouseWheelEvents" >
      <method name="addBlurHandler" signature="addBlurHandler(com.google.gwt.event.dom.client.BlurHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragEndHandler" signature="addDragEndHandler(com.google.gwt.event.dom.client.DragEndHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragEnterHandler" signature="addDragEnterHandler(com.google.gwt.event.dom.client.DragEnterHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragHandler" signature="addDragHandler(com.google.gwt.event.dom.client.DragHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragLeaveHandler" signature="addDragLeaveHandler(com.google.gwt.event.dom.client.DragLeaveHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragOverHandler" signature="addDragOverHandler(com.google.gwt.event.dom.client.DragOverHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragStartHandler" signature="addDragStartHandler(com.google.gwt.event.dom.client.DragStartHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDropHandler" signature="addDropHandler(com.google.gwt.event.dom.client.DropHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addFocusHandler" signature="addFocusHandler(com.google.gwt.event.dom.client.FocusHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addFocusListener" signature="addFocusListener(com.google.gwt.user.client.ui.FocusListener)" >
      </method>
      <method name="addGestureChangeHandler" signature="addGestureChangeHandler(com.google.gwt.event.dom.client.GestureChangeHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addGestureEndHandler" signature="addGestureEndHandler(com.google.gwt.event.dom.client.GestureEndHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addGestureStartHandler" signature="addGestureStartHandler(com.google.gwt.event.dom.client.GestureStartHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addKeyboardListener" signature="addKeyboardListener(com.google.gwt.user.client.ui.KeyboardListener)" >
      </method>
      <method name="addKeyDownHandler" signature="addKeyDownHandler(com.google.gwt.event.dom.client.KeyDownHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addKeyPressHandler" signature="addKeyPressHandler(com.google.gwt.event.dom.client.KeyPressHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addKeyUpHandler" signature="addKeyUpHandler(com.google.gwt.event.dom.client.KeyUpHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseDownHandler" signature="addMouseDownHandler(com.google.gwt.event.dom.client.MouseDownHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseListener" signature="addMouseListener(com.google.gwt.user.client.ui.MouseListener)" >
      </method>
      <method name="addMouseMoveHandler" signature="addMouseMoveHandler(com.google.gwt.event.dom.client.MouseMoveHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseOutHandler" signature="addMouseOutHandler(com.google.gwt.event.dom.client.MouseOutHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseOverHandler" signature="addMouseOverHandler(com.google.gwt.event.dom.client.MouseOverHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseUpHandler" signature="addMouseUpHandler(com.google.gwt.event.dom.client.MouseUpHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseWheelHandler" signature="addMouseWheelHandler(com.google.gwt.event.dom.client.MouseWheelHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseWheelListener" signature="addMouseWheelListener(com.google.gwt.user.client.ui.MouseWheelListener)" >
      </method>
      <method name="addTouchCancelHandler" signature="addTouchCancelHandler(com.google.gwt.event.dom.client.TouchCancelHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addTouchEndHandler" signature="addTouchEndHandler(com.google.gwt.event.dom.client.TouchEndHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addTouchMoveHandler" signature="addTouchMoveHandler(com.google.gwt.event.dom.client.TouchMoveHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addTouchStartHandler" signature="addTouchStartHandler(com.google.gwt.event.dom.client.TouchStartHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="getTabIndex" signature="getTabIndex()" >
        <return type="int" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.FocusWidget" supertypes="com.google.gwt.event.dom.client.HasAllDragAndDropHandlers,com.google.gwt.event.dom.client.HasAllFocusHandlers,com.google.gwt.event.dom.client.HasAllGestureHandlers,com.google.gwt.event.dom.client.HasAllKeyHandlers,com.google.gwt.event.dom.client.HasAllMouseHandlers,com.google.gwt.event.dom.client.HasAllTouchHandlers,com.google.gwt.event.dom.client.HasClickHandlers,com.google.gwt.event.dom.client.HasDoubleClickHandlers,com.google.gwt.user.client.ui.HasEnabled,com.google.gwt.user.client.ui.HasFocus,com.google.gwt.user.client.ui.SourcesClickEvents,com.google.gwt.user.client.ui.SourcesMouseEvents,com.google.gwt.user.client.ui.Widget" >
      <method name="getFocusImpl" signature="getFocusImpl()" >
        <return type="com.google.gwt.user.client.ui.impl.FocusImpl" />
      </method>
      <method name="addBlurHandler" signature="addBlurHandler(com.google.gwt.event.dom.client.BlurHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragEndHandler" signature="addDragEndHandler(com.google.gwt.event.dom.client.DragEndHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragEnterHandler" signature="addDragEnterHandler(com.google.gwt.event.dom.client.DragEnterHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragHandler" signature="addDragHandler(com.google.gwt.event.dom.client.DragHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragLeaveHandler" signature="addDragLeaveHandler(com.google.gwt.event.dom.client.DragLeaveHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragOverHandler" signature="addDragOverHandler(com.google.gwt.event.dom.client.DragOverHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragStartHandler" signature="addDragStartHandler(com.google.gwt.event.dom.client.DragStartHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDropHandler" signature="addDropHandler(com.google.gwt.event.dom.client.DropHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addFocusHandler" signature="addFocusHandler(com.google.gwt.event.dom.client.FocusHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addGestureChangeHandler" signature="addGestureChangeHandler(com.google.gwt.event.dom.client.GestureChangeHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addGestureEndHandler" signature="addGestureEndHandler(com.google.gwt.event.dom.client.GestureEndHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addGestureStartHandler" signature="addGestureStartHandler(com.google.gwt.event.dom.client.GestureStartHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addKeyboardListener" signature="addKeyboardListener(com.google.gwt.user.client.ui.KeyboardListener)" >
      </method>
      <method name="addKeyDownHandler" signature="addKeyDownHandler(com.google.gwt.event.dom.client.KeyDownHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addKeyPressHandler" signature="addKeyPressHandler(com.google.gwt.event.dom.client.KeyPressHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addKeyUpHandler" signature="addKeyUpHandler(com.google.gwt.event.dom.client.KeyUpHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseDownHandler" signature="addMouseDownHandler(com.google.gwt.event.dom.client.MouseDownHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseListener" signature="addMouseListener(com.google.gwt.user.client.ui.MouseListener)" >
      </method>
      <method name="addMouseMoveHandler" signature="addMouseMoveHandler(com.google.gwt.event.dom.client.MouseMoveHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseOutHandler" signature="addMouseOutHandler(com.google.gwt.event.dom.client.MouseOutHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseOverHandler" signature="addMouseOverHandler(com.google.gwt.event.dom.client.MouseOverHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseUpHandler" signature="addMouseUpHandler(com.google.gwt.event.dom.client.MouseUpHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseWheelHandler" signature="addMouseWheelHandler(com.google.gwt.event.dom.client.MouseWheelHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseWheelListener" signature="addMouseWheelListener(com.google.gwt.user.client.ui.MouseWheelListener)" >
      </method>
      <method name="addTouchCancelHandler" signature="addTouchCancelHandler(com.google.gwt.event.dom.client.TouchCancelHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addTouchEndHandler" signature="addTouchEndHandler(com.google.gwt.event.dom.client.TouchEndHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addTouchMoveHandler" signature="addTouchMoveHandler(com.google.gwt.event.dom.client.TouchMoveHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addTouchStartHandler" signature="addTouchStartHandler(com.google.gwt.event.dom.client.TouchStartHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="getTabIndex" signature="getTabIndex()" >
        <return type="int" />
      </method>
      <method name="isEnabled" signature="isEnabled()" >
        <return type="boolean" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.FormHandlerCollection" supertypes="java.util.ArrayList" >
      <method name="fireOnSubmit" signature="fireOnSubmit(com.google.gwt.user.client.ui.FormPanel)" >
        <return type="boolean" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.FormPanel" supertypes="com.google.gwt.user.client.ui.FiresFormEvents,com.google.gwt.user.client.ui.SimplePanel,com.google.gwt.user.client.ui.impl.FormPanelImplHost" >
      <method name="wrap" signature="wrap(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.user.client.ui.FormPanel" />
      </method>
      <method name="wrap" signature="wrap(com.google.gwt.dom.client.Element,boolean)" >
        <return type="com.google.gwt.user.client.ui.FormPanel" />
      </method>
      <method name="addSubmitCompleteHandler" signature="addSubmitCompleteHandler(com.google.gwt.user.client.ui.FormPanel.SubmitCompleteHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addSubmitHandler" signature="addSubmitHandler(com.google.gwt.user.client.ui.FormPanel.SubmitHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="getAction" signature="getAction()" >
        <return type="java.lang.String" />
      </method>
      <method name="getEncoding" signature="getEncoding()" >
        <return type="java.lang.String" />
      </method>
      <method name="getMethod" signature="getMethod()" >
        <return type="java.lang.String" />
      </method>
      <method name="getTarget" signature="getTarget()" >
        <return type="java.lang.String" />
      </method>
      <method name="onFormSubmit" signature="onFormSubmit()" >
        <return type="boolean" />
      </method>
      <method name="onFrameLoad" signature="onFrameLoad()" />
      <method name="reset" signature="reset()" />
      <method name="setAction" signature="setAction(java.lang.String)" />
      <method name="setAction" signature="setAction(com.google.gwt.safehtml.shared.SafeUri)" />
      <method name="setEncoding" signature="setEncoding(java.lang.String)" />
      <method name="setMethod" signature="setMethod(java.lang.String)" />
      <method name="submit" signature="submit()" />
      <method name="onAttach" signature="onAttach()" />
      <method name="onDetach" signature="onDetach()" />
      <method name="getSynthesizedIFrame" signature="getSynthesizedIFrame()" >
        <return type="com.google.gwt.dom.client.Element" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.FormPanel.IFrameTemplate" supertypes="com.google.gwt.safehtml.client.SafeHtmlTemplates" >
      <method name="get" signature="get(java.lang.String)" >
        <return type="com.google.gwt.safehtml.shared.SafeHtml" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.FormPanel.SubmitCompleteEvent" supertypes="com.google.gwt.event.shared.GwtEvent" >
      <constructor name="SubmitCompleteEvent" signature="SubmitCompleteEvent(java.lang.String)" >
      </constructor>
      <method name="getType" signature="getType()" >
        <return type="com.google.gwt.user.client.ui.Type" />
      </method>
      <method name="getResults" signature="getResults()" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="dispatch" signature="dispatch(com.google.gwt.user.client.ui.FormPanel.SubmitCompleteHandler)" />
    </class>
    <class name="com.google.gwt.user.client.ui.FormPanel.SubmitCompleteHandler" supertypes="com.google.gwt.event.shared.EventHandler" />
    <class name="com.google.gwt.user.client.ui.FormPanel.SubmitEvent" supertypes="com.google.gwt.event.shared.GwtEvent" >
      <method name="getType" signature="getType()" >
        <return type="com.google.gwt.user.client.ui.Type" />
      </method>
      <method name="cancel" signature="cancel()" />
      <method name="isCanceled" signature="isCanceled()" >
        <return type="boolean" />
      </method>
      <method name="dispatch" signature="dispatch(FormPanel.SubmitHandler)" />
      <method name="setCanceled" signature="setCanceled(boolean)" />
    </class>
    <class name="com.google.gwt.user.client.ui.Frame" supertypes="com.google.gwt.event.dom.client.HasLoadHandlers,com.google.gwt.user.client.ui.Widget" >
      <constructor name="Frame" signature="Frame()" >
      </constructor>
      <constructor name="Frame" signature="Frame(java.lang.String)" match="fullsignature" >
        <sink kind="ssrf" argpos="0" resource="web" />
      </constructor>
      <constructor name="Frame" signature="Frame(com.google.gwt.dom.client.Element)" match="fullsignature" />
      <method name="wrap" signature="wrap(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.user.client.ui.Frame" />
      </method>
      <method name="getUrl" signature="getUrl()" >
        <return type="java.lang.String" />
      </method>
      <method name="setUrl" signature="setUrl(java.lang.String)" >
        <sink kind="ssrf" argpos="0" resource="web" />
      </method>
      <method name="setUrl" signature="setUrl(com.google.gwt.safehtml.shared.SafeUri)" />
    </class>
    <class name="com.google.gwt.user.client.ui.Grid" supertypes="com.google.gwt.user.client.ui.HTMLTable" >
      <method name="clearCell" signature="clearCell(int,int)" >
        <return type="boolean" />
      </method>
      <method name="getCellCount" signature="getCellCount(int)" >
        <return type="int" />
      </method>
      <method name="getColumnCount" signature="getColumnCount()" >
        <return type="int" />
      </method>
      <method name="getRowCount" signature="getRowCount()" >
        <return type="int" />
      </method>
      <method name="insertRow" signature="insertRow(int)" >
        <return type="int" />
      </method>
      <method name="createCell" signature="createCell()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.HeaderPanel" supertypes="com.google.gwt.user.client.ui.Panel,com.google.gwt.user.client.ui.RequiresResize" >
      <method name="getContentWidget" signature="getContentWidget()" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="getFooterWidget" signature="getFooterWidget()" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="getHeaderWidget" signature="getHeaderWidget()" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="iterator" signature="iterator()" >
        <return type="java.util.Iterator" />
      </method>
      <method name="remove" signature="remove(com.google.gwt.user.client.ui.Widget)" >
        <return type="boolean" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.Hidden" supertypes="com.google.gwt.editor.client.IsEditor,com.google.gwt.user.client.TakesValue,com.google.gwt.user.client.ui.HasName,com.google.gwt.user.client.ui.Widget" >
      <constructor name="Hidden" signature="Hidden()" />
      <constructor name="Hidden" signature="Hidden(java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="Hidden" signature="Hidden(java.lang.String,java.lang.String)" >
        <sink kind="xss" argpos="0,1" resource="web" />
      </constructor>
      <constructor name="Hidden" signature="Hidden(com.google.gwt.dom.client.Element)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <method name="wrap" signature="wrap(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.user.client.ui.Hidden" />
      </method>
      <method name="getDefaultValue" signature="getDefaultValue()" >
        <return type="java.lang.String" />
      </method>
      <method name="getID" signature="getID()" >
        <return type="java.lang.String" />
      </method>
      <method name="setDefaultValue" signature="setDefaultValue(java.lang.String)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="setID" signature="setID(java.lang.String)" />
      <method name="setValue" signature="setValue(java.lang.String)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.HorizontalPanel" supertypes="InsertPanel.ForIsWidget,com.google.gwt.user.client.ui.CellPanel,com.google.gwt.user.client.ui.HasAlignment" >
      <method name="add" signature="add(com.google.gwt.user.client.ui.Widget)" >
      </method>
      <method name="getHorizontalAlignment" signature="getHorizontalAlignment()" >
        <return type="com.google.gwt.user.client.ui.HorizontalAlignmentConstant" />
      </method>
      <method name="getVerticalAlignment" signature="getVerticalAlignment()" >
        <return type="com.google.gwt.user.client.ui.VerticalAlignmentConstant" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.HorizontalSplitPanel" supertypes="com.google.gwt.user.client.ui.SplitPanel" >
      <method name="getEndOfLineWidget" signature="getEndOfLineWidget()" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="getLeftWidget" signature="getLeftWidget()" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="getRightWidget" signature="getRightWidget()" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="getStartOfLineWidget" signature="getStartOfLineWidget()" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.HasDirectionalHtml" supertypes="com.google.gwt.user.client.ui.HasDirectionalText,com.google.gwt.user.client.ui.HasHTML" >
      <method name="setHTML" signature="setHTML(java.lang.String,com.google.gwt.i18n.client.HasDirection.Direction)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.HasDirectionalSafeHtml" supertypes="com.google.gwt.safehtml.client.HasSafeHtml,com.google.gwt.user.client.ui.HasDirectionalText" >
      <method name="setHTML" signature="setHTML(com.google.gwt.safehtml.shared.SafeHtml,com.google.gwt.i18n.client.HasDirection.Direction)" match="fullsignature" />
    </class>
    <class name="com.google.gwt.user.client.ui.HTML" supertypes="com.google.gwt.user.client.ui.HasDirectionalHtml,com.google.gwt.user.client.ui.HasDirectionalSafeHtml,com.google.gwt.user.client.ui.Label" >
      <constructor name="HTML" signature="HTML()" />
      <constructor name="HTML" signature="HTML(com.google.gwt.safehtml.shared.SafeHtml)" match="fullsignature" />
      <constructor name="HTML" signature="HTML(com.google.gwt.safehtml.shared.SafeHtml,com.google.gwt.user.client.ui.Direction)" match="fullsignature" />
      <constructor name="HTML" signature="HTML(com.google.gwt.safehtml.shared.SafeHtml,com.google.gwt.i18n.shared.DirectionEstimator)" match="fullsignature" />
      <constructor name="HTML" signature="HTML(java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="HTML" signature="HTML(java.lang.String,com.google.gwt.user.client.ui.Direction)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="HTML" signature="HTML(java.lang.String,boolean)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="HTML" signature="HTML(com.google.gwt.dom.client.Element)" match="fullsignature" />
      <method name="wrap" signature="wrap(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.user.client.ui.HTML" />
      </method>
      <method name="getTextOrHtml" signature="getTextOrHtml(boolean)" >
        <return type="java.lang.String" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.HTMLPanel" supertypes="com.google.gwt.user.client.ui.ComplexPanel" >
      <constructor name="HTMLPanel" signature="HTMLPanel(java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="HTMLPanel" signature="HTMLPanel(com.google.gwt.safehtml.shared.SafeHtml)" match="fullsignature" />
      <constructor name="HTMLPanel" signature="HTMLPanel(java.lang.String,java.lang.String)" >
        <sink kind="xss" argpos="0,1" resource="web" />
      </constructor>
      <method name="createUniqueId" signature="createUniqueId()" >
        <return type="java.lang.String" />
      </method>
      <method name="wrap" signature="wrap(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.user.client.ui.HTMLPanel" />
      </method>
      <method name="getElementById" signature="getElementById(java.lang.String)" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.HTMLTable" supertypes="com.google.gwt.event.dom.client.HasAllDragAndDropHandlers,com.google.gwt.event.dom.client.HasClickHandlers,com.google.gwt.event.dom.client.HasDoubleClickHandlers,com.google.gwt.user.client.ui.Panel,com.google.gwt.user.client.ui.SourcesTableEvents" >
      <method name="addDragEndHandler" signature="addDragEndHandler(com.google.gwt.event.dom.client.DragEndHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragEnterHandler" signature="addDragEnterHandler(com.google.gwt.event.dom.client.DragEnterHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragHandler" signature="addDragHandler(com.google.gwt.event.dom.client.DragHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragLeaveHandler" signature="addDragLeaveHandler(com.google.gwt.event.dom.client.DragLeaveHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragOverHandler" signature="addDragOverHandler(com.google.gwt.event.dom.client.DragOverHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragStartHandler" signature="addDragStartHandler(com.google.gwt.event.dom.client.DragStartHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDropHandler" signature="addDropHandler(com.google.gwt.event.dom.client.DropHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addTableListener" signature="addTableListener(com.google.gwt.user.client.ui.TableListener)" >
      </method>
      <method name="clearCell" signature="clearCell(int,int)" >
        <return type="boolean" />
      </method>
      <method name="getCellCount" signature="getCellCount(int)" >
        <return type="int" />
      </method>
      <method name="getCellForEvent" signature="getCellForEvent(com.google.gwt.event.dom.client.ClickEvent)" >
        <return type="com.google.gwt.user.client.ui.HTMLTable.Cell" />
      </method>
      <method name="getCellFormatter" signature="getCellFormatter()" >
        <return type="com.google.gwt.user.client.ui.HTMLTable.CellFormatter" />
      </method>
      <method name="getCellPadding" signature="getCellPadding()" >
        <return type="int" />
      </method>
      <method name="getCellSpacing" signature="getCellSpacing()" >
        <return type="int" />
      </method>
      <method name="getColumnFormatter" signature="getColumnFormatter()" >
        <return type="com.google.gwt.user.client.ui.HTMLTable.ColumnFormatter" />
      </method>
      <method name="getHTML" signature="getHTML(int,int)" >
        <return type="java.lang.String" />
      </method>
      <method name="getRowCount" signature="getRowCount()" >
        <return type="int" />
      </method>
      <method name="getRowFormatter" signature="getRowFormatter()" >
        <return type="com.google.gwt.user.client.ui.HTMLTable.RowFormatter" />
      </method>
      <method name="getText" signature="getText(int,int)" >
        <return type="java.lang.String" />
      </method>
      <method name="getWidget" signature="getWidget(int,int)" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="isCellPresent" signature="isCellPresent(int,int)" >
        <return type="boolean" />
      </method>
      <method name="iterator" signature="iterator()" >
        <return type="java.util.Iterator" />
      </method>
      <method name="remove" signature="remove(com.google.gwt.user.client.ui.Widget)" >
        <return type="boolean" />
      </method>
      <method name="removeTableListener" signature="removeTableListener(com.google.gwt.user.client.ui.TableListener)" >
      </method>
      <method name="setHTML" signature="setHTML(int,int,java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="2" resource="web" />
      </method>
      <method name="setHTML" signature="setHTML(int,int,com.google.gwt.safehtml.shared.SafeHtml)" match="fullsignature" />
      <method name="setText" signature="setText(int,int,java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="createCell" signature="createCell()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="getBodyElement" signature="getBodyElement()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="getDOMCellCount" signature="getDOMCellCount(com.google.gwt.dom.client.Element,int)" >
        <return type="int" />
      </method>
      <method name="getDOMCellCount" signature="getDOMCellCount(com.google.gwt.user.client.Element,int)" >
        <return type="int" />
      </method>
      <method name="getDOMCellCount" signature="getDOMCellCount(int)" >
        <return type="int" />
      </method>
      <method name="getDOMRowCount" signature="getDOMRowCount()" >
        <return type="int" />
      </method>
      <method name="getDOMRowCount" signature="getDOMRowCount(com.google.gwt.dom.client.Element)" >
        <return type="int" />
      </method>
      <method name="getDOMRowCount" signature="getDOMRowCount(com.google.gwt.user.client.Element)" >
        <return type="int" />
      </method>
      <method name="getEventTargetCell" signature="getEventTargetCell(com.google.gwt.user.client.Event)" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="insertRow" signature="insertRow(int)" >
        <return type="int" />
      </method>
      <method name="internalClearCell" signature="internalClearCell(com.google.gwt.dom.client.Element,boolean)" >
        <return type="boolean" />
      </method>
      <method name="internalClearCell" signature="internalClearCell(com.google.gwt.user.client.Element,boolean)" >
        <return type="boolean" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.Hyperlink" supertypes="com.google.gwt.event.dom.client.HasClickHandlers,com.google.gwt.i18n.shared.HasDirectionEstimator,com.google.gwt.user.client.ui.HasDirectionalSafeHtml,com.google.gwt.user.client.ui.HasHTML,com.google.gwt.user.client.ui.SourcesClickEvents,com.google.gwt.user.client.ui.Widget" >
      <constructor name="Hyperlink" signature="Hyperlink()" />
      <constructor name="Hyperlink" signature="Hyperlink(com.google.gwt.safehtml.shared.SafeHtml,java.lang.String)" match="fullsignature" />
      <constructor name="Hyperlink" signature="Hyperlink(com.google.gwt.safehtml.shared.SafeHtml,com.google.gwt.i18n.client.HasDirection.Direction,java.lang.String)" match="fullsignature" />
      <constructor name="Hyperlink" signature="Hyperlink(com.google.gwt.safehtml.shared.SafeHtml,com.google.gwt.i18n.shared.DirectionEstimator,java.lang.String)" match="fullsignature" />
      <constructor name="Hyperlink" signature="Hyperlink(java.lang.String,java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="Hyperlink" signature="Hyperlink(java.lang.String,com.google.gwt.i18n.client.HasDirection.Direction,java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="Hyperlink" signature="Hyperlink(java.lang.String,com.google.gwt.i18n.shared.DirectionEstimator,java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="Hyperlink" signature="Hyperlink(java.lang.String,boolean,java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="Hyperlink" signature="Hyperlink(com.google.gwt.dom.client.Element)" match="fullsignature" />
      <method name="getTargetHistoryToken" signature="getTargetHistoryToken()" >
        <return type="java.lang.String" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.Image" supertypes="com.google.gwt.event.dom.client.HasAllDragAndDropHandlers,com.google.gwt.event.dom.client.HasAllGestureHandlers,com.google.gwt.event.dom.client.HasAllMouseHandlers,com.google.gwt.event.dom.client.HasAllTouchHandlers,com.google.gwt.event.dom.client.HasClickHandlers,com.google.gwt.event.dom.client.HasDoubleClickHandlers,com.google.gwt.event.dom.client.HasErrorHandlers,com.google.gwt.event.dom.client.HasLoadHandlers,com.google.gwt.user.client.ui.SourcesClickEvents,com.google.gwt.user.client.ui.SourcesLoadEvents,com.google.gwt.user.client.ui.SourcesMouseEvents,com.google.gwt.user.client.ui.Widget" >
      <constructor name="Image" signature="Image()" />
      <constructor name="Image" signature="Image(com.google.gwt.resources.client.ImageResource)" match="fullsignature" />
      <constructor name="Image" signature="Image(java.lang.String)" match="fullsignature" >
        <sink kind="ssrf" argpos="0" resource="web" />
      </constructor>
      <constructor name="Image" signature="Image(com.google.gwt.safehtml.shared.SafeUri)" match="fullsignature" />
      <constructor name="Image" signature="Image(java.lang.String,int,int,int,int)" match="fullsignature" >
        <sink kind="ssrf" argpos="0" resource="web" />
      </constructor>
      <constructor name="Image" signature="Image(com.google.gwt.safehtml.shared.SafeUri,int,int,int,int)" match="fullsignature" />
      <constructor name="Image" signature="Image(com.google.gwt.dom.client.Element)" match="fullsignature" />
      <method name="prefetch" signature="prefetch(java.lang.String)" match="fullsignature" >
        <sink kind="ssrf" argpos="0" resource="web" />
      </method>
      <method name="prefetch" signature="prefetch(com.google.gwt.safehtml.shared.SafeUri)" match="fullsignature" />
      <method name="wrap" signature="wrap(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.user.client.ui.Image" />
      </method>
      <method name="addDragEndHandler" signature="addDragEndHandler(com.google.gwt.event.dom.client.DragEndHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragEnterHandler" signature="addDragEnterHandler(com.google.gwt.event.dom.client.DragEnterHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragHandler" signature="addDragHandler(com.google.gwt.event.dom.client.DragHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragLeaveHandler" signature="addDragLeaveHandler(com.google.gwt.event.dom.client.DragLeaveHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragOverHandler" signature="addDragOverHandler(com.google.gwt.event.dom.client.DragOverHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragStartHandler" signature="addDragStartHandler(com.google.gwt.event.dom.client.DragStartHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDropHandler" signature="addDropHandler(com.google.gwt.event.dom.client.DropHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addGestureChangeHandler" signature="addGestureChangeHandler(com.google.gwt.event.dom.client.GestureChangeHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addGestureEndHandler" signature="addGestureEndHandler(com.google.gwt.event.dom.client.GestureEndHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addGestureStartHandler" signature="addGestureStartHandler(com.google.gwt.event.dom.client.GestureStartHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseDownHandler" signature="addMouseDownHandler(com.google.gwt.event.dom.client.MouseDownHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseMoveHandler" signature="addMouseMoveHandler(com.google.gwt.event.dom.client.MouseMoveHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseOutHandler" signature="addMouseOutHandler(com.google.gwt.event.dom.client.MouseOutHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseOverHandler" signature="addMouseOverHandler(com.google.gwt.event.dom.client.MouseOverHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseUpHandler" signature="addMouseUpHandler(com.google.gwt.event.dom.client.MouseUpHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseWheelHandler" signature="addMouseWheelHandler(com.google.gwt.event.dom.client.MouseWheelHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseWheelListener" signature="addMouseWheelListener(com.google.gwt.user.client.ui.MouseWheelListener)" >
      </method>
      <method name="addTouchCancelHandler" signature="addTouchCancelHandler(com.google.gwt.event.dom.client.TouchCancelHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addTouchEndHandler" signature="addTouchEndHandler(com.google.gwt.event.dom.client.TouchEndHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addTouchMoveHandler" signature="addTouchMoveHandler(com.google.gwt.event.dom.client.TouchMoveHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addTouchStartHandler" signature="addTouchStartHandler(com.google.gwt.event.dom.client.TouchStartHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="getAltText" signature="getAltText()" >
        <return type="java.lang.String" />
      </method>
      <method name="getHeight" signature="getHeight()" >
        <return type="int" />
      </method>
      <method name="getOriginLeft" signature="getOriginLeft()" >
        <return type="int" />
      </method>
      <method name="getOriginTop" signature="getOriginTop()" >
        <return type="int" />
      </method>
      <method name="getUrl" signature="getUrl()" >
        <return type="java.lang.String" />
      </method>
      <method name="getWidth" signature="getWidth()" >
        <return type="int" />
      </method>
      <method name="setAltText" signature="setAltText(java.lang.String)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="setResource" signature="setResource(com.google.gwt.resources.client.ImageResource)" />
      <method name="setUrl" signature="setUrl(com.google.gwt.safehtml.shared.SafeUri)" />
      <method name="setUrl" signature="setUrl(java.lang.String)" >
        <sink kind="ssrf" argpos="0" resource="web" />
      </method>
      <method name="setUrlAndVisibleRect" signature="setUrlAndVisibleRect(com.google.gwt.safehtml.shared.SafeUri,int,int,int,int)" />
      <method name="setUrlAndVisibleRect" signature="setUrlAndVisibleRect(java.lang.String,int,int,int,int)" >
        <sink kind="ssrf" argpos="0" resource="web" />
      </method>
      <method name="setVisibleRect" signature="setVisibleRect(int,int,int,int)" />
      <method name="onLoad" signature="onLoad()" />
    </class>
    <class name="com.google.gwt.user.client.ui.ImageResourceRenderer" supertypes="com.google.gwt.text.shared.AbstractSafeHtmlRenderer" >
      <method name="render" signature="render(com.google.gwt.resources.client.ImageResource)" >
        <return type="com.google.gwt.safehtml.shared.SafeHtml" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.InlineHTML" supertypes="com.google.gwt.user.client.ui.HTML" >
      <constructor name="InlineHTML" signature="InlineHTML()" />
      <constructor name="InlineHTML" signature="InlineHTML(com.google.gwt.safehtml.shared.SafeHtml)" match="fullsignature" />
      <constructor name="InlineHTML" signature="InlineHTML(com.google.gwt.safehtml.shared.SafeHtml,com.google.gwt.user.client.ui.Direction)" match="fullsignature" />
      <constructor name="InlineHTML" signature="InlineHTML(com.google.gwt.safehtml.shared.SafeHtml,com.google.gwt.i18n.shared.DirectionEstimator)" match="fullsignature" />
      <constructor name="InlineHTML" signature="InlineHTML(java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="InlineHTML" signature="InlineHTML(java.lang.String,com.google.gwt.user.client.ui.Direction)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="InlineHTML" signature="InlineHTML(com.google.gwt.dom.client.Element)" match="fullsignature" />
    </class>
    <class name="com.google.gwt.user.client.ui.InlineHyperlink" supertypes="com.google.gwt.user.client.ui.Hyperlink" >
      <constructor name="InlineHyperlink" signature="InlineHyperlink()" />
      <constructor name="InlineHyperlink" signature="InlineHyperlink(com.google.gwt.safehtml.shared.SafeHtml,java.lang.String)" match="fullsignature" />
      <constructor name="InlineHyperlink" signature="InlineHyperlink(com.google.gwt.safehtml.shared.SafeHtml,com.google.gwt.i18n.client.HasDirection.Direction,java.lang.String)" match="fullsignature" />
      <constructor name="InlineHyperlink" signature="InlineHyperlink(com.google.gwt.safehtml.shared.SafeHtml,com.google.gwt.i18n.shared.DirectionEstimator,java.lang.String)" match="fullsignature" />
      <constructor name="InlineHyperlink" signature="InlineHyperlink(java.lang.String,java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="InlineHyperlink" signature="InlineHyperlink(java.lang.String,com.google.gwt.i18n.client.HasDirection.Direction,java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="InlineHyperlink" signature="InlineHyperlink(java.lang.String,com.google.gwt.i18n.shared.DirectionEstimator,java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="InlineHyperlink" signature="InlineHyperlink(java.lang.String,boolean,java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
    </class>
    <class name="com.google.gwt.user.client.ui.InlineLabel" supertypes="com.google.gwt.user.client.ui.Label" >
      <constructor name="InlineLabel" signature="InlineLabel()" />
      <constructor name="InlineLabel" signature="InlineLabel(java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="InlineLabel" signature="InlineLabel(java.lang.String,com.google.gwt.user.client.ui.Direction)" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="InlineLabel" signature="InlineLabel(java.lang.String,com.google.gwt.i18n.shared.DirectionEstimator)" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="InlineLabel" signature="InlineLabel(com.google.gwt.dom.client.Element)" match="fullsignature" />
      <method name="wrap" signature="wrap(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.user.client.ui.InlineLabel" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.IntegerBox" supertypes="com.google.gwt.user.client.ui.ValueBox" />
    <class name="com.google.gwt.user.client.ui.KeyboardListenerAdapter" supertypes="com.google.gwt.user.client.ui.KeyboardListener,java.lang.Object" />
    <class name="com.google.gwt.user.client.ui.KeyboardListenerCollection" supertypes="java.util.ArrayList"/>
    <class name="com.google.gwt.user.client.ui.Label" supertypes="com.google.gwt.editor.client.IsEditor,com.google.gwt.event.dom.client.HasAllDragAndDropHandlers,com.google.gwt.event.dom.client.HasAllGestureHandlers,com.google.gwt.event.dom.client.HasAllMouseHandlers,com.google.gwt.event.dom.client.HasAllTouchHandlers,com.google.gwt.event.dom.client.HasClickHandlers,com.google.gwt.event.dom.client.HasDoubleClickHandlers,com.google.gwt.i18n.client.HasDirection,com.google.gwt.user.client.ui.HasDirectionalText,com.google.gwt.user.client.ui.LabelBase,com.google.gwt.user.client.ui.SourcesClickEvents,com.google.gwt.user.client.ui.SourcesMouseEvents" >
      <constructor name="Label" signature="Label()" />
      <constructor name="Label" signature="Label(java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="Label" signature="Label(java.lang.String,com.google.gwt.user.client.ui.Direction)" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="Label" signature="Label(java.lang.String,com.google.gwt.i18n.shared.DirectionEstimator)" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="Label" signature="Label(java.lang.String,boolean)" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="Label" signature="Label(com.google.gwt.dom.client.Element)" match="fullsignature" />
      <method name="wrap" signature="wrap(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.user.client.ui.Label" />
      </method>
      <method name="addDragEndHandler" signature="addDragEndHandler(com.google.gwt.event.dom.client.DragEndHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragEnterHandler" signature="addDragEnterHandler(com.google.gwt.event.dom.client.DragEnterHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragHandler" signature="addDragHandler(com.google.gwt.event.dom.client.DragHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragLeaveHandler" signature="addDragLeaveHandler(com.google.gwt.event.dom.client.DragLeaveHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragOverHandler" signature="addDragOverHandler(com.google.gwt.event.dom.client.DragOverHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDragStartHandler" signature="addDragStartHandler(com.google.gwt.event.dom.client.DragStartHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDropHandler" signature="addDropHandler(com.google.gwt.event.dom.client.DropHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addGestureChangeHandler" signature="addGestureChangeHandler(com.google.gwt.event.dom.client.GestureChangeHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addGestureEndHandler" signature="addGestureEndHandler(com.google.gwt.event.dom.client.GestureEndHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addGestureStartHandler" signature="addGestureStartHandler(com.google.gwt.event.dom.client.GestureStartHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseDownHandler" signature="addMouseDownHandler(com.google.gwt.event.dom.client.MouseDownHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseListener" signature="addMouseListener(com.google.gwt.user.client.ui.MouseListener)" />
      <method name="addMouseMoveHandler" signature="addMouseMoveHandler(com.google.gwt.event.dom.client.MouseMoveHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseOutHandler" signature="addMouseOutHandler(com.google.gwt.event.dom.client.MouseOutHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseOverHandler" signature="addMouseOverHandler(com.google.gwt.event.dom.client.MouseOverHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseUpHandler" signature="addMouseUpHandler(com.google.gwt.event.dom.client.MouseUpHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseWheelHandler" signature="addMouseWheelHandler(com.google.gwt.event.dom.client.MouseWheelHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addTouchCancelHandler" signature="addTouchCancelHandler(com.google.gwt.event.dom.client.TouchCancelHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addTouchEndHandler" signature="addTouchEndHandler(com.google.gwt.event.dom.client.TouchEndHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addTouchMoveHandler" signature="addTouchMoveHandler(com.google.gwt.event.dom.client.TouchMoveHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addTouchStartHandler" signature="addTouchStartHandler(com.google.gwt.event.dom.client.TouchStartHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="setText" signature="setText(java.lang.String,com.google.gwt.user.client.ui.Direction)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.LabelBase" supertypes="com.google.gwt.i18n.shared.HasDirectionEstimator,com.google.gwt.user.client.ui.HasAutoHorizontalAlignment,com.google.gwt.user.client.ui.HasWordWrap,com.google.gwt.user.client.ui.Widget" />
    <class name="com.google.gwt.user.client.ui.LayoutCommand" supertypes="com.google.gwt.core.client.Scheduler.ScheduledCommand,java.lang.Object" />
    <class name="com.google.gwt.user.client.ui.LayoutPanel" supertypes="com.google.gwt.user.client.ui.AnimatedLayout,com.google.gwt.user.client.ui.ComplexPanel,com.google.gwt.user.client.ui.ProvidesResize,com.google.gwt.user.client.ui.RequiresResize" >
      <method name="getWidgetContainerElement" signature="getWidgetContainerElement(com.google.gwt.user.client.ui.Widget)" >
        <return type="com.google.gwt.dom.client.Element" />
      </method>
      <method name="getLayout" signature="getLayout()" >
        <return type="com.google.gwt.layout.client.Layout" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.LazyPanel" supertypes="com.google.gwt.user.client.ui.SimplePanel" >
      <method name="createWidget" signature="createWidget()" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.ListBox" supertypes="com.google.gwt.event.dom.client.HasChangeHandlers,com.google.gwt.i18n.shared.HasDirectionEstimator,com.google.gwt.user.client.ui.FocusWidget,com.google.gwt.user.client.ui.HasName,com.google.gwt.user.client.ui.SourcesChangeEvents" >
      <method name="wrap" signature="wrap(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.user.client.ui.ListBox" />
      </method>
      <method name="getItemCount" signature="getItemCount()" >
        <return type="int" />
      </method>
      <method name="getItemText" signature="getItemText(int)" >
        <return type="java.lang.String" />
      </method>
      <method name="getSelectedItemText" signature="getSelectedItemText()" >
        <return type="java.lang.String" />
      </method>
      <method name="getSelectedIndex" signature="getSelectedIndex()" >
        <return type="int" />
      </method>
      <method name="getValue" signature="getValue(int)" >
        <return type="java.lang.String" />
      </method>
      <method name="getSelectedValue" signature="getSelectedValue()" >
        <return type="java.lang.String" />
      </method>
      <method name="getVisibleItemCount" signature="getVisibleItemCount()" >
        <return type="int" />
      </method>
      <method name="insertItem" signature="insertItem(java.lang.String,int)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="insertItem" signature="insertItem(java.lang.String,com.google.gwt.i18n.client.HasDirection.Direction,int)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="insertItem" signature="insertItem(java.lang.String,java.lang.String,int)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="insertItem" signature="insertItem(java.lang.String,com.google.gwt.i18n.client.HasDirection.Direction,java.lang.String,int)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="isItemSelected" signature="isItemSelected(int)" >
        <return type="boolean" />
      </method>
      <method name="isMultipleSelect" signature="isMultipleSelect()" >
        <return type="boolean" />
      </method>
      <method name="setValue" signature="setValue(int,java.lang.String)" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="getOptionText" signature="getOptionText(com.google.gwt.dom.client.OptionElement)" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="setOptionText" signature="setOptionText(com.google.gwt.dom.client.OptionElement,java.lang.String,com.google.gwt.i18n.client.HasDirection.Direction)" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="setItemText" signature="setItemText(int,java.lang.String)" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="setItemText" signature="setItemText(int,java.lang.String,com.google.gwt.i18n.client.HasDirection.Direction)" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.ListenerWrapper" supertypes="com.google.gwt.user.client.BaseListenerWrapper" >
      <method name="getSource" signature="getSource(com.google.gwt.event.shared.GwtEvent)" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.ListenerWrapper.WrappedClickListener" supertypes="com.google.gwt.event.dom.client.ClickHandler,com.google.gwt.user.client.ui.ListenerWrapper" >
      <method name="add" signature="add(com.google.gwt.event.dom.client.HasClickHandlers,com.google.gwt.user.client.ui.ClickListener)" >
        <return type="com.google.gwt.user.client.ui.ListenerWrapper.WrappedClickListener" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.ListenerWrapper.WrappedFocusListener" supertypes="com.google.gwt.event.dom.client.BlurHandler,com.google.gwt.event.dom.client.FocusHandler,com.google.gwt.user.client.ui.ListenerWrapper" >
      <method name="add" signature="add(com.google.gwt.event.dom.client.HasAllFocusHandlers,com.google.gwt.user.client.ui.FocusListener)" >
        <return type="com.google.gwt.user.client.ui.ListenerWrapper.WrappedFocusListener" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.ListenerWrapper.WrappedKeyboardListener" supertypes="com.google.gwt.event.dom.client.KeyDownHandler,com.google.gwt.event.dom.client.KeyPressHandler,com.google.gwt.event.dom.client.KeyUpHandler,com.google.gwt.user.client.ui.ListenerWrapper" >
      <method name="add" signature="add(com.google.gwt.event.dom.client.HasAllKeyHandlers,com.google.gwt.user.client.ui.KeyboardListener)" >
        <return type="com.google.gwt.user.client.ui.ListenerWrapper.WrappedKeyboardListener" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.ListenerWrapper.WrappedLoadListener" supertypes="com.google.gwt.event.dom.client.ErrorHandler,com.google.gwt.event.dom.client.LoadHandler,com.google.gwt.user.client.ui.ListenerWrapper" >
      <method name="add" signature="add(com.google.gwt.user.client.ui.S,com.google.gwt.user.client.ui.LoadListener)" >
        <return type="com.google.gwt.user.client.ui.ListenerWrapper.WrappedLoadListener" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.ListenerWrapper.WrappedLogicalChangeListener" supertypes="com.google.gwt.event.logical.shared.ValueChangeHandler,com.google.gwt.user.client.ui.ListenerWrapper" >
      <method name="add" signature="add(com.google.gwt.event.logical.shared.HasValueChangeHandlers,com.google.gwt.user.client.ui.ChangeListener)" >
        <return type="com.google.gwt.user.client.ui.ListenerWrapper.WrappedLogicalChangeListener" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.ListenerWrapper.WrappedMouseListener" supertypes="com.google.gwt.event.dom.client.MouseDownHandler,com.google.gwt.event.dom.client.MouseMoveHandler,com.google.gwt.event.dom.client.MouseOutHandler,com.google.gwt.event.dom.client.MouseOverHandler,com.google.gwt.event.dom.client.MouseUpHandler,com.google.gwt.user.client.ui.ListenerWrapper" >
      <method name="add" signature="add(com.google.gwt.user.client.ui.E,com.google.gwt.user.client.ui.MouseListener)" >
        <return type="com.google.gwt.user.client.ui.ListenerWrapper.WrappedMouseListener" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.ListenerWrapper.WrappedMouseWheelListener" supertypes="com.google.gwt.event.dom.client.MouseWheelHandler,com.google.gwt.user.client.ui.ListenerWrapper" >
      <method name="add" signature="add(com.google.gwt.event.dom.client.HasMouseWheelHandlers,com.google.gwt.user.client.ui.MouseWheelListener)" >
        <return type="com.google.gwt.user.client.ui.ListenerWrapper.WrappedMouseWheelListener" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.ListenerWrapper.WrappedOldDisclosureHandler" supertypes="com.google.gwt.event.logical.shared.CloseHandler,com.google.gwt.event.logical.shared.OpenHandler,com.google.gwt.user.client.ui.ListenerWrapper" >
      <method name="add" signature="add(com.google.gwt.user.client.ui.DisclosurePanel,com.google.gwt.user.client.ui.DisclosureHandler)" >
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.ListenerWrapper.WrappedOldFormHandler" supertypes="FormPanel.SubmitCompleteHandler,FormPanel.SubmitHandler,com.google.gwt.user.client.ui.ListenerWrapper" />
    <class name="com.google.gwt.user.client.ui.ListenerWrapper.WrappedOldSuggestionHandler" supertypes="com.google.gwt.event.logical.shared.SelectionHandler,com.google.gwt.user.client.ui.ListenerWrapper" />
    <class name="com.google.gwt.user.client.ui.ListenerWrapper.WrappedPopupListener" supertypes="com.google.gwt.event.logical.shared.CloseHandler,com.google.gwt.user.client.ui.ListenerWrapper" />
    <class name="com.google.gwt.user.client.ui.ListenerWrapper.WrappedScrollListener" supertypes="com.google.gwt.event.dom.client.ScrollHandler,com.google.gwt.user.client.ui.ListenerWrapper" >
      <method name="add" signature="add(com.google.gwt.event.dom.client.HasScrollHandlers,com.google.gwt.user.client.ui.ScrollListener)" >
        <return type="com.google.gwt.user.client.ui.ListenerWrapper.WrappedScrollListener" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.ListenerWrapper.WrappedTabListener" supertypes="com.google.gwt.event.logical.shared.BeforeSelectionHandler,com.google.gwt.event.logical.shared.SelectionHandler,com.google.gwt.user.client.ui.ListenerWrapper" />
    <class name="com.google.gwt.user.client.ui.ListenerWrapper.WrappedTableListener" supertypes="com.google.gwt.event.dom.client.ClickHandler,com.google.gwt.user.client.ui.ListenerWrapper" />
    <class name="com.google.gwt.user.client.ui.ListenerWrapper.WrappedTreeListener" supertypes="com.google.gwt.event.logical.shared.CloseHandler,com.google.gwt.event.logical.shared.OpenHandler,com.google.gwt.event.logical.shared.SelectionHandler,com.google.gwt.user.client.ui.ListenerWrapper" />
    <class name="com.google.gwt.user.client.ui.LoadListener" supertypes="java.util.EventListener" />
    <class name="com.google.gwt.user.client.ui.LoadListenerCollection" supertypes="java.util.ArrayList" />
    <class name="com.google.gwt.user.client.ui.LongBox" supertypes="com.google.gwt.user.client.ui.ValueBox" />
    <class name="com.google.gwt.user.client.ui.MenuBar" supertypes="com.google.gwt.event.logical.shared.HasCloseHandlers,com.google.gwt.user.client.ui.HasAnimation,com.google.gwt.user.client.ui.PopupListener,com.google.gwt.user.client.ui.Widget" >
      <method name="addItem" signature="addItem(com.google.gwt.user.client.ui.MenuItem)" >
        <return type="com.google.gwt.user.client.ui.MenuItem" />
      </method>
      <method name="addItem" signature="addItem(com.google.gwt.safehtml.shared.SafeHtml,com.google.gwt.core.client.Scheduler.ScheduledCommand)" >
        <return type="com.google.gwt.user.client.ui.MenuItem" />
      </method>
      <method name="addItem" signature="addItem(java.lang.String,boolean,com.google.gwt.core.client.Scheduler.ScheduledCommand)" >
        <return type="com.google.gwt.user.client.ui.MenuItem" />
      </method>
      <method name="addItem" signature="addItem(com.google.gwt.safehtml.shared.SafeHtml,com.google.gwt.user.client.ui.MenuBar)" >
        <return type="com.google.gwt.user.client.ui.MenuItem" />
      </method>
      <method name="addItem" signature="addItem(java.lang.String,boolean,com.google.gwt.user.client.ui.MenuBar)" >
        <return type="com.google.gwt.user.client.ui.MenuItem" />
      </method>
      <method name="addItem" signature="addItem(java.lang.String,com.google.gwt.core.client.Scheduler.ScheduledCommand)" >
        <return type="com.google.gwt.user.client.ui.MenuItem" />
      </method>
      <method name="addItem" signature="addItem(java.lang.String,com.google.gwt.user.client.ui.MenuBar)" >
        <return type="com.google.gwt.user.client.ui.MenuItem" />
      </method>
      <method name="addSeparator" signature="addSeparator()" >
        <return type="com.google.gwt.user.client.ui.MenuItemSeparator" />
      </method>
      <method name="addSeparator" signature="addSeparator(com.google.gwt.user.client.ui.MenuItemSeparator)" >
        <return type="com.google.gwt.user.client.ui.MenuItemSeparator" />
      </method>
      <method name="getAutoOpen" signature="getAutoOpen()" >
        <return type="boolean" />
      </method>
      <method name="getItemIndex" signature="getItemIndex(com.google.gwt.user.client.ui.MenuItem)" >
        <return type="int" />
      </method>
      <method name="getSeparatorIndex" signature="getSeparatorIndex(com.google.gwt.user.client.ui.MenuItemSeparator)" >
        <return type="int" />
      </method>
      <method name="insertItem" signature="insertItem(com.google.gwt.user.client.ui.MenuItem,int)" >
        <return type="com.google.gwt.user.client.ui.MenuItem" />
      </method>
      <method name="insertSeparator" signature="insertSeparator(int)" >
        <return type="com.google.gwt.user.client.ui.MenuItemSeparator" />
      </method>
      <method name="insertSeparator" signature="insertSeparator(com.google.gwt.user.client.ui.MenuItemSeparator,int)" >
        <return type="com.google.gwt.user.client.ui.MenuItemSeparator" />
      </method>
      <method name="isFocusOnHoverEnabled" signature="isFocusOnHoverEnabled()" >
        <return type="boolean" />
      </method>
      <method name="getItems" signature="getItems()" >
        <return type="java.util.List" />
      </method>
      <method name="getSelectedItem" signature="getSelectedItem()" >
        <return type="com.google.gwt.user.client.ui.MenuItem" />
      </method>
      <method name="getPopup" signature="getPopup()" >
        <return type="com.google.gwt.user.client.ui.PopupPanel" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.MenuItem" supertypes="com.google.gwt.safehtml.client.HasSafeHtml,com.google.gwt.user.client.ui.HasEnabled,com.google.gwt.user.client.ui.HasHTML,com.google.gwt.user.client.ui.UIObject" >
      <constructor name="MenuItem" signature="MenuItem(com.google.gwt.safehtml.shared.SafeHtml)" match="fullsignature" />
      <constructor name="MenuItem" signature="MenuItem(com.google.gwt.safehtml.shared.SafeHtml,com.google.gwt.core.client.Scheduler.ScheduledCommand)" match="fullsignature" />
      <constructor name="MenuItem" signature="MenuItem(com.google.gwt.safehtml.shared.SafeHtml,com.google.gwt.user.client.ui.MenuBar)" match="fullsignature" />
      <constructor name="MenuItem" signature="MenuItem(java.lang.String,boolean,com.google.gwt.core.client.Scheduler.ScheduledCommand)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="MenuItem" signature="MenuItem(java.lang.String,boolean,com.google.gwt.user.client.ui.MenuBar)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="MenuItem" signature="MenuItem(java.lang.String,com.google.gwt.core.client.Scheduler.ScheduledCommand)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="MenuItem" signature="MenuItem(java.lang.String,com.google.gwt.user.client.ui.MenuBar)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="MenuItem" signature="MenuItem(java.lang.String,boolean)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <method name="getCommand" signature="getCommand()" >
        <return type="com.google.gwt.user.client.Command" />
      </method>
      <method name="getParentMenu" signature="getParentMenu()" >
        <return type="com.google.gwt.user.client.ui.MenuBar" />
      </method>
      <method name="getScheduledCommand" signature="getScheduledCommand()" >
        <return type="com.google.gwt.core.client.Scheduler.ScheduledCommand" />
      </method>
      <method name="getSubMenu" signature="getSubMenu()" >
        <return type="com.google.gwt.user.client.ui.MenuBar" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.MenuItemSeparator" supertypes="com.google.gwt.user.client.ui.UIObject" >
      <method name="getParentMenu" signature="getParentMenu()" >
        <return type="com.google.gwt.user.client.ui.MenuBar" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.MouseListenerAdapter" supertypes="com.google.gwt.user.client.ui.MouseListener,java.lang.Object" />
    <class name="com.google.gwt.user.client.ui.MouseListenerCollection" supertypes="java.util.ArrayList" />
    <class name="com.google.gwt.user.client.ui.MouseWheelListenerCollection" supertypes="java.util.ArrayList" />
    <class name="com.google.gwt.user.client.ui.MouseWheelVelocity" >
      <method name="equals" signature="equals(java.lang.Object)" >
        <return type="boolean" />
      </method>
      <method name="getDeltaY" signature="getDeltaY()" >
        <return type="int" />
      </method>
      <method name="hashCode" signature="hashCode()" >
        <return type="int" />
      </method>
      <method name="isNorth" signature="isNorth()" >
        <return type="boolean" />
      </method>
      <method name="isSouth" signature="isSouth()" >
        <return type="boolean" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.MultiWordSuggestOracle" supertypes="com.google.gwt.user.client.ui.SuggestOracle" >
      <method name="isDisplayStringHTML" signature="isDisplayStringHTML()" >
        <return type="boolean" />
      </method>
      <method name="createSuggestion" signature="createSuggestion(java.lang.String,java.lang.String)" >
        <return type="com.google.gwt.user.client.ui.MultiWordSuggestOracle.MultiWordSuggestion" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.MultiWordSuggestOracle.MultiWordSuggestion" supertypes="com.google.gwt.user.client.rpc.IsSerializable,com.google.gwt.user.client.ui.SuggestOracle.Suggestion,com.google.gwt.user.client.ui.Suggestion,java.lang.Object" >
      <method name="getDisplayString" signature="getDisplayString()" >
        <return type="java.lang.String" />
      </method>
      <method name="getReplacementString" signature="getReplacementString()" >
        <return type="java.lang.String" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.NamedFrame" supertypes="com.google.gwt.user.client.ui.Frame" >
      <method name="getName" signature="getName()" >
        <return type="java.lang.String" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.NativeHorizontalScrollbar" supertypes="com.google.gwt.user.client.ui.AbstractNativeScrollbar,com.google.gwt.user.client.ui.HorizontalScrollbar" >
      <method name="getNativeHeight" signature="getNativeHeight()" >
        <return type="int" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.NativeVerticalScrollbar" supertypes="com.google.gwt.user.client.ui.AbstractNativeScrollbar,com.google.gwt.user.client.ui.VerticalScrollbar" >
      <method name="getMaximumVerticalScrollPosition" signature="getMaximumVerticalScrollPosition()" >
        <return type="int" />
      </method>
      <method name="getMinimumVerticalScrollPosition" signature="getMinimumVerticalScrollPosition()" >
        <return type="int" />
      </method>
      <method name="getScrollHeight" signature="getScrollHeight()" >
        <return type="int" />
      </method>
      <method name="getVerticalScrollPosition" signature="getVerticalScrollPosition()" >
        <return type="int" />
      </method>
      <method name="getNativeWidth" signature="getNativeWidth()" >
        <return type="int" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.NotificationMole" supertypes="com.google.gwt.user.client.ui.Composite" />
    <class name="com.google.gwt.user.client.ui.NumberLabel" supertypes="com.google.gwt.user.client.ui.ValueLabel" />
    <class name="com.google.gwt.user.client.ui.Panel" supertypes="HasWidgets.ForIsWidget,com.google.gwt.user.client.ui.Widget" >
      <method name="remove" signature="remove(com.google.gwt.user.client.ui.Widget)" >
        <return type="boolean" />
      </method>
      <method name="remove" signature="remove(com.google.gwt.user.client.ui.IsWidget)" >
        <return type="boolean" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.PasswordTextBox" supertypes="com.google.gwt.user.client.ui.TextBox" >
      <method name="wrap" signature="wrap(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.user.client.ui.PasswordTextBox" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.PopupListener" supertypes="java.util.EventListener" />
    <class name="com.google.gwt.user.client.ui.PopupListenerCollection" supertypes="java.util.ArrayList" />
    <class name="com.google.gwt.user.client.ui.PopupPanel" supertypes="com.google.gwt.event.logical.shared.HasCloseHandlers,com.google.gwt.user.client.EventPreview,com.google.gwt.user.client.ui.HasAnimation,com.google.gwt.user.client.ui.SimplePanel,com.google.gwt.user.client.ui.SourcesPopupEvents" >
      <method name="getGlassStyleName" signature="getGlassStyleName()" >
        <return type="java.lang.String" />
      </method>
      <method name="getOffsetHeight" signature="getOffsetHeight()" >
        <return type="int" />
      </method>
      <method name="getOffsetWidth" signature="getOffsetWidth()" >
        <return type="int" />
      </method>
      <method name="getPopupLeft" signature="getPopupLeft()" >
        <return type="int" />
      </method>
      <method name="getPopupTop" signature="getPopupTop()" >
        <return type="int" />
      </method>
      <method name="getTitle" signature="getTitle()" >
        <return type="java.lang.String" />
      </method>
      <method name="isAutoHideEnabled" signature="isAutoHideEnabled()" >
        <return type="boolean" />
      </method>
      <method name="isAutoHideOnHistoryEventsEnabled" signature="isAutoHideOnHistoryEventsEnabled()" >
        <return type="boolean" />
      </method>
      <method name="isGlassEnabled" signature="isGlassEnabled()" >
        <return type="boolean" />
      </method>
      <method name="isModal" signature="isModal()" >
        <return type="boolean" />
      </method>
      <method name="isPreviewingAllNativeEvents" signature="isPreviewingAllNativeEvents()" >
        <return type="boolean" />
      </method>
      <method name="isShowing" signature="isShowing()" >
        <return type="boolean" />
      </method>
      <method name="isVisible" signature="isVisible()" >
        <return type="boolean" />
      </method>
      <method name="onKeyDownPreview" signature="onKeyDownPreview(char,int)" >
        <return type="boolean" />
      </method>
      <method name="onKeyPressPreview" signature="onKeyPressPreview(char,int)" >
        <return type="boolean" />
      </method>
      <method name="onKeyUpPreview" signature="onKeyUpPreview(char,int)" >
        <return type="boolean" />
      </method>
      <method name="getContainerElement" signature="getContainerElement()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="getGlassElement" signature="getGlassElement()" >
        <return type="com.google.gwt.dom.client.Element" />
      </method>
      <method name="getStyleElement" signature="getStyleElement()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="getAnimationType" signature="getAnimationType()" >
        <return type="com.google.gwt.user.client.ui.PopupPanel.AnimationType" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.PotentialElement" supertypes="com.google.gwt.dom.client.Element" >
      <method name="as" signature="as(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.user.client.ui.PotentialElement" />
      </method>
      <method name="build" signature="build(com.google.gwt.user.client.ui.UIObject)" >
        <return type="com.google.gwt.user.client.ui.PotentialElement" />
      </method>
      <method name="build" signature="build(com.google.gwt.user.client.ui.UIObject,java.lang.String)" >
        <return type="com.google.gwt.user.client.ui.PotentialElement" />
      </method>
      <method name="createBuilderFor" signature="createBuilderFor(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.dom.builder.shared.HtmlElementBuilder" />
      </method>
      <method name="isPotential" signature="isPotential(com.google.gwt.core.client.JavaScriptObject)" >
        <return type="boolean" />
      </method>
      <method name="resolve" signature="resolve(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.dom.client.Element" />
      </method>
      <method name="setResolver" signature="setResolver(com.google.gwt.user.client.ui.UIObject)" >
        <return type="com.google.gwt.dom.client.Element" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.PrefixTree" supertypes="java.util.AbstractCollection" >
      <method name="createPrefixTree" signature="createPrefixTree(int)" >
        <return type="com.google.gwt.user.client.ui.PrefixTree" />
      </method>
      <method name="add" signature="add(java.lang.String)" >
        <return type="boolean" />
      </method>
      <method name="contains" signature="contains(java.lang.Object)" >
        <return type="boolean" />
      </method>
      <method name="contains" signature="contains(java.lang.String)" >
        <return type="boolean" />
      </method>
      <method name="getSuggestions" signature="getSuggestions(java.lang.String,int)" >
        <return type="java.util.List" />
      </method>
      <method name="iterator" signature="iterator()" >
        <return type="java.util.Iterator" />
      </method>
      <method name="size" signature="size()" >
        <return type="int" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.PushButton" supertypes="com.google.gwt.user.client.ui.CustomButton" >
      <constructor name="PushButton" signature="PushButton()" />
      <constructor name="PushButton" signature="PushButton(com.google.gwt.user.client.ui.Image)" match="fullsignature" />
      <constructor name="PushButton" signature="PushButton(com.google.gwt.user.client.ui.Image,com.google.gwt.event.dom.client.ClickHandler)" match="fullsignature" />
      <constructor name="PushButton" signature="PushButton(com.google.gwt.user.client.ui.Image,com.google.gwt.user.client.ui.ClickListener)" match="fullsignature" />
      <constructor name="PushButton" signature="PushButton(com.google.gwt.user.client.ui.Image,com.google.gwt.user.client.ui.Image)" match="fullsignature" />
      <constructor name="PushButton" signature="PushButton(com.google.gwt.user.client.ui.Image,com.google.gwt.user.client.ui.Image,com.google.gwt.event.dom.client.ClickHandler)" match="fullsignature" />
      <constructor name="PushButton" signature="PushButton(com.google.gwt.user.client.ui.Image,com.google.gwt.user.client.ui.Image,com.google.gwt.user.client.ui.ClickListener)" match="fullsignature" />
      <constructor name="PushButton" signature="PushButton(java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="PushButton" signature="PushButton(java.lang.String,com.google.gwt.event.dom.client.ClickHandler)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="PushButton" signature="PushButton(java.lang.String,com.google.gwt.user.client.ui.ClickListener)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="PushButton" signature="PushButton(java.lang.String,java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0,1" resource="web" />
      </constructor>
      <constructor name="PushButton" signature="PushButton(java.lang.String,java.lang.String,com.google.gwt.event.dom.client.ClickHandler)" match="fullsignature" >
        <sink kind="xss" argpos="0,1" resource="web" />
      </constructor>
      <constructor name="PushButton" signature="PushButton(java.lang.String,java.lang.String,com.google.gwt.user.client.ui.ClickListener)" match="fullsignature" >
        <sink kind="xss" argpos="0,1" resource="web" />
      </constructor>
    </class>
    <class name="com.google.gwt.user.client.ui.RadioButton" supertypes="com.google.gwt.user.client.ui.CheckBox" >
      <constructor name="RadioButton" signature="RadioButton(java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="RadioButton" signature="RadioButton(java.lang.String,com.google.gwt.safehtml.shared.SafeHtml)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="RadioButton" signature="RadioButton(java.lang.String,com.google.gwt.safehtml.shared.SafeHtml,com.google.gwt.i18n.client.HasDirection.Direction)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="RadioButton" signature="RadioButton(java.lang.String,com.google.gwt.safehtml.shared.SafeHtml,com.google.gwt.i18n.shared.DirectionEstimator)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="RadioButton" signature="RadioButton(java.lang.String,java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0,1" resource="web" />
      </constructor>
      <constructor name="RadioButton" signature="RadioButton(java.lang.String,java.lang.String,com.google.gwt.i18n.client.HasDirection.Direction)" match="fullsignature" >
        <sink kind="xss" argpos="0,1" resource="web" />
      </constructor>
      <constructor name="RadioButton" signature="RadioButton(java.lang.String,java.lang.String,com.google.gwt.i18n.shared.DirectionEstimator)" match="fullsignature" >
        <sink kind="xss" argpos="0,1" resource="web" />
      </constructor>
      <constructor name="RadioButton" signature="RadioButton(java.lang.String,java.lang.String,boolean)" match="fullsignature" >
        <sink kind="xss" argpos="0,1" resource="web" />
      </constructor>
    </class>
    <class name="com.google.gwt.user.client.ui.RenderablePanel" supertypes="com.google.gwt.user.client.ui.ComplexPanel,com.google.gwt.user.client.ui.IsRenderable" >
      <constructor name="RenderablePanel" signature="RenderablePanel(java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="RenderablePanel" signature="RenderablePanel(com.google.gwt.safehtml.shared.SafeHtml)" match="fullsignature" />
      <method name="resolvePotentialElement" signature="resolvePotentialElement()" >
        <return type="com.google.gwt.dom.client.Element" />
      </method>
      <method name="getInnerHtml" signature="getInnerHtml()" >
        <return type="com.google.gwt.safehtml.shared.SafeHtml" />
      </method>
      <method name="isFullyInitialized" signature="isFullyInitialized()" >
        <return type="boolean" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.RenderableStamper" >
      <method name="findStampedElement" signature="findStampedElement()" >
        <return type="com.google.gwt.dom.client.Element" />
      </method>
      <method name="stamp" signature="stamp(com.google.gwt.safehtml.shared.SafeHtml)" >
        <return type="com.google.gwt.safehtml.shared.SafeHtml" />
      </method>
      <method name="stamp" signature="stamp(com.google.gwt.user.client.ui.T)" >
        <return type="java.lang.Object" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.ResetButton" supertypes="com.google.gwt.user.client.ui.Button" >
      <constructor name="ResetButton" signature="ResetButton()" />
      <constructor name="ResetButton" signature="ResetButton(com.google.gwt.safehtml.shared.SafeHtml)" match="fullsignature" />
      <constructor name="ResetButton" signature="ResetButton(java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="ResetButton" signature="ResetButton(com.google.gwt.safehtml.shared.SafeHtml,com.google.gwt.event.dom.client.ClickHandler)" match="fullsignature" />
      <constructor name="ResetButton" signature="ResetButton(java.lang.String,com.google.gwt.event.dom.client.ClickHandler)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="ResetButton" signature="ResetButton(com.google.gwt.dom.client.Element)" match="fullsignature" />
    </class>
    <class name="com.google.gwt.user.client.ui.ResizeComposite" supertypes="com.google.gwt.user.client.ui.Composite,com.google.gwt.user.client.ui.RequiresResize" />
    <class name="com.google.gwt.user.client.ui.ResizeLayoutPanel" supertypes="com.google.gwt.event.logical.shared.HasResizeHandlers,com.google.gwt.user.client.ui.ProvidesResize,com.google.gwt.user.client.ui.SimplePanel" >
      <method name="remove" signature="remove(com.google.gwt.user.client.ui.Widget)" >
        <return type="boolean" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.ResizeLayoutPanel.Impl" />
    <class name="com.google.gwt.user.client.ui.ResizeLayoutPanel.ImplStandard" supertypes="com.google.gwt.user.client.EventListener,com.google.gwt.user.client.ui.ResizeLayoutPanel.Impl" />
    <class name="com.google.gwt.user.client.ui.ResizeLayoutPanel.ImplTrident" supertypes="com.google.gwt.user.client.ui.ResizeLayoutPanel.Impl" />
    <class name="com.google.gwt.user.client.ui.RichTextArea" supertypes="com.google.gwt.event.logical.shared.HasInitializeHandlers,com.google.gwt.safehtml.client.HasSafeHtml,com.google.gwt.user.client.ui.FocusWidget,com.google.gwt.user.client.ui.HasHTML" >
      <method name="getBasicFormatter" signature="getBasicFormatter()" >
        <return type="com.google.gwt.user.client.ui.RichTextArea.BasicFormatter" />
      </method>
      <method name="getExtendedFormatter" signature="getExtendedFormatter()" >
        <return type="com.google.gwt.user.client.ui.RichTextArea.ExtendedFormatter" />
      </method>
      <method name="getFormatter" signature="getFormatter()" >
        <return type="com.google.gwt.user.client.ui.RichTextArea.Formatter" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.RootLayoutPanel" supertypes="com.google.gwt.user.client.ui.LayoutPanel" >
      <method name="get" signature="get()" >
        <return type="com.google.gwt.user.client.ui.RootLayoutPanel" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.RootPanel" supertypes="com.google.gwt.user.client.ui.AbsolutePanel" >
      <method name="get" signature="get()" >
        <return type="com.google.gwt.user.client.ui.RootPanel" />
      </method>
      <method name="get" signature="get(java.lang.String)" >
        <return type="com.google.gwt.user.client.ui.RootPanel" />
      </method>
      <method name="getBodyElement" signature="getBodyElement()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="isInDetachList" signature="isInDetachList(com.google.gwt.user.client.ui.Widget)" >
        <return type="boolean" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.ScrollImpl" >
      <method name="get" signature="get()" >
        <return type="com.google.gwt.user.client.ui.ScrollImpl" />
      </method>
      <method name="getMaximumHorizontalScrollPosition" signature="getMaximumHorizontalScrollPosition(com.google.gwt.dom.client.Element)" >
        <return type="int" />
      </method>
      <method name="getMinimumHorizontalScrollPosition" signature="getMinimumHorizontalScrollPosition(com.google.gwt.dom.client.Element)" >
        <return type="int" />
      </method>
      <method name="isRtl" signature="isRtl(com.google.gwt.dom.client.Element)" >
        <return type="boolean" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.ScrollImpl.ScrollImplTrident" supertypes="com.google.gwt.user.client.ui.ScrollImpl" />
    <class name="com.google.gwt.user.client.ui.ScrollListenerCollection" supertypes="java.util.ArrayList" />
    <class name="com.google.gwt.user.client.ui.ScrollPanel" supertypes="com.google.gwt.user.client.ui.HasScrolling,com.google.gwt.user.client.ui.ProvidesResize,com.google.gwt.user.client.ui.RequiresResize,com.google.gwt.user.client.ui.SimplePanel,com.google.gwt.user.client.ui.SourcesScrollEvents" >
      <method name="addScrollHandler" signature="addScrollHandler(com.google.gwt.event.dom.client.ScrollHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="getHorizontalScrollPosition" signature="getHorizontalScrollPosition()" >
        <return type="int" />
      </method>
      <method name="getMaximumHorizontalScrollPosition" signature="getMaximumHorizontalScrollPosition()" >
        <return type="int" />
      </method>
      <method name="getMaximumVerticalScrollPosition" signature="getMaximumVerticalScrollPosition()" >
        <return type="int" />
      </method>
      <method name="getMinimumHorizontalScrollPosition" signature="getMinimumHorizontalScrollPosition()" >
        <return type="int" />
      </method>
      <method name="getMinimumVerticalScrollPosition" signature="getMinimumVerticalScrollPosition()" >
        <return type="int" />
      </method>
      <method name="getScrollPosition" signature="getScrollPosition()" >
        <return type="int" />
      </method>
      <method name="getVerticalScrollPosition" signature="getVerticalScrollPosition()" >
        <return type="int" />
      </method>
      <method name="isTouchScrollingDisabled" signature="isTouchScrollingDisabled()" >
        <return type="boolean" />
      </method>
      <method name="setTouchScrollingDisabled" signature="setTouchScrollingDisabled(boolean)" >
        <return type="boolean" />
      </method>
      <method name="getContainerElement" signature="getContainerElement()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="getScrollableElement" signature="getScrollableElement()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.SimpleCheckBox" supertypes="com.google.gwt.editor.client.IsEditor,com.google.gwt.user.client.ui.FocusWidget,com.google.gwt.user.client.ui.HasName,com.google.gwt.user.client.ui.HasValue" >
      <method name="wrap" signature="wrap(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.user.client.ui.SimpleCheckBox" />
      </method>
      <method name="getFormValue" signature="getFormValue()" >
        <return type="java.lang.String" />
      </method>
      <method name="isChecked" signature="isChecked()" >
        <return type="boolean" />
      </method>
      <method name="setFormValue" signature="setFormValue(java.lang.String)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.SimpleLayoutPanel" supertypes="com.google.gwt.user.client.ui.ProvidesResize,com.google.gwt.user.client.ui.RequiresResize,com.google.gwt.user.client.ui.SimplePanel" >
      <method name="remove" signature="remove(com.google.gwt.user.client.ui.Widget)" >
        <return type="boolean" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.SimplePanel" supertypes="com.google.gwt.user.client.ui.HasOneWidget,com.google.gwt.user.client.ui.Panel" >
      <method name="iterator" signature="iterator()" >
        <return type="java.util.Iterator" />
      </method>
      <method name="getContainerElement" signature="getContainerElement()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.SimpleRadioButton" supertypes="com.google.gwt.user.client.ui.SimpleCheckBox" >
      <constructor name="SimpleRadioButton" signature="SimpleRadioButton(java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="SimpleRadioButton" signature="SimpleRadioButton(com.google.gwt.dom.client.Element)" match="fullsignature" />
    </class>
    <class name="com.google.gwt.user.client.ui.SplitLayoutPanel" supertypes="com.google.gwt.user.client.ui.DockLayoutPanel" >
      <method name="getSplitterSize" signature="getSplitterSize()" >
        <return type="int" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.SplitPanel" supertypes="com.google.gwt.user.client.ui.Panel" >
      <method name="getOffsetHeight" signature="getOffsetHeight(com.google.gwt.dom.client.Element)" >
        <return type="int" />
      </method>
      <method name="getOffsetWidth" signature="getOffsetWidth(com.google.gwt.dom.client.Element)" >
        <return type="int" />
      </method>
      <method name="preventBoxStyles" signature="preventBoxStyles(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.dom.client.Element" />
      </method>
      <method name="setBottom" signature="setBottom(com.google.gwt.dom.client.Element,java.lang.String)" />
      <method name="setClassname" signature="setClassname(com.google.gwt.dom.client.Element,java.lang.String)" />
      <method name="setHeight" signature="setHeight(com.google.gwt.dom.client.Element,java.lang.String)" />
      <method name="setLeft" signature="setLeft(com.google.gwt.dom.client.Element,java.lang.String)" />
      <method name="setRight" signature="setRight(com.google.gwt.dom.client.Element,java.lang.String)" />
      <method name="setTop" signature="setTop(com.google.gwt.dom.client.Element,java.lang.String)" />
      <method name="setWidth" signature="setWidth(com.google.gwt.dom.client.Element,java.lang.String)" />
      <method name="isResizing" signature="isResizing()" >
        <return type="boolean" />
      </method>
      <method name="iterator" signature="iterator()" >
        <return type="java.util.Iterator" />
      </method>
      <method name="onBrowserEvent" signature="onBrowserEvent(com.google.gwt.user.client.Event)" />
      <method name="setSplitPosition" signature="setSplitPosition(java.lang.String)" />
      <method name="getElement" signature="getElement(int)" >
        <return type="com.google.gwt.dom.client.Element" />
      </method>
      <method name="getSplitElement" signature="getSplitElement()" >
        <return type="com.google.gwt.dom.client.Element" />
      </method>
      <method name="getWidget" signature="getWidget(int)" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.StackLayoutPanel" supertypes="IndexedPanel.ForIsWidget,com.google.gwt.event.logical.shared.HasBeforeSelectionHandlers,com.google.gwt.event.logical.shared.HasSelectionHandlers,com.google.gwt.user.client.ui.AnimatedLayout,com.google.gwt.user.client.ui.HasWidgets,com.google.gwt.user.client.ui.ProvidesResize,com.google.gwt.user.client.ui.ResizeComposite" >
      <method name="getAnimationDuration" signature="getAnimationDuration()" >
        <return type="int" />
      </method>
      <method name="getHeaderWidget" signature="getHeaderWidget(int)" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="getHeaderWidget" signature="getHeaderWidget(com.google.gwt.user.client.ui.Widget)" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="getVisibleIndex" signature="getVisibleIndex()" >
        <return type="int" />
      </method>
      <method name="getVisibleWidget" signature="getVisibleWidget()" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="getWidget" signature="getWidget(int)" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="getWidgetCount" signature="getWidgetCount()" >
        <return type="int" />
      </method>
      <method name="getWidgetIndex" signature="getWidgetIndex(com.google.gwt.user.client.ui.IsWidget)" >
        <return type="int" />
      </method>
      <method name="getWidgetIndex" signature="getWidgetIndex(com.google.gwt.user.client.ui.Widget)" >
        <return type="int" />
      </method>
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.Widget,com.google.gwt.safehtml.shared.SafeHtml,double,int)" match="fullsignature" />
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.Widget,java.lang.String,boolean,double,int)" match="fullsignature" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.Widget,java.lang.String,double,int)" match="fullsignature" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.Widget,com.google.gwt.user.client.ui.Widget,double,int)" match="fullsignature" />
      <method name="remove" signature="remove(int)" >
        <return type="boolean" />
      </method>
      <method name="setHeaderHTML" signature="setHeaderHTML(int,java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="setHeaderHTML" signature="setHeaderHTML(int,com.google.gwt.safehtml.shared.SafeHtml)" match="fullsignature" />
      <method name="setHeaderText" signature="setHeaderText(int,java.lang.String)" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.StackPanel" supertypes="InsertPanel.ForIsWidget,com.google.gwt.user.client.ui.ComplexPanel" >
      <method name="getSelectedIndex" signature="getSelectedIndex()" >
        <return type="int" />
      </method>
      <method name="createHeaderElem" signature="createHeaderElem()" >
        <return type="com.google.gwt.dom.client.Element" />
      </method>
      <method name="getHeaderTextElem" signature="getHeaderTextElem(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.dom.client.Element" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.SubmitButton" supertypes="com.google.gwt.user.client.ui.Button" >
      <constructor name="SubmitButton" signature="SubmitButton()" />
      <constructor name="SubmitButton" signature="SubmitButton(com.google.gwt.safehtml.shared.SafeHtml)" match="fullsignature" />
      <constructor name="SubmitButton" signature="SubmitButton(java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="SubmitButton" signature="SubmitButton(com.google.gwt.safehtml.shared.SafeHtml,com.google.gwt.event.dom.client.ClickHandler)" match="fullsignature" />
      <constructor name="SubmitButton" signature="SubmitButton(java.lang.String,com.google.gwt.event.dom.client.ClickHandler)" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="SubmitButton" signature="SubmitButton(com.google.gwt.dom.client.Element)" match="fullsignature" />
    </class>
    <class name="com.google.gwt.user.client.ui.SuggestBox" supertypes="com.google.gwt.editor.client.IsEditor,com.google.gwt.event.dom.client.HasAllKeyHandlers,com.google.gwt.event.logical.shared.HasSelectionHandlers,com.google.gwt.user.client.ui.Composite,com.google.gwt.user.client.ui.FiresSuggestionEvents,com.google.gwt.user.client.ui.HasAnimation,com.google.gwt.user.client.ui.HasEnabled,com.google.gwt.user.client.ui.HasFocus,com.google.gwt.user.client.ui.HasText,com.google.gwt.user.client.ui.HasValue,com.google.gwt.user.client.ui.SourcesChangeEvents,com.google.gwt.user.client.ui.SourcesClickEvents,com.google.gwt.user.client.ui.SourcesKeyboardEvents" >
      <method name="wrap" signature="wrap(com.google.gwt.user.client.ui.SuggestOracle,com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.user.client.ui.SuggestBox" />
      </method>
      <method name="addKeyDownHandler" signature="addKeyDownHandler(com.google.gwt.event.dom.client.KeyDownHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addKeyPressHandler" signature="addKeyPressHandler(com.google.gwt.event.dom.client.KeyPressHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addKeyUpHandler" signature="addKeyUpHandler(com.google.gwt.event.dom.client.KeyUpHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="getLimit" signature="getLimit()" >
        <return type="int" />
      </method>
      <method name="getSuggestionDisplay" signature="getSuggestionDisplay()" >
        <return type="com.google.gwt.user.client.ui.SuggestBox.SuggestionDisplay" />
      </method>
      <method name="getSuggestOracle" signature="getSuggestOracle()" >
        <return type="com.google.gwt.user.client.ui.SuggestOracle" />
      </method>
      <method name="getTabIndex" signature="getTabIndex()" >
        <return type="int" />
      </method>
      <method name="getTextBox" signature="getTextBox()" >
        <return type="com.google.gwt.user.client.ui.TextBoxBase" />
      </method>
      <method name="getValueBox" signature="getValueBox()" >
        <return type="com.google.gwt.user.client.ui.ValueBoxBase" />
      </method>
      <method name="isAutoSelectEnabled" signature="isAutoSelectEnabled()" >
        <return type="boolean" />
      </method>
      <method name="isSuggestionListShowing" signature="isSuggestionListShowing()" >
        <return type="boolean" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.SuggestBox.DefaultSuggestionDisplay" supertypes="com.google.gwt.user.client.ui.HasAnimation,com.google.gwt.user.client.ui.SuggestBox.SuggestionDisplay" >
      <method name="isSuggestionListHiddenWhenEmpty" signature="isSuggestionListHiddenWhenEmpty()" >
        <return type="boolean" />
      </method>
      <method name="createPopup" signature="createPopup()" >
        <return type="com.google.gwt.user.client.ui.PopupPanel" />
      </method>
      <method name="decorateSuggestionList" signature="decorateSuggestionList(com.google.gwt.user.client.ui.Widget)" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="getPopupPanel" signature="getPopupPanel()" >
        <return type="com.google.gwt.user.client.ui.PopupPanel" />
      </method>
      <method name="getSuggestionMenu" signature="getSuggestionMenu()" >
        <return type="com.google.gwt.user.client.ui.MenuBar" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.SuggestBox.SuggestionDisplay" >
      <method name="getCurrentSelection" signature="getCurrentSelection()" >
        <return type="com.google.gwt.user.client.ui.SuggestOracle.Suggestion" />
      </method>
      <method name="isAnimationEnabledImpl" signature="isAnimationEnabledImpl()" >
        <return type="boolean" />
      </method>
      <method name="isSuggestionListShowing" signature="isSuggestionListShowing()" >
        <return type="boolean" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.SuggestionEvent" supertypes="java.util.EventObject" >
      <method name="getSelectedSuggestion" signature="getSelectedSuggestion()" >
        <return type="SuggestOracle.Suggestion" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.TabBar" supertypes="com.google.gwt.event.logical.shared.HasBeforeSelectionHandlers,com.google.gwt.event.logical.shared.HasSelectionHandlers,com.google.gwt.user.client.ui.ClickListener,com.google.gwt.user.client.ui.Composite,com.google.gwt.user.client.ui.KeyboardListener,com.google.gwt.user.client.ui.SourcesTabEvents" >
      <method name="addTab" signature="addTab(com.google.gwt.safehtml.shared.SafeHtml)" match="fullsignature" />
      <method name="addTab" signature="addTab(java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="addTab" signature="addTab(java.lang.String,boolean)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="addTab" signature="addTab(com.google.gwt.user.client.ui.Widget)" match="fullsignature" />
      <method name="getSelectedTab" signature="getSelectedTab()" >
        <return type="int" />
      </method>
      <method name="getTab" signature="getTab(int)" >
        <return type="com.google.gwt.user.client.ui.TabBar.Tab" />
      </method>
      <method name="getTabCount" signature="getTabCount()" >
        <return type="int" />
      </method>
      <method name="getTabHTML" signature="getTabHTML(int)" >
        <return type="java.lang.String" />
      </method>
      <method name="insertTab" signature="insertTab(com.google.gwt.safehtml.shared.SafeHtml,int)" match="fullsignature" />
      <method name="insertTab" signature="insertTab(java.lang.String,boolean,int)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="insertTab" signature="insertTab(java.lang.String,int)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="insertTab" signature="insertTab(com.google.gwt.user.client.ui.Widget,int)" match="fullsignature" />
      <method name="isTabEnabled" signature="isTabEnabled(int)" >
        <return type="boolean" />
      </method>
      <method name="selectTab" signature="selectTab(int)" >
        <return type="boolean" />
      </method>
      <method name="selectTab" signature="selectTab(int,boolean)" >
        <return type="boolean" />
      </method>
      <method name="setTabHTML" signature="setTabHTML(int,java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="setTabHTML" signature="setTabHTML(int,com.google.gwt.safehtml.shared.SafeHtml)" match="fullsignature" >
      </method>
      <method name="setTabText" signature="setTabText(int,java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="createTabTextWrapper" signature="createTabTextWrapper()" >
        <return type="com.google.gwt.user.client.ui.SimplePanel" />
      </method>
      <method name="insertTabWidget" signature="insertTabWidget(com.google.gwt.user.client.ui.Widget,int)" />
    </class>
    <class name="com.google.gwt.user.client.ui.TabLayoutPanel" supertypes="IndexedPanel.ForIsWidget,com.google.gwt.event.logical.shared.HasBeforeSelectionHandlers,com.google.gwt.event.logical.shared.HasSelectionHandlers,com.google.gwt.user.client.ui.AnimatedLayout,com.google.gwt.user.client.ui.HasWidgets,com.google.gwt.user.client.ui.ProvidesResize,com.google.gwt.user.client.ui.ResizeComposite" >
      <method name="add" signature="add(com.google.gwt.user.client.ui.IsWidget)" match="fullsignature" />
      <method name="add" signature="add(com.google.gwt.user.client.ui.IsWidget,com.google.gwt.user.client.ui.IsWidget)" match="fullsignature" />
      <method name="add" signature="add(com.google.gwt.user.client.ui.IsWidget,java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="add" signature="add(com.google.gwt.user.client.ui.IsWidget,java.lang.String,boolean)" match="fullsignature" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="add" signature="add(com.google.gwt.user.client.ui.Widget,java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="add" signature="add(com.google.gwt.user.client.ui.Widget,com.google.gwt.safehtml.shared.SafeHtml)" match="fullsignature" />
      <method name="add" signature="add(com.google.gwt.user.client.ui.Widget,java.lang.String,boolean)" match="fullsignature" />
      <method name="add" signature="add(com.google.gwt.user.client.ui.Widget,com.google.gwt.user.client.ui.Widget)" match="fullsignature" />
      <method name="getAnimationDuration" signature="getAnimationDuration()" >
        <return type="int" />
      </method>
      <method name="getSelectedIndex" signature="getSelectedIndex()" >
        <return type="int" />
      </method>
      <method name="getTabWidget" signature="getTabWidget(int)" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="getTabWidget" signature="getTabWidget(com.google.gwt.user.client.ui.IsWidget)" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="getTabWidget" signature="getTabWidget(com.google.gwt.user.client.ui.Widget)" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="getWidget" signature="getWidget(int)" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="getWidgetCount" signature="getWidgetCount()" >
        <return type="int" />
      </method>
      <method name="getWidgetIndex" signature="getWidgetIndex(com.google.gwt.user.client.ui.IsWidget)" >
        <return type="int" />
      </method>
      <method name="getWidgetIndex" signature="getWidgetIndex(com.google.gwt.user.client.ui.Widget)" >
        <return type="int" />
      </method>
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.IsWidget,int)" match="fullsignature"/>
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.IsWidget,com.google.gwt.user.client.ui.IsWidget,int)" match="fullsignature" />
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.IsWidget,java.lang.String,boolean,int)" match="fullsignature" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.IsWidget,java.lang.String,int)" match="fullsignature" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.Widget,int)" match="fullsignature" />
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.Widget,com.google.gwt.safehtml.shared.SafeHtml,int)" match="fullsignature" />
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.Widget,java.lang.String,boolean,int)" match="fullsignature" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.Widget,java.lang.String,int)" match="fullsignature" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.Widget,com.google.gwt.user.client.ui.Widget,int)" match="fullsignature" />
      <method name="isAnimationVertical" signature="isAnimationVertical()" >
        <return type="boolean" />
      </method>
      <method name="remove" signature="remove(int)" >
        <return type="boolean" />
      </method>
      <method name="setTabHTML" signature="setTabHTML(int,java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="setTabHTML" signature="setTabHTML(int,com.google.gwt.safehtml.shared.SafeHtml)" match="fullsignature" />
      <method name="setTabText" signature="setTabText(int,java.lang.String)" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.TabListenerCollection" supertypes="java.util.ArrayList" >
      <method name="fireBeforeTabSelected" signature="fireBeforeTabSelected(com.google.gwt.user.client.ui.SourcesTabEvents,int)" >
        <return type="boolean" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.TabPanel" supertypes="IndexedPanel.ForIsWidget,com.google.gwt.event.logical.shared.HasBeforeSelectionHandlers,com.google.gwt.event.logical.shared.HasSelectionHandlers,com.google.gwt.user.client.ui.Composite,com.google.gwt.user.client.ui.HasAnimation,com.google.gwt.user.client.ui.HasWidgets,com.google.gwt.user.client.ui.SourcesTabEvents,com.google.gwt.user.client.ui.TabListener" >
      <method name="add" signature="add(com.google.gwt.user.client.ui.IsWidget,com.google.gwt.user.client.ui.IsWidget)" match="fullsignature" />
      <method name="add" signature="add(com.google.gwt.user.client.ui.IsWidget,java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="add" signature="add(com.google.gwt.user.client.ui.IsWidget,java.lang.String,boolean)" match="fullsignature" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="add" signature="add(com.google.gwt.user.client.ui.Widget,java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="add" signature="add(com.google.gwt.user.client.ui.Widget,java.lang.String,boolean)" match="fullsignature" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="add" signature="add(com.google.gwt.user.client.ui.Widget,com.google.gwt.user.client.ui.Widget)" match="fullsignature" />
      <method name="getDeckPanel" signature="getDeckPanel()" >
        <return type="com.google.gwt.user.client.ui.DeckPanel" />
      </method>
      <method name="getTabBar" signature="getTabBar()" >
        <return type="com.google.gwt.user.client.ui.TabBar" />
      </method>
      <method name="getWidget" signature="getWidget(int)" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="getWidgetCount" signature="getWidgetCount()" >
        <return type="int" />
      </method>
      <method name="getWidgetIndex" signature="getWidgetIndex(com.google.gwt.user.client.ui.IsWidget)" >
        <return type="int" />
      </method>
      <method name="getWidgetIndex" signature="getWidgetIndex(com.google.gwt.user.client.ui.Widget)" >
        <return type="int" />
      </method>
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.IsWidget,com.google.gwt.user.client.ui.IsWidget,int)" match="fullsignature" />
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.IsWidget,java.lang.String,boolean,int)" match="fullsignature" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.IsWidget,java.lang.String,int)" match="fullsignature" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.Widget,java.lang.String,boolean,int)" match="fullsignature" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.Widget,java.lang.String,int)" match="fullsignature" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="insert" signature="insert(com.google.gwt.user.client.ui.Widget,com.google.gwt.user.client.ui.Widget,int)" match="fullsignature" />
      <method name="remove" signature="remove(int)" >
        <return type="boolean" />
      </method>
      <method name="createTabTextWrapper" signature="createTabTextWrapper()" >
        <return type="com.google.gwt.user.client.ui.SimplePanel" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.TextArea" supertypes="com.google.gwt.user.client.ui.TextBoxBase" >
      <method name="wrap" signature="wrap(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.user.client.ui.TextArea" />
      </method>
      <method name="getCharacterWidth" signature="getCharacterWidth()" >
        <return type="int" />
      </method>
      <method name="getCursorPos" signature="getCursorPos()" >
        <return type="int" />
      </method>
      <method name="getSelectionLength" signature="getSelectionLength()" >
        <return type="int" />
      </method>
      <method name="getVisibleLines" signature="getVisibleLines()" >
        <return type="int" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.TextBox" supertypes="com.google.gwt.user.client.ui.TextBoxBase" >
      <method name="wrap" signature="wrap(com.google.gwt.dom.client.Element)" >
        <return type="com.google.gwt.user.client.ui.TextBox" />
      </method>
      <method name="getMaxLength" signature="getMaxLength()" >
        <return type="int" />
      </method>
      <method name="getVisibleLength" signature="getVisibleLength()" >
        <return type="int" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.TextBoxBase" supertypes="com.google.gwt.user.client.ui.SourcesChangeEvents,com.google.gwt.user.client.ui.ValueBoxBase" >
      <method name="getValue" signature="getValue()" >
        <return type="java.lang.String" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.TextBoxBase.TextAlignConstant" >
      <method name="getTextAlignString" signature="getTextAlignString()" >
        <return type="com.google.gwt.user.client.ui.TextAlignment" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.ToggleButton" supertypes="com.google.gwt.editor.client.IsEditor,com.google.gwt.user.client.ui.CustomButton,com.google.gwt.user.client.ui.HasValue" >
      <constructor name="ToggleButton" signature="ToggleButton()" />
      <constructor name="ToggleButton" signature="ToggleButton(com.google.gwt.user.client.ui.Image)" match="fullsignature" />
      <constructor name="ToggleButton" signature="ToggleButton(com.google.gwt.user.client.ui.Image,com.google.gwt.event.dom.client.ClickHandler)" match="fullsignature" />
      <constructor name="ToggleButton" signature="ToggleButton(com.google.gwt.user.client.ui.Image,com.google.gwt.user.client.ui.ClickListener)" match="fullsignature" />
      <constructor name="ToggleButton" signature="ToggleButton(com.google.gwt.user.client.ui.Image,com.google.gwt.user.client.ui.Image)" match="fullsignature" />
      <constructor name="ToggleButton" signature="ToggleButton(com.google.gwt.user.client.ui.Image,com.google.gwt.user.client.ui.Image,com.google.gwt.event.dom.client.ClickHandler)" match="fullsignature" />
      <constructor name="ToggleButton" signature="ToggleButton(com.google.gwt.user.client.ui.Image,com.google.gwt.user.client.ui.Image,com.google.gwt.user.client.ui.ClickListener)" match="fullsignature" />
      <constructor name="ToggleButton" signature="ToggleButton(java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="ToggleButton" signature="ToggleButton(java.lang.String,com.google.gwt.event.dom.client.ClickHandler)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="ToggleButton" signature="ToggleButton(java.lang.String,com.google.gwt.user.client.ui.ClickListener)" match="fullsignature" >
        <sink kind="xss" argpos="0" resource="web" />
      </constructor>
      <constructor name="ToggleButton" signature="ToggleButton(java.lang.String,java.lang.String)" match="fullsignature" >
        <sink kind="xss" argpos="0,1" resource="web" />
      </constructor>
      <constructor name="ToggleButton" signature="ToggleButton(java.lang.String,java.lang.String,com.google.gwt.event.dom.client.ClickHandler)" match="fullsignature" >
        <sink kind="xss" argpos="0,1" resource="web" />
      </constructor>
    </class>
    <class name="com.google.gwt.user.client.ui.Tree" supertypes="HasTreeItems.ForIsWidget,HasWidgets.ForIsWidget,com.google.gwt.event.dom.client.HasAllFocusHandlers,com.google.gwt.event.dom.client.HasAllKeyHandlers,com.google.gwt.event.dom.client.HasAllMouseHandlers,com.google.gwt.event.logical.shared.HasCloseHandlers,com.google.gwt.event.logical.shared.HasOpenHandlers,com.google.gwt.event.logical.shared.HasSelectionHandlers,com.google.gwt.user.client.ui.HasAnimation,com.google.gwt.user.client.ui.HasFocus,com.google.gwt.user.client.ui.SourcesMouseEvents,com.google.gwt.user.client.ui.SourcesTreeEvents,com.google.gwt.user.client.ui.Widget" >
      <method name="shouldTreeDelegateFocusToElement" signature="shouldTreeDelegateFocusToElement(com.google.gwt.dom.client.Element)" >
        <return type="boolean" />
      </method>
      <method name="addBlurHandler" signature="addBlurHandler(com.google.gwt.event.dom.client.BlurHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addFocusHandler" signature="addFocusHandler(com.google.gwt.event.dom.client.FocusHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addItem" signature="addItem(com.google.gwt.safehtml.shared.SafeHtml)" >
        <return type="com.google.gwt.user.client.ui.TreeItem" />
      </method>
      <method name="addItem" signature="addItem(com.google.gwt.user.client.ui.Widget)" >
        <return type="com.google.gwt.user.client.ui.TreeItem" />
      </method>
      <method name="addItem" signature="addItem(com.google.gwt.user.client.ui.IsWidget)" >
        <return type="com.google.gwt.user.client.ui.TreeItem" />
      </method>
      <method name="addKeyDownHandler" signature="addKeyDownHandler(com.google.gwt.event.dom.client.KeyDownHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addKeyPressHandler" signature="addKeyPressHandler(com.google.gwt.event.dom.client.KeyPressHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addKeyUpHandler" signature="addKeyUpHandler(com.google.gwt.event.dom.client.KeyUpHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseDownHandler" signature="addMouseDownHandler(com.google.gwt.event.dom.client.MouseDownHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseMoveHandler" signature="addMouseMoveHandler(com.google.gwt.event.dom.client.MouseMoveHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseOutHandler" signature="addMouseOutHandler(com.google.gwt.event.dom.client.MouseOutHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseOverHandler" signature="addMouseOverHandler(com.google.gwt.event.dom.client.MouseOverHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseUpHandler" signature="addMouseUpHandler(com.google.gwt.event.dom.client.MouseUpHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addMouseWheelHandler" signature="addMouseWheelHandler(com.google.gwt.event.dom.client.MouseWheelHandler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addTextItem" signature="addTextItem(java.lang.String)" >
        <return type="com.google.gwt.user.client.ui.TreeItem" />
      </method>
      <method name="getItem" signature="getItem(int)" >
        <return type="com.google.gwt.user.client.ui.TreeItem" />
      </method>
      <method name="getItemCount" signature="getItemCount()" >
        <return type="int" />
      </method>
      <method name="getSelectedItem" signature="getSelectedItem()" >
        <return type="com.google.gwt.user.client.ui.TreeItem" />
      </method>
      <method name="getTabIndex" signature="getTabIndex()" >
        <return type="int" />
      </method>
      <method name="insertItem" signature="insertItem(int,com.google.gwt.safehtml.shared.SafeHtml)" match="fullsignature" >
        <return type="com.google.gwt.user.client.ui.TreeItem" />
      </method>
      <method name="insertItem" signature="insertItem(int,com.google.gwt.user.client.ui.TreeItem)" match="fullsignature" />
      <method name="insertItem" signature="insertItem(int,com.google.gwt.user.client.ui.Widget)" match="fullsignature" >
        <return type="com.google.gwt.user.client.ui.TreeItem" />
      </method>
      <method name="insertTextItem" signature="insertTextItem(int,java.lang.String)" >
        <return type="com.google.gwt.user.client.ui.TreeItem" />
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="isScrollOnSelectEnabled" signature="isScrollOnSelectEnabled()" >
        <return type="boolean" />
      </method>
      <method name="iterator" signature="iterator()" >
        <return type="java.util.Iterator" />
      </method>
      <method name="remove" signature="remove(com.google.gwt.user.client.ui.Widget)" >
        <return type="boolean" />
      </method>
      <method name="remove" signature="remove(com.google.gwt.user.client.ui.IsWidget)" >
        <return type="boolean" />
      </method>
      <method name="treeItemIterator" signature="treeItemIterator()" >
        <return type="java.util.Iterator" />
      </method>
      <method name="doAttachChildren" signature="doAttachChildren()" >
      </method>
      <method name="doDetachChildren" signature="doDetachChildren()" >
      </method>
      <method name="isKeyboardNavigationEnabled" signature="isKeyboardNavigationEnabled(com.google.gwt.user.client.ui.TreeItem)" >
        <return type="boolean" />
      </method>
      <method name="getChildWidgets" signature="getChildWidgets()" >
        <return type="java.util.Map" />
      </method>
      <method name="getImages" signature="getImages()" >
        <return type="com.google.gwt.user.client.ui.Tree.ImageAdapter" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.Tree.ImageAdapter" >
      <method name="treeClosed" signature="treeClosed()" >
        <return type="com.google.gwt.user.client.ui.AbstractImagePrototype" />
      </method>
      <method name="treeLeaf" signature="treeLeaf()" >
        <return type="com.google.gwt.user.client.ui.AbstractImagePrototype" />
      </method>
      <method name="treeOpen" signature="treeOpen()" >
        <return type="com.google.gwt.user.client.ui.AbstractImagePrototype" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.TreeItem" supertypes="com.google.gwt.safehtml.client.HasSafeHtml,com.google.gwt.user.client.ui.HasHTML,com.google.gwt.user.client.ui.HasTreeItems,com.google.gwt.user.client.ui.IsTreeItem,com.google.gwt.user.client.ui.UIObject" >
      <method name="getChild" signature="getChild(int)" >
        <return type="com.google.gwt.user.client.ui.TreeItem" />
      </method>
      <method name="getChildCount" signature="getChildCount()" >
        <return type="int" />
      </method>
      <method name="getChildIndex" signature="getChildIndex(com.google.gwt.user.client.ui.TreeItem)" >
        <return type="int" />
      </method>
      <method name="getParentItem" signature="getParentItem()" >
        <return type="com.google.gwt.user.client.ui.TreeItem" />
      </method>
      <method name="getState" signature="getState()" >
        <return type="boolean" />
      </method>
      <method name="getTree" signature="getTree()" >
        <return type="com.google.gwt.user.client.ui.Tree" />
      </method>
      <method name="getUserObject" signature="getUserObject()" >
        <return type="java.lang.Object" />
      </method>
      <method name="getWidget" signature="getWidget()" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="getTitle" signature="getTitle()" >
        <return type="java.lang.String" />
      </method>
      <method name="insertItem" signature="insertItem(int,com.google.gwt.safehtml.shared.SafeHtml)" match="fullsignature" >
        <return type="com.google.gwt.user.client.ui.TreeItem" />
      </method>
      <method name="insertItem" signature="insertItem(int,com.google.gwt.user.client.ui.TreeItem)" match="fullsignature" />
      <method name="insertItem" signature="insertItem(int,com.google.gwt.user.client.ui.Widget)" match="fullsignature" >
        <return type="com.google.gwt.user.client.ui.TreeItem" />
      </method>
      <method name="insertTextItem" signature="insertTextItem(int,java.lang.String)" >
        <return type="com.google.gwt.user.client.ui.TreeItem" />
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="isSelected" signature="isSelected()" >
        <return type="boolean" />
      </method>
      <method name="getFocusable" signature="getFocusable()" >
        <return type="com.google.gwt.user.client.ui.Focusable" />
      </method>
      <method name="getFocusableWidget" signature="getFocusableWidget()" >
        <return type="com.google.gwt.user.client.ui.HasFocus" />
      </method>
      <method name="getChildren" signature="getChildren()" >
        <return type="java.util.ArrayList" />
      </method>
      <method name="getContentElem" signature="getContentElem()" >
        <return type="com.google.gwt.dom.client.Element" />
      </method>
      <method name="getImageElement" signature="getImageElement()" >
        <return type="com.google.gwt.dom.client.Element" />
      </method>
      <method name="getImageHolderElement" signature="getImageHolderElement()" >
        <return type="com.google.gwt.dom.client.Element" />
      </method>
      <method name="isFullNode" signature="isFullNode()" >
        <return type="boolean" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.TreeItem.TreeItemImpl" />
    <class name="com.google.gwt.user.client.ui.TreeItem.TreeItemImplIE8ToIE10" supertypes="com.google.gwt.user.client.ui.TreeItem.TreeItemImpl" />
    <class name="com.google.gwt.user.client.ui.TreeListenerCollection" supertypes="java.util.ArrayList" />
    <class name="com.google.gwt.user.client.ui.UIObject" supertypes="com.google.gwt.user.client.ui.HasVisibility,java.lang.Object" >
      <method name="isVisible" signature="isVisible(com.google.gwt.dom.client.Element)" >
        <return type="boolean" />
      </method>
      <method name="getStyleName" signature="getStyleName(com.google.gwt.dom.client.Element)" >
        <return type="java.lang.String" />
      </method>
      <method name="getStylePrimaryName" signature="getStylePrimaryName(com.google.gwt.dom.client.Element)" >
        <return type="java.lang.String" />
      </method>
      <method name="getAbsoluteLeft" signature="getAbsoluteLeft()" >
        <return type="int" />
      </method>
      <method name="getAbsoluteTop" signature="getAbsoluteTop()" >
        <return type="int" />
      </method>
      <method name="getElement" signature="getElement()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="getOffsetHeight" signature="getOffsetHeight()" >
        <return type="int" />
      </method>
      <method name="getOffsetWidth" signature="getOffsetWidth()" >
        <return type="int" />
      </method>
      <method name="getStyleName" signature="getStyleName()" >
        <return type="java.lang.String" />
      </method>
      <method name="getStylePrimaryName" signature="getStylePrimaryName()" >
        <return type="java.lang.String" />
      </method>
      <method name="getTitle" signature="getTitle()" >
        <return type="java.lang.String" />
      </method>
      <method name="getStyleElement" signature="getStyleElement()" >
        <return type="com.google.gwt.user.client.Element" />
      </method>
      <method name="resolvePotentialElement" signature="resolvePotentialElement()" >
        <return type="com.google.gwt.dom.client.Element" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.UIObject.DebugIdImpl" >
      <method name="ensureDebugId" signature="ensureDebugId(com.google.gwt.user.client.ui.UIObject,java.lang.String)" >
      </method>
      <method name="ensureDebugId" signature="ensureDebugId(com.google.gwt.dom.client.Element,java.lang.String,java.lang.String)" >
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.UIObject.DebugIdImplEnabled" supertypes="com.google.gwt.user.client.ui.UIObject.DebugIdImpl"/>
    <class name="com.google.gwt.user.client.ui.ValueBox" supertypes="com.google.gwt.user.client.ui.ValueBoxBase" >
      <method name="wrap" signature="wrap(com.google.gwt.dom.client.Element,com.google.gwt.text.shared.Renderer,com.google.gwt.text.shared.Parser)" >
        <return type="com.google.gwt.user.client.ui.ValueBox" />
      </method>
      <method name="getMaxLength" signature="getMaxLength()" >
        <return type="int" />
      </method>
      <method name="getVisibleLength" signature="getVisibleLength()" >
        <return type="int" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.ValueBoxBase" supertypes="AutoDirectionHandler.Target,com.google.gwt.editor.client.IsEditor,com.google.gwt.event.dom.client.HasChangeHandlers,com.google.gwt.i18n.shared.HasDirectionEstimator,com.google.gwt.user.client.ui.FocusWidget,com.google.gwt.user.client.ui.HasName,com.google.gwt.user.client.ui.HasText,com.google.gwt.user.client.ui.HasValue" >
      <method name="getCursorPos" signature="getCursorPos()" >
        <return type="int" />
      </method>
      <method name="getDirection" signature="getDirection()" >
        <return type="com.google.gwt.user.client.ui.Direction" />
      </method>
      <method name="getSelectedText" signature="getSelectedText()" >
        <return type="java.lang.String" />
      </method>
      <method name="getSelectionLength" signature="getSelectionLength()" >
        <return type="int" />
      </method>
      <method name="getValueOrThrow" signature="getValueOrThrow()" >
        <return type="java.lang.Object" />
      </method>
      <method name="isReadOnly" signature="isReadOnly()" >
        <return type="boolean" />
      </method>
      <method name="getImpl" signature="getImpl()" >
        <return type="com.google.gwt.user.client.ui.impl.TextBoxImpl" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.ValueListBox" supertypes="com.google.gwt.editor.client.IsEditor,com.google.gwt.user.client.ui.Composite,com.google.gwt.user.client.ui.Focusable,com.google.gwt.user.client.ui.HasConstrainedValue,com.google.gwt.user.client.ui.HasEnabled" />
    <class name="com.google.gwt.user.client.ui.ValuePicker" supertypes="com.google.gwt.editor.client.IsEditor,com.google.gwt.user.client.ui.Composite,com.google.gwt.user.client.ui.HasConstrainedValue" >
      <method name="asWidget" signature="asWidget()" >
        <return type="com.google.gwt.user.client.ui.ValuePicker" />
      </method>
      <method name="getPageSize" signature="getPageSize()" >
        <return type="int" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.VerticalPanel" supertypes="InsertPanel.ForIsWidget,com.google.gwt.user.client.ui.CellPanel,com.google.gwt.user.client.ui.HasAlignment" >
      <method name="getHorizontalAlignment" signature="getHorizontalAlignment()" >
        <return type="com.google.gwt.user.client.ui.HorizontalAlignmentConstant" />
      </method>
      <method name="getVerticalAlignment" signature="getVerticalAlignment()" >
        <return type="com.google.gwt.user.client.ui.VerticalAlignmentConstant" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.VerticalSplitPanel" supertypes="com.google.gwt.user.client.ui.SplitPanel" >
      <method name="getBottomWidget" signature="getBottomWidget()" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="getTopWidget" signature="getTopWidget()" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.Widget" supertypes="com.google.gwt.event.logical.shared.HasAttachHandlers,com.google.gwt.user.client.EventListener,com.google.gwt.user.client.ui.IsWidget,com.google.gwt.user.client.ui.UIObject" >
      <method name="asWidgetOrNull" signature="asWidgetOrNull(com.google.gwt.user.client.ui.IsWidget)" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="addAttachHandler" signature="addAttachHandler(com.google.gwt.event.logical.shared.AttachEvent.Handler)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addBitlessDomHandler" signature="addBitlessDomHandler(com.google.gwt.user.client.ui.H,DomEvent.Type)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addDomHandler" signature="addDomHandler(com.google.gwt.user.client.ui.H,DomEvent.Type)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="addHandler" signature="addHandler(com.google.gwt.user.client.ui.H,GwtEvent.Type)" >
        <return type="com.google.gwt.event.shared.HandlerRegistration" />
      </method>
      <method name="getLayoutData" signature="getLayoutData()" >
        <return type="java.lang.Object" />
      </method>
      <method name="getParent" signature="getParent()" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="createHandlerManager" signature="createHandlerManager()" >
        <return type="com.google.gwt.event.shared.HandlerManager" />
      </method>
      <method name="delegateEvent" signature="delegateEvent(com.google.gwt.user.client.ui.Widget,com.google.gwt.event.shared.GwtEvent)" >
      </method>
      <method name="getHandlerCount" signature="getHandlerCount(GwtEvent.Type)" >
        <return type="int" />
      </method>
      <method name="isOrWasAttached" signature="isOrWasAttached()" >
        <return type="boolean" />
      </method>
      <method name="ensureHandlers" signature="ensureHandlers()" >
        <return type="com.google.gwt.event.shared.HandlerManager" />
      </method>
      <method name="getHandlerManager" signature="getHandlerManager()" >
        <return type="com.google.gwt.event.shared.HandlerManager" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.WidgetCollection" supertypes="java.lang.Iterable,java.lang.Object" >
      <method name="contains" signature="contains(com.google.gwt.user.client.ui.Widget)" >
        <return type="boolean" />
      </method>
      <method name="get" signature="get(int)" >
        <return type="com.google.gwt.user.client.ui.Widget" />
      </method>
      <method name="indexOf" signature="indexOf(com.google.gwt.user.client.ui.Widget)" >
        <return type="int" />
      </method>
      <method name="iterator" signature="iterator()" >
        <return type="java.util.Iterator" />
      </method>
      <method name="size" signature="size()" >
        <return type="int" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.ui.WidgetIterators" >
      <method name="createWidgetIterator" signature="createWidgetIterator(com.google.gwt.user.client.ui.HasWidgets,com.google.gwt.user.client.ui.Widget[])" >
        <return type="java.util.Iterator" />
      </method>
    </class>
  </module>

  <module name="com.google.gwt.user.client.rpc" >
    <class name="com.google.gwt.user.client.rpc.AsyncCallback" >
      <method name="onFailure" signature="onFailure(java.lang.Throwable)" />
      <method name="onSuccess" signature="onSuccess(java.lang.Object)" >
        <source kind="external_input" argpos="0" resource="web" />
      </method>
    </class>
    <class name="com.google.gwt.user.client.rpc.HasRpcToken" kind="interface" >
      <method name="getRpcToken" signature="getRpcToken()" >
        <return type="com.google.gwt.user.client.rpc.RpcToken" />
      </method>
      <method name="getRpcTokenExceptionHandler" signature="getRpcTokenExceptionHandler()" >
        <return type="com.google.gwt.user.client.rpc.RpcTokenExceptionHandler" />
      </method>
      <method name="setRpcToken" signature="setRpcToken(com.google.gwt.user.client.rpc.RpcToken)" />
      <method name="setRpcTokenExceptionHandler" signature="setRpcTokenExceptionHandler(com.google.gwt.user.client.rpc.RpcTokenExceptionHandler)" />
    </class>
    <class name="com.google.gwt.user.client.rpc.RemoteService" kind="interface" />
    <class name="com.google.gwt.user.client.rpc.ServiceDefTarget" >
      <method name="getSerializationPolicyName" signature="getSerializationPolicyName()" >
        <return type="java.lang.String" />
      </method>
      <method name="getServiceEntryPoint" signature="getServiceEntryPoint()" >
        <return type="java.lang.String" />
      </method>
      <method name="setRpcRequestBuilder" signature="setRpcRequestBuilder(com.google.gwt.user.client.rpc.RpcRequestBuilder)" />
      <method name="setServiceEntryPoint" signature="setServiceEntryPoint(java.lang.String)" />
    </class>
    <class name="com.google.gwt.user.client.rpc.XsrfToken" supertypes="com.google.gwt.user.client.rpc.RpcToken,java.lang.Object" >
      <method name="getToken" signature="getToken()" >
        <return type="java.lang.String" />
      </method>
      <method name="setToken" signature="setToken(java.lang.String)" />
    </class>
    <class name="com.google.gwt.user.client.rpc.RpcRequestBuilder" >
      <method name="create" signature="create(java.lang.String)" >
        <return type="com.google.gwt.user.client.rpc.RpcRequestBuilder" />
      </method>
      <method name="finish" signature="finish()" >
        <return type="com.google.gwt.http.client.RequestBuilder" />
      </method>
      <method name="setCallback" signature="setCallback(com.google.gwt.http.client.RequestCallback)" >
        <return type="com.google.gwt.user.client.rpc.RpcRequestBuilder" />
      </method>
      <method name="setContentType" signature="setContentType(java.lang.String)" >
        <return type="com.google.gwt.user.client.rpc.RpcRequestBuilder" />
        <sink argpos="0" kind="header_manipulation" resource="web"/>
      </method>
      <method name="setRequestData" signature="setRequestData(java.lang.String)" >
        <return type="com.google.gwt.user.client.rpc.RpcRequestBuilder" />
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="setRequestId" signature="setRequestId(int)" >
        <return type="com.google.gwt.user.client.rpc.RpcRequestBuilder" />
      </method>
      <method name="doCreate" signature="doCreate(java.lang.String)" >
        <return type="com.google.gwt.http.client.RequestBuilder" />
      </method>
      <method name="doFinish" signature="doFinish(com.google.gwt.http.client.RequestBuilder)" />
      <method name="doSetCallback" signature="doSetCallback(com.google.gwt.http.client.RequestBuilder,com.google.gwt.http.client.RequestCallback)" />
      <method name="doSetContentType" signature="doSetContentType(com.google.gwt.http.client.RequestBuilder,java.lang.String)" >
        <sink argpos="0" kind="header_manipulation" resource="web"/>
      </method>
      <method name="doSetRequestData" signature="doSetRequestData(com.google.gwt.http.client.RequestBuilder,java.lang.String)" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="doSetRequestId" signature="doSetRequestId(com.google.gwt.http.client.RequestBuilder,int)" />
    </class>
    <class name="com.google.gwt.user.client.rpc.CustomFieldSerializer" >
      <method name="deserializeInstance" signature="deserializeInstance(com.google.gwt.user.client.rpc.SerializationStreamReader,java.lang.Object)" />
      <method name="hasCustomInstantiateInstance" signature="hasCustomInstantiateInstance()" >
        <return type="boolean" />
      </method>
      <method name="instantiateInstance" signature="instantiateInstance(com.google.gwt.user.client.rpc.SerializationStreamReader)" >
        <return type="java.lang.Object" />
      </method>
      <method name="serializeInstance" signature="serializeInstance(com.google.gwt.user.client.rpc.SerializationStreamWriter,java.lang.Object)" />
    </class>
  </module>

  <module name="com.google.gwt.util.tools.shared" >
    <class name="com.google.gwt.util.tools.shared.Md5Utils" >
      <method name="getMd5Digest" signature="getMd5Digest(byte[])" >
        <tags>hash,algo:md5</tags>
        <return type="byte[]" />
        <sink kind="weak_hash_algorithm" argpos="-1" resource="crypto"/>
      </method>
      <method name="getMd5Digest" signature="getMd5Digest(java.lang.String)" >
        <tags>hash,algo:md5</tags>
        <return type="byte[]" />
        <sink kind="weak_hash_algorithm" argpos="-1" resource="crypto"/>
      </method>
    </class>
    <class name="com.google.gwt.util.tools.shared.StringUtils" >
      <method name="javaScriptString" signature="javaScriptString(java.lang.String)" >
        <return type="java.lang.String" />
      </method>
      <method name="toHexString" signature="toHexString(byte[])" >
        <return type="java.lang.String" />
      </method>
    </class>
  </module>

  <module name="com.google.gwt.view.client" >
    <class name="com.google.gwt.view.client.AbstractDataProvider" supertypes="com.google.gwt.view.client.ProvidesKey,java.lang.Object" >
      <method name="addDataDisplay" signature="addDataDisplay(com.google.gwt.view.client.HasData)" />
      <method name="getDataDisplays" signature="getDataDisplays()" >
        <return type="java.util.Set" />
      </method>
      <method name="getKey" signature="getKey(com.google.gwt.view.client.T)" >
        <return type="java.lang.Object" />
      </method>
      <method name="getKeyProvider" signature="getKeyProvider()" >
        <return type="com.google.gwt.view.client.ProvidesKey" />
      </method>
      <method name="getRanges" signature="getRanges()" >
        <return type="com.google.gwt.view.client.Range[]" />
      </method>
      <method name="removeDataDisplay" signature="removeDataDisplay(com.google.gwt.view.client.HasData)" />
      <method name="onRangeChanged" signature="onRangeChanged(com.google.gwt.view.client.HasData)" />
      <method name="updateRowCount" signature="updateRowCount(int,boolean)" />
      <method name="updateRowData" signature="updateRowData(int,java.util.List)" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
      <method name="updateRowData" signature="updateRowData(com.google.gwt.view.client.HasData,int,java.util.List)" >
        <sink kind="xss" argpos="1" resource="web" />
      </method>
    </class>
    <class name="com.google.gwt.view.client.AsyncDataProvider" supertypes="com.google.gwt.view.client.AbstractDataProvider" />
  </module>

  <module name="com.google.gwt.xhr.client" >
    <class name="com.google.gwt.xhr.client.XMLHttpRequest" supertypes="com.google.gwt.core.client.JavaScriptObject" >
      <method name="create" signature="create()" >
        <return type="com.google.gwt.xhr.client.XMLHttpRequest" />
      </method>
      <method name="getAllResponseHeaders" signature="getAllResponseHeaders()" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getReadyState" signature="getReadyState()" >
        <return type="int" />
      </method>
      <method name="getResponseArrayBuffer" signature="getResponseArrayBuffer()" >
        <return type="com.google.gwt.typedarrays.shared.ArrayBuffer" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getResponseHeader" signature="getResponseHeader(java.lang.String)" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getResponseText" signature="getResponseText()" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getResponseType" signature="getResponseType()" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getStatus" signature="getStatus()" >
        <return type="int" />
      </method>
      <method name="getStatusText" signature="getStatusText()" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="open" signature="open(java.lang.String,java.lang.String)" >
        <sink kind="ssrf" argpos="1" resource="web" />
        <sink kind="http_parameter_pollution" argpos="1" resource="web" />
      </method>
      <method name="open" signature="open(java.lang.String,java.lang.String,java.lang.String)" >
        <tags>username:2</tags>
        <sink kind="ssrf" argpos="1" resource="web" />
        <sink kind="http_parameter_pollution" argpos="1" resource="web" />
        <sink argpos="2" kind="hardcoded_credentials" resource="network"/>
      </method>
      <method name="open" signature="open(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" >
        <tags>username:2,password:3</tags>
        <sink kind="ssrf" argpos="1" resource="web" />
        <sink kind="http_parameter_pollution" argpos="1" resource="web" />
        <sink argpos="2,3" kind="hardcoded_credentials" resource="network"/>
      </method>
      <method name="send" signature="send()" />
      <method name="send" signature="send(java.lang.String)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="setRequestHeader" signature="setRequestHeader(java.lang.String,java.lang.String)" >
        <sink kind="header_manipulation" argpos="0,1" resource="web" />
      </method>
      <method name="setResponseType" signature="setResponseType(com.google.gwt.xhr.client.XMLHttpRequest.ResponseType)" />
      <method name="setResponseType" signature="setResponseType(java.lang.String)" >
        <sink kind="xss" argpos="0,1" resource="web" />
      </method>
    </class>
  </module>

  <module name="com.google.gwt.xml.client" >
    <class name="com.google.gwt.xml.client.Attr" supertypes="com.google.gwt.xml.client.Node" >
      <method name="getName" signature="getName()" >
        <return type="java.lang.String" />
      </method>
      <method name="getSpecified" signature="getSpecified()" >
        <return type="boolean" />
      </method>
      <method name="getValue" signature="getValue()" >
        <return type="java.lang.String" />
      </method>
    </class>
    <class name="com.google.gwt.xml.client.CDATASection" kind="interface" />
    <class name="com.google.gwt.xml.client.CharacterData" supertypes="com.google.gwt.xml.client.Node" >
      <method name="appendData" signature="appendData(java.lang.String)" />
      <method name="deleteData" signature="deleteData(int,int)" />
      <method name="getData" signature="getData()" >
        <return type="java.lang.String" />
      </method>
      <method name="getLength" signature="getLength()" >
        <return type="int" />
      </method>
      <method name="insertData" signature="insertData(int,java.lang.String)" />
      <method name="replaceData" signature="replaceData(int,int,java.lang.String)" />
      <method name="setData" signature="setData(java.lang.String)" />
      <method name="substringData" signature="substringData(int,int)" >
        <return type="java.lang.String" />
      </method>
    </class>
    <class name="com.google.gwt.xml.client.Document" supertypes="com.google.gwt.xml.client.Node" >
      <method name="createCDATASection" signature="createCDATASection(java.lang.String)" >
        <return type="com.google.gwt.xml.client.CDATASection" />
      </method>
      <method name="createComment" signature="createComment(java.lang.String)" >
        <return type="com.google.gwt.xml.client.Comment" />
      </method>
      <method name="createDocumentFragment" signature="createDocumentFragment()" >
        <return type="com.google.gwt.xml.client.DocumentFragment" />
      </method>
      <method name="createElement" signature="createElement(java.lang.String)" >
        <return type="com.google.gwt.xml.client.Element" />
      </method>
      <method name="createProcessingInstruction" signature="createProcessingInstruction(java.lang.String,java.lang.String)" >
        <return type="com.google.gwt.xml.client.ProcessingInstruction" />
      </method>
      <method name="createTextNode" signature="createTextNode(java.lang.String)" >
        <return type="com.google.gwt.xml.client.Text" />
      </method>
      <method name="getDocumentElement" signature="getDocumentElement()" >
        <return type="com.google.gwt.xml.client.Element" />
      </method>
      <method name="getElementById" signature="getElementById(java.lang.String)" >
        <return type="com.google.gwt.xml.client.Element" />
      </method>
      <method name="getElementsByTagName" signature="getElementsByTagName(java.lang.String)" >
        <return type="com.google.gwt.xml.client.NodeList" />
      </method>
      <method name="importNode" signature="importNode(com.google.gwt.xml.client.Node,boolean)" >
        <return type="com.google.gwt.xml.client.Node" />
      </method>
    </class>
    <class name="com.google.gwt.xml.client.Element" supertypes="com.google.gwt.xml.client.Node" >
      <method name="getAttribute" signature="getAttribute(java.lang.String)" >
        <return type="java.lang.String" />
      </method>
      <method name="getAttributeNode" signature="getAttributeNode(java.lang.String)" >
        <return type="com.google.gwt.xml.client.Attr" />
      </method>
      <method name="getElementsByTagName" signature="getElementsByTagName(java.lang.String)" >
        <return type="com.google.gwt.xml.client.NodeList" />
      </method>
      <method name="getTagName" signature="getTagName()" >
        <return type="java.lang.String" />
      </method>
      <method name="hasAttribute" signature="hasAttribute(java.lang.String)" >
        <return type="boolean" />
      </method>
    </class>
    <class name="com.google.gwt.xml.client.NamedNodeMap" >
      <method name="getLength" signature="getLength()" >
        <return type="int" />
      </method>
      <method name="getNamedItem" signature="getNamedItem(java.lang.String)" >
        <return type="com.google.gwt.xml.client.Node" />
      </method>
      <method name="item" signature="item(int)" >
        <return type="com.google.gwt.xml.client.Node" />
      </method>
    </class>
    <class name="com.google.gwt.xml.client.Node" >
      <method name="appendChild" signature="appendChild(com.google.gwt.xml.client.Node)" >
        <return type="com.google.gwt.xml.client.Node" />
      </method>
      <method name="cloneNode" signature="cloneNode(boolean)" >
        <return type="com.google.gwt.xml.client.Node" />
      </method>
      <method name="getAttributes" signature="getAttributes()" >
        <return type="com.google.gwt.xml.client.NamedNodeMap" />
      </method>
      <method name="getChildNodes" signature="getChildNodes()" >
        <return type="com.google.gwt.xml.client.NodeList" />
      </method>
      <method name="getFirstChild" signature="getFirstChild()" >
        <return type="com.google.gwt.xml.client.Node" />
      </method>
      <method name="getLastChild" signature="getLastChild()" >
        <return type="com.google.gwt.xml.client.Node" />
      </method>
      <method name="getNamespaceURI" signature="getNamespaceURI()" >
        <return type="java.lang.String" />
      </method>
      <method name="getNextSibling" signature="getNextSibling()" >
        <return type="com.google.gwt.xml.client.Node" />
      </method>
      <method name="getNodeName" signature="getNodeName()" >
        <return type="java.lang.String" />
      </method>
      <method name="getNodeType" signature="getNodeType()" >
        <return type="short" />
      </method>
      <method name="getNodeValue" signature="getNodeValue()" >
        <return type="java.lang.String" />
      </method>
      <method name="getOwnerDocument" signature="getOwnerDocument()" >
        <return type="com.google.gwt.xml.client.Document" />
      </method>
      <method name="getParentNode" signature="getParentNode()" >
        <return type="com.google.gwt.xml.client.Node" />
      </method>
      <method name="getPrefix" signature="getPrefix()" >
        <return type="java.lang.String" />
      </method>
      <method name="getPreviousSibling" signature="getPreviousSibling()" >
        <return type="com.google.gwt.xml.client.Node" />
      </method>
      <method name="hasAttributes" signature="hasAttributes()" >
        <return type="boolean" />
      </method>
      <method name="hasChildNodes" signature="hasChildNodes()" >
        <return type="boolean" />
      </method>
      <method name="insertBefore" signature="insertBefore(com.google.gwt.xml.client.Node,com.google.gwt.xml.client.Node)" >
        <return type="com.google.gwt.xml.client.Node" />
      </method>
      <method name="removeChild" signature="removeChild(com.google.gwt.xml.client.Node)" >
        <return type="com.google.gwt.xml.client.Node" />
      </method>
      <method name="replaceChild" signature="replaceChild(com.google.gwt.xml.client.Node,com.google.gwt.xml.client.Node)" >
        <return type="com.google.gwt.xml.client.Node" />
      </method>
    </class>
    <class name="com.google.gwt.xml.client.NodeList" >
      <method name="getLength" signature="getLength()" >
        <return type="int" />
      </method>
      <method name="item" signature="item(int)" >
        <return type="com.google.gwt.xml.client.Node" />
      </method>
    </class>
    <class name="com.google.gwt.xml.client.ProcessingInstruction" supertypes="com.google.gwt.xml.client.Node" >
      <method name="getData" signature="getData()" >
        <return type="java.lang.String" />
      </method>
      <method name="getTarget" signature="getTarget()" >
        <return type="java.lang.String" />
      </method>
    </class>
    <class name="com.google.gwt.xml.client.Text" supertypes="com.google.gwt.xml.client.CharacterData" >
      <method name="splitText" signature="splitText(int)" >
        <return type="com.google.gwt.xml.client.Text" />
      </method>
    </class>
    <class name="com.google.gwt.xml.client.XMLParser" >
      <method name="createDocument" signature="createDocument()" >
        <return type="com.google.gwt.xml.client.Document" />
      </method>
      <method name="parse" signature="parse(java.lang.String)" >
        <return type="com.google.gwt.xml.client.Document" />
      </method>
      <method name="removeWhitespace" signature="removeWhitespace(com.google.gwt.xml.client.Node)" >
      </method>
      <method name="supportsCDATASection" signature="supportsCDATASection()" >
        <return type="boolean" />
      </method>
    </class>
    <class name="com.google.gwt.xml.client.XMLParser" >
      <method name="createDocument" signature="createDocument()" >
        <return type="com.google.gwt.xml.client.Document" />
      </method>
      <method name="parse" signature="parse(java.lang.String)" >
        <return type="com.google.gwt.xml.client.Document" />
      </method>
      <method name="removeWhitespace" signature="removeWhitespace(com.google.gwt.xml.client.Node)" />
      <method name="supportsCDATASection" signature="supportsCDATASection()" >
        <return type="boolean" />
      </method>
    </class>
  </module>

  <module name="com.google.web.bindery.requestfactory.gwt.client" >
    <class name="com.google.web.bindery.requestfactory.gwt.client.DefaultRequestTransport" supertypes="com.google.web.bindery.requestfactory.shared.RequestTransport,java.lang.Object" >
      <method name="getRequestUrl" signature="getRequestUrl()" >
        <return type="java.lang.String" />
      </method>
      <method name="send" signature="send(java.lang.String,com.google.web.bindery.requestfactory.gwt.client.TransportReceiver)" >
        <sink kind="xss" argpos="0" resource="web" />
      </method>
      <method name="setRequestUrl" signature="setRequestUrl(java.lang.String)" >
        <sink kind="ssrf" argpos="0" resource="web" />
      </method>
      <method name="configureRequestBuilder" signature="configureRequestBuilder(com.google.gwt.http.client.RequestBuilder)" />
      <method name="createRequestBuilder" signature="createRequestBuilder()" >
        <return type="com.google.gwt.http.client.RequestBuilder" />
      </method>
      <method name="createRequestCallback" signature="createRequestCallback(com.google.web.bindery.requestfactory.gwt.client.TransportReceiver)" >
        <return type="com.google.gwt.http.client.RequestCallback" />
      </method>
    </class>
  </module>

  <module name="com.google.web.bindery.requestfactory.server" >
    <class name="com.google.web.bindery.requestfactory.server.RequestFactoryServlet" supertypes="javax.servlet.http.HttpServlet" >
      <method name="getThreadLocalRequest" signature="getThreadLocalRequest()" >
        <return type="javax.servlet.http.HttpServletRequest" />
      </method>
      <method name="getThreadLocalResponse" signature="getThreadLocalResponse()" >
        <return type="javax.servlet.http.HttpServletResponse" />
      </method>
      <method name="getThreadLocalServletContext" signature="getThreadLocalServletContext()" >
        <return type="javax.servlet.ServletContext" />
      </method>
      <method name="doPost" signature="doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)" />
    </class>
    <class name="com.google.web.bindery.requestfactory.server.SimpleRequestProcessor" >
      <method name="fromBase64" signature="fromBase64(java.lang.String)" >
        <tags>deneutralization:encoding</tags>
        <return type="java.lang.String" />
      </method>
      <method name="toBase64" signature="toBase64(java.lang.String)" >
        <return type="java.lang.String" />
        <neutralization argpos="0" kind="encoding" resource="other"/>
      </method>
      <method name="process" signature="process(java.lang.String)" >
        <return type="java.lang.String" />
      </method>
      <method name="setExceptionHandler" signature="setExceptionHandler(com.google.web.bindery.requestfactory.server.ExceptionHandler)" />
      <method name="createOobMessage" signature="createOobMessage(java.util.List)" >
        <return type="com.google.web.bindery.autobean.shared.Splittable" />
      </method>
      <method name="decodeOobMessage" signature="decodeOobMessage(java.lang.Class,com.google.web.bindery.autobean.shared.Splittable)" >
        <return type="java.util.List" />
      </method>
      <method name="process" signature="process(com.google.web.bindery.requestfactory.shared.messages.RequestMessage,com.google.web.bindery.requestfactory.shared.messages.ResponseMessage)" />
    </class>
  </module>

  <module name="com.google.web.bindery.requestfactory.shared" >
    <class name="com.google.web.bindery.requestfactory.shared.RequestContext" >
      <method name="append" signature="append(java.lang.Object)" >
        <return type="java.lang.Object" />
      </method>
      <method name="create" signature="create(java.lang.Class)" >
        <return type="java.lang.Object" />
      </method>
      <method name="edit" signature="edit(java.lang.Object)" >
        <return type="java.lang.Object" />
      </method>
      <method name="find" signature="find(com.google.web.bindery.requestfactory.shared.EntityProxyId)" >
        <return type="com.google.web.bindery.requestfactory.shared.Request" />
      </method>
      <method name="fire" signature="fire()" />
      <method name="fire" signature="fire(com.google.web.bindery.requestfactory.shared.Receiver)" />
      <method name="getRequestFactory" signature="getRequestFactory()" >
        <return type="com.google.web.bindery.requestfactory.shared.RequestFactory" />
      </method>
      <method name="isChanged" signature="isChanged()" >
        <return type="boolean" />
      </method>
    </class>
    <class name="com.google.web.bindery.requestfactory.shared.Request" >
      <method name="fire" signature="fire()" />
      <method name="fire" signature="fire(com.google.web.bindery.requestfactory.shared.Receiver)" />
      <method name="getRequestContext" signature="getRequestContext()" >
        <return type="com.google.web.bindery.requestfactory.shared.RequestContext" />
      </method>
      <method name="to" signature="to(com.google.web.bindery.requestfactory.shared.Receiver)" >
        <return type="com.google.web.bindery.requestfactory.shared.RequestContext" />
      </method>
      <method name="with" signature="with(java.lang.String...)" >
        <return type="com.google.web.bindery.requestfactory.shared.Request" />
      </method>
    </class>
    <class name="com.google.web.bindery.requestfactory.shared.RequestFactory" >
      <method name="find" signature="find(com.google.web.bindery.requestfactory.shared.EntityProxyId)" >
        <return type="com.google.web.bindery.requestfactory.shared.Request" />
      </method>
      <method name="getEventBus" signature="getEventBus()" >
        <return type="com.google.web.bindery.event.shared.EventBus" />
      </method>
      <method name="getHistoryToken" signature="getHistoryToken(java.lang.Class)" >
        <return type="java.lang.String" />
      </method>
      <method name="getHistoryToken" signature="getHistoryToken(com.google.web.bindery.requestfactory.shared.EntityProxyId)" >
        <return type="java.lang.String" />
      </method>
      <method name="getProxyClass" signature="getProxyClass(java.lang.String)" >
        <return type="java.lang.Class" />
      </method>
      <method name="getProxyId" signature="getProxyId(java.lang.String)" >
        <return type="com.google.web.bindery.requestfactory.shared.EntityProxyId" />
      </method>
      <method name="getRequestTransport" signature="getRequestTransport()" >
        <return type="com.google.web.bindery.requestfactory.shared.RequestTransport" />
      </method>
      <method name="getSerializer" signature="getSerializer(com.google.web.bindery.requestfactory.shared.ProxyStore)" >
        <return type="com.google.web.bindery.requestfactory.shared.ProxySerializer" />
      </method>
      <method name="initialize" signature="initialize(com.google.web.bindery.event.shared.EventBus)" />
      <method name="initialize" signature="initialize(com.google.web.bindery.event.shared.EventBus,com.google.web.bindery.requestfactory.shared.RequestTransport)" />
    </class>
    <class name="com.google.web.bindery.requestfactory.shared.RequestTransport" >
      <method name="send" signature="send(java.lang.String,com.google.web.bindery.requestfactory.shared.RequestTransport.TransportReceiver)" />
    </class>
    <class name="com.google.web.bindery.requestfactory.shared.ServerFailure" >
      <method name="getExceptionType" signature="getExceptionType()" >
        <return type="java.lang.String" />
      </method>
      <method name="getMessage" signature="getMessage()" >
        <return type="java.lang.String" />
      </method>
      <method name="getRequestContext" signature="getRequestContext()" >
        <return type="com.google.web.bindery.requestfactory.shared.RequestContext" />
      </method>
      <method name="getStackTraceString" signature="getStackTraceString()" >
        <return type="java.lang.String" />
      </method>
      <method name="isFatal" signature="isFatal()" >
        <return type="boolean" />
      </method>
      <method name="setRequestContext" signature="setRequestContext(com.google.web.bindery.requestfactory.shared.RequestContext)" />
    </class>
  </module>
</library>