<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="http://www.optimyth.com/schema/definitions/library_metadata"
         name="java.richfaces" standard="JBoss_RichFaces" technology="java">

  <description url="https://richfaces.jboss.org/">RichFaces</description>

  <!-- https://docs.jboss.org/richfaces/latest_4_5_X/javadoc/ -->

  <module name="org.ajax4jsf.io" >
    <class name="org.ajax4jsf.io.FastBufferInputStream" supertypes="java.io.InputStream" />
    <class name="org.ajax4jsf.io.FastBufferOutputStream" supertypes="java.io.OutputStream" />
    <class name="org.ajax4jsf.io.FastBufferReader" supertypes="java.io.Reader" />
    <class name="org.ajax4jsf.io.FastBufferWriter" supertypes="java.io.Writer" />
    <class name="org.ajax4jsf.io.SAXResponseWriter" supertypes="javax.faces.context.ResponseWriter" />
  </module>

  <module name="org.richfaces.el" >
    <class name="org.richfaces.el.CapturingELContext" supertypes="javax.el.ELContext" >
      <method name="getContext" signature="getContext(java.lang.Class)" >
        <return type="java.lang.Object" />
      </method>
      <method name="getELResolver" signature="getELResolver()" >
        <return type="javax.el.ELResolver" />
      </method>
      <method name="getFunctionMapper" signature="getFunctionMapper()" >
        <return type="javax.el.FunctionMapper" />
      </method>
      <method name="getVariableMapper" signature="getVariableMapper()" >
        <return type="javax.el.VariableMapper" />
      </method>
      <method name="getContext" signature="getContext(java.lang.Class)" >
        <return type="java.lang.Object" />
      </method>
      <method name="getLocale" signature="getLocale()" >
        <return type="java.util.Locale" />
      </method>
      <method name="getReferenceExpression" signature="getReferenceExpression()" >
        <return type="javax.el.ValueExpression" />
      </method>
    </class>
    <class name="org.richfaces.el.ELContextWrapper" supertypes="javax.el.ELContext" >
      <method name="getELResolver" signature="getELResolver()" >
        <return type="javax.el.ELResolver" />
      </method>
      <method name="getFunctionMapper" signature="getFunctionMapper()" >
        <return type="javax.el.FunctionMapper" />
      </method>
      <method name="getVariableMapper" signature="getVariableMapper()" >
        <return type="javax.el.VariableMapper" />
      </method>
      <method name="getContext" signature="getContext(java.lang.Class)" >
        <return type="java.lang.Object" />
      </method>
      <method name="getLocale" signature="getLocale()" >
        <return type="java.util.Locale" />
      </method>
    </class>
  </module>

  <module name="org.richfaces.model" >
    <class name="org.richfaces.model.UploadedFile" >
      <method name="getContentType" signature="getContentType()" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getData" signature="getData()" >
        <return type="byte[]" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getFileExtension" signature="v()" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getHeader" signature="getHeader(java.lang.String)" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getHeaders" signature="getHeaders()" >
        <return type="java.util.Collection" elementType="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getInputStream" signature="getInputStream()" >
        <return type="java.io.InputStream" />
      </method>
      <method name="getName" signature="getName()" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getParameterName" signature="getParameterName()" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getSize" signature="getSize()" >
        <return type="long" />
      </method>
      <method name="write" signature="write(java.lang.String)" >
        <sink kind="path_traversal" argpos="0" resource="filesystem" />
      </method>
    </class>
  </module>

  <module name="org.richfaces.log" >
    <class name="org.richfaces.log.LogFactory" >
      <method name="getLogger" signature="getLogger()" >
        <return type="org.richfaces.log.Logger" />
      </method>
      <method name="getLogger" signature="getLogger(java.lang.String)" >
        <return type="org.richfaces.log.Logger" />
      </method>
    </class>
    <class name="org.richfaces.log.Logger" >
      <method name="debug" signature="debug(java.lang.CharSequence)" alias="info,warn,error,log" >
        <sink kind="log_forging" argpos="0" resource="web" />
      </method>
      <method name="debug" signature="debug(java.lang.Enum,java.lang.Object...)" alias="info,warn,error,log" >
        <sink kind="log_forging" argpos="0" resource="web" />
      </method>
      <method name="debug" signature="debug(java.lang.CharSequence,java.lang.Throwable)" alias="info,warn,error,log" >
        <sink kind="log_forging" argpos="0" resource="web" />
      </method>
      <method name="debug" signature="debug(java.lang.Throwable,java.lang.Enum,java.lang.Object...)" match="fullsignature" alias="info,warn,error,log" />
      <method name="debug" signature="debug(java.lang.Throwable)" match="fullsignature" alias="info,warn,error,log" />
    </class>
    <class name="org.richfaces.log.JavaLogger" supertypes="java.lang.Object,org.richfaces.log.Logger" />
  </module>

  <module name="org.richfaces.request" >
    <class name="org.richfaces.request.BaseUploadedFile" supertypes="rg.richfaces.model.UploadedFile" />
    <class name="org.richfaces.request.UploadedFile25" supertypes="org.richfaces.request.BaseUploadedFile" />
    <class name="org.richfaces.request.UploadedFile30" supertypes="org.richfaces.request.BaseUploadedFile" />
    <class name="org.richfaces.request.MultipartRequest25" supertypes="javax.servlet.http.HttpServletRequestWrapper" />
    <class name="org.richfaces.request.MultipartRequest25" supertypes="javax.servlet.http.HttpServletRequestWrapper" />
    <class name="org.richfaces.request.MultipartRequestParser" >
      <method name="getParameters" signature="getParameters()" >
        <return type="com.google.common.collect.Multimap" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getParameterValueFromQueryString" signature="getParameterValueFromQueryString(java.lang.String)" >
        <return type="java.lang.String" />
        <source kind="user_input" argpos="-1" resource="web" />
      </method>
      <method name="getUploadedFiles" signature="getUploadedFiles()" >
        <return type="org.richfaces.model.UploadedFile" />
      </method>
    </class>
  </module>

  <module name="org.richfaces.util" >
    <class name="org.richfaces.util.LRUMap" supertypes="java.io.Serializable,java.util.LinkedHashMap" />
    <class name="org.richfaces.util.PropertiesUtil" >
      <method name="loadProperties" signature="loadProperties(java.util.Properties,java.lang.String)" >
        <tags>property_loader: true</tags>
        <return type="boolean" />
      </method>
      <method name="loadProperties" signature="loadProperties(java.lang.String)" >
        <tags>property_loader: true</tags>
        <return type="java.util.Map" />
      </method>
    </class>
    <class name="org.richfaces.util.Sets" >
      <method name="asSet" signature="asSet(java.lang.Object)" >
        <return type="java.util.Set" />
      </method>
    </class>
    <class name="org.richfaces.util.StreamUtils" >
      <method name="toByteArray" signature="toByteArray(java.io.InputStream)" >
        <return type="byte[]" />
      </method>
    </class>
    <class name="org.richfaces.util.URLUtils" >
      <method name="isValidURL" signature="isValidURL(java.lang.String)" >
        <return type="boolean" />
      </method>
    </class>
  </module>

  <module name="org.richfaces.webapp" >
    <class name="prg.richfaces.webapp.PushServlet" supertypes="org.atmosphere.cpr.AtmosphereServlet" />
    <class name="org.richfaces.webapp.ResourceServlet" supertypes="javax.servlet.Servlet" >
      <method name="getServletConfig" signature="getServletConfig()" >
        <return type="javax.servlet.ServletConfig" />
      </method>
      <method name="getServletInfo" signature="getServletInfo()" >
        <return type="java.lang.String" />
      </method>
    </class>
    <class name="org.richfaces.webapp.ServletConfigDefaultsFacade" supertypes="javax.servlet.ServletConfig" />
  </module>

  <module name="org.ajax4jsf.util.base64" >
    <class name="org.ajax4jsf.util.base64.BinaryDecoder" supertypes="org.ajax4jsf.util.base64.Decoder" >
      <method name="decode" signature="decode(byte[])" >
        <tags>deneutralization:encoding</tags>
        <return type="byte[]" />
      </method>
    </class>
    <class name="org.ajax4jsf.util.base64.BinaryEncoder" supertypes="org.ajax4jsf.util.base64.Encoder" >
      <method name="encode" signature="encode(byte[])" >
        <return type="byte[]" />
        <neutralization argpos="0" kind="encoding" resource="other"/>
      </method>
    </class>
    <class name="org.ajax4jsf.util.base64.Codec" >
      <method name="setPassword" signature="setPassword(java.lang.String)" >
        <tags>password:0</tags>
        <sink kind="hardcoded_credentials" argpos="0" resource="web" />
      </method>
      <method name="decode" signature="decode(java.lang.String)" >
        <tags>deneutralization:encoding</tags>
        <return type="java.lang.String" />
      </method>
      <method name="encode" signature="encode(java.lang.String)" >
        <return type="java.lang.String" />
        <neutralization argpos="0" kind="encoding" resource="other"/>
      </method>
      <method name="decode" signature="decode(byte[])" >
        <tags>deneutralization:encoding</tags>
        <return type="byte[]" />
      </method>
      <method name="encode" signature="encode(byte[])" >
        <return type="byte[]" />
        <neutralization argpos="0" kind="encoding" resource="other"/>
      </method>
    </class>
    <class name="org.ajax4jsf.util.base64.Decoder" >
      <method name="decode" signature="decode(java.lang.Object)" >
        <tags>deneutralization:encoding</tags>
        <return type="java.lang.Object" />
      </method>
    </class>
    <class name="org.ajax4jsf.util.base64.Encoder" >
      <method name="encode" signature="encode(java.lang.Object)" >
        <return type="java.lang.Object" />
        <neutralization argpos="0" kind="encoding" resource="other"/>
      </method>
    </class>
    <class name="org.ajax4jsf.util.base64.URL64Codec" supertypes="java.lang.Object,org.ajax4jsf.util.base64.BinaryDecoder,org.ajax4jsf.util.base64.BinaryEncoder" >
      <method name="encodeBase64" signature="encodeBase64(byte[])" >
        <return type="byte[]" />
        <neutralization argpos="0" kind="encoding" resource="other"/>
      </method>
      <method name="encodeBase64Chunked" signature="encodeBase64Chunked(byte[])" >
        <return type="byte[]" />
        <neutralization argpos="0" kind="encoding" resource="other"/>
      </method>
      <method name="encodeBase64" signature="encodeBase64(byte[],boolean)" >
        <return type="byte[]" />
        <neutralization argpos="0" kind="encoding" resource="other"/>
      </method>
      <method name="decodeBase64" signature="decodeBase64(byte[])" >
        <tags>deneutralization:encoding</tags>
        <return type="byte[]" />
      </method>
    </class>
    <class name="org.ajax4jsf.util.base64.URLCodec" supertypes="java.lang.Object,org.ajax4jsf.util.base64.BinaryDecoder,org.ajax4jsf.util.base64.BinaryEncoder" >
      <method name="encodeUrl" signature="encodeUrl(byte[])" >
        <return type="byte[]" />
        <neutralization argpos="0" kind="xss" resource="web"/>
        <neutralization argpos="0" kind="open_redirect" resource="web"/>
      </method>
      <method name="encodeUrl" signature="encodeUrl(java.util.BitSet,byte[])" >
        <return type="byte[]" />
        <neutralization argpos="1" kind="xss" resource="web"/>
        <neutralization argpos="1" kind="open_redirect" resource="web"/>
      </method>
      <method name="decodeUrl" signature="decodeUrl(byte[])" >
        <return type="byte[]" />
      </method>
    </class>
  </module>
</library>