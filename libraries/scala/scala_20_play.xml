<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="http://www.optimyth.com/schema/definitions/library_metadata"
         technology="scala" name="play-framework" standard="Play_framework">

  <description url="https://www.playframework.com/">Java and Scala web framework</description>

  <!-- https://www.playframework.com/documentation/2.6.x/api/scala/index.html -->

  <module name="play.api" >
    <class name="play.api.mvc.ControllerHelpers" kind="trait" supertypes="play.api.mvc.Results"/>
    <class name="play.api.mvc.Controller" kind="trait" supertypes="play.api.mvc.ControllerHelpers"/>
    <class name="play.api.mvc.BaseControllerHelpers" kind="trait" supertypes="play.api.mvc.ControllerHelpers"/>
    <class name="play.api.mvc.MessagesBaseController" kind="trait" supertypes="play.api.mvc.BaseControllerHelpers"/>
    <class name="play.api.mvc.MessagesAbstractController" kind="trait" supertypes="play.api.mvc.MessagesBaseController"/>

    <class name="play.api.mvc.Action" supertypes="play.api.mvc.Results">
      <constructor name="Action" signature="Action()" match="name">
        <tags>lambda:play.api.mvc.Request</tags>
      </constructor>
      <function name="apply" signature="apply(play.api.mvc.Request)" match="name">
        <return type="play.api.mvc.Result" />
      </function>
    </class>

    <class name="play.api.mvc.Results" supertypes="scala.AnyRef">
      <function name="Accepted" signature="Accepted()" match="name">
        <return type="play.api.mvc.Results.Status" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="Async" signature="Async()" match="name">
        <return type="play.api.mvc.AsyncResult" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="BadRequest" signature="BadRequest()" match="name">
        <return type="play.api.mvc.Results.Status" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="Conflict" signature="Conflict()" match="name">
        <return type="play.api.mvc.Results.Status" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="EntityTooLarge" signature="EntityTooLarge()" match="name">
        <return type="play.api.mvc.Results.Status" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="ExpectationFailed" signature="ExpectationFailed()" match="name">
        <return type="play.api.mvc.Results.Status" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="Forbidden" signature="Forbidden()" match="name">
        <return type="play.api.mvc.Results.Status" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="Found" signature="Found()" match="name">
        <return type="play.api.mvc.SimpleResult" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="Gone" signature="Gone()" match="name">
        <return type="play.api.mvc.Results.Status" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
      </function>
      <function name="InternalServerError" signature="InternalServerError()" match="name">
        <return type="play.api.mvc.Results.Status" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="MethodNotAllowed" signature="MethodNotAllowed()" match="name">
        <return type="play.api.mvc.Results.Status" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="MovedPermanently" signature="MovedPermanently()" match="name">
        <return type="play.api.mvc.SimpleResult" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0" kind="open_redirect" resource="web" />
        <sink argpos="0" kind="execution_after_redirect" resource="web" />
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="NoContent" signature="NoContent()" match="name">
        <return type="play.api.mvc.SimpleResult" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="NonAuthoritativeInformation" signature="NonAuthoritativeInformation()" match="name">
        <return type="play.api.mvc.Results.Status" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="NotAcceptable" signature="NotAcceptable()" match="name">
        <return type="play.api.mvc.Results.Status" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="NotFound" signature="NotFound()" match="name">
        <return type="play.api.mvc.Results.Status" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="NotImplemented" signature="NotImplemented()" match="name">
        <return type="play.api.mvc.Results.Status" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="NotModified" signature="NotModified()" match="name">
        <return type="play.api.mvc.SimpleResult" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="Ok" signature="Ok()" match="name">
        <return type="play.api.mvc.Results.Status" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="PartialContent" signature="PartialContent()" match="name">
        <return type="play.api.mvc.Results.Status" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="PreconditionFailed" signature="PreconditionFailed()" match="name">
        <return type="play.api.mvc.Results.Status" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="Redirect" signature="Redirect(play.api.mvc.Call)" match="numargs">
        <parameters>
          <param type="play.api.mvc.Call" name="call" />
        </parameters>
        <return type="play.api.mvc.SimpleResult" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0" kind="open_redirect" resource="web" />
        <sink argpos="0" kind="execution_after_redirect" resource="web" />
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="Redirect" signature="Redirect(String, scala.Int)" match="numargs">
        <parameters>
          <param type="String" name="url" />
          <param type="scala.Int" name="status" />
        </parameters>
        <return type="play.api.mvc.SimpleResult" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0" kind="open_redirect" resource="web" />
        <sink argpos="0" kind="execution_after_redirect" resource="web" />
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="Redirect" signature="Redirect(String, Map, scala.Int)" match="numargs">
        <parameters>
          <param type="String" name="url" />
          <param type="scala.Map" name="queryString" />
          <param type="scala.Int" name="status" />
        </parameters>
        <return type="play.api.mvc.SimpleResult" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0" kind="open_redirect" resource="web" />
        <sink argpos="0" kind="execution_after_redirect" resource="web" />
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="RequestTimeout" signature="RequestTimeout()" match="name">
        <return type="play.api.mvc.Results.Status" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="ResetContent" signature="ResetContent()" match="name">
        <return type="play.api.mvc.SimpleResult" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="SeeOther" signature="SeeOther()" match="name">
        <return type="play.api.mvc.SimpleResult" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0" kind="open_redirect" resource="web" />
        <sink argpos="0" kind="execution_after_redirect" resource="web" />
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="ServiceUnavailable" signature="ServiceUnavailable()" match="name">
        <return type="play.api.mvc.Results.Status" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="Status" signature="Status()" match="name">
        <return type="play.api.mvc.Results.Status" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="TemporaryRedirect" signature="TemporaryRedirect()" match="name">
        <return type="play.api.mvc.SimpleResult" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0" kind="open_redirect" resource="web" />
        <sink argpos="0" kind="execution_after_redirect" resource="web" />
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="TooManyRequest" signature="TooManyRequest()" match="name">
        <return type="play.api.mvc.Results.Status" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="Unauthorized" signature="Unauthorized()" match="name">
        <return type="play.api.mvc.Results.Status" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="UnsupportedMediaType" signature="UnsupportedMediaType()" match="name">
        <return type="play.api.mvc.Results.Status" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
      <function name="UriTooLong" signature="UriTooLong()" match="name">
        <return type="play.api.mvc.Results.Status" />
        <sink argpos="0,1,2,3" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
        <sink argpos="0,1,2,3" kind="privacy_violation" resource="web" />
      </function>
    </class>

    <class name="play.api.mvc.Results.Status" supertypes="play.api.mvc.SimpleResult"/>
    <class name="play.api.mvc.SimpleResult" supertypes="play.api.mvc.PlainResult"/>
    <class name="play.api.mvc.PlainResult" supertypes="play.api.mvc.Result">
      <method name="withSession" signature="withSession()" >
        <return type="play.api.mvc.PlainResult" />
        <sink argpos="0" kind="trust_boundary" resource="web" />
      </method>
      <method name="flashing" signature="flashing()" >
        <return type="play.api.mvc.PlainResult" />
      </method>
      <method name="withNewSession" signature="withNewSession()" >
        <return type="play.api.mvc.PlainResult" />
      </method>
      <method name="withHeaders" signature="withHeaders()" match="name" >
        <tags>header:0</tags>
        <return type="play.api.libs.ws.WSRequest" />
      </method>
    </class>
    <class name="play.api.mvc.Result" supertypes="scala.NotNull">
      <method name="as" signature="as(String)" />
    </class>

    <class name="play.api.mvc.RequestHeader" supertypes="Predef.AnyRef">
      <field name="cookies" type="play.api.mvc.Cookies" >
        <tags>CWE:784</tags>
        <source argpos="-1" kind="user_input" resource="web" />
      </field>
      <field name="domain" type="String" >
        <source argpos="-1" kind="user_input" resource="web" />
      </field>
      <field name="flash" type="Flash" >
        <source argpos="-1" kind="user_input" resource="web" />
      </field>
      <field name="host" type="String" >
        <source argpos="-1" kind="user_input" resource="web" />
      </field>
      <field name="body" type="String" >
        <source argpos="-1" kind="user_input" resource="web" />
      </field>
      <field name="rawQueryString" type="String" >
        <source argpos="-1" kind="user_input" resource="web" />
      </field>
      <field name="session" type="Session" >
        <source argpos="-1" kind="user_input" resource="web" />
      </field>

      <function name="headers" signature="headers()" >
        <return type="play.api.mvc.Headers" />
        <source argpos="-1" kind="user_input" resource="web" />
      </function>
      <function name="method" signature="method()" >
        <return type="String" />
        <source argpos="-1" kind="user_input" resource="web" />
      </function>
      <function name="path" signature="path()" >
        <return type="String" />
        <source argpos="-1" kind="user_input" resource="web" />
      </function>
      <function name="queryString" signature="queryString()" >
        <tags>lambda:String</tags>
        <return type="Map" />
        <source argpos="-1" kind="user_input" resource="web" />
      </function>
      <function name="getQueryString" signature="getQueryString()" >
        <tags>lambda:String</tags>
        <return type="Map" />
        <source argpos="-1" kind="user_input" resource="web" />
      </function>
      <function name="uri" signature="uri()" >
        <return type="String" />
      </function>
      <function name="flashing" signature="flashing()" >
        <return type="play.api.mvc.RequestHeader" />
        <sink argpos="0" kind="xss" resource="web" />
        <sink argpos="0" kind="privacy_violation" resource="web" />
      </function>
      <function name="discardingCookies" signature="discardingCookies()" >
        <return type="play.api.mvc.RequestHeader" />
      </function>
      <function name="withCookies" signature="withCookies()" >
        <return type="play.api.mvc.RequestHeader" />
      </function>
    </class>

    <class name="play.api.mvc.Request" supertypes="play.api.mvc.RequestHeader"/>

    <class name="play.api.mvc.Headers" supertypes="AnyRef">
      <function name="apply" signature="apply(String)" >
        <return type="String" />
      </function>
      <function name="get" signature="get(String)" >
        <return type="String" />
      </function>
      <function name="toMap" signature="toMap()" >
        <return type="Map" />
      </function>
      <function name="toSimpleMap" signature="toSimpleMap()" >
        <return type="Map" />
      </function>
    </class>

    <class name="play.api.mvc.Cookies" supertypes="AnyRef">
      <function name="apply" signature="apply(String)" >
        <return type="play.api.mvc.Cookie" />
      </function>
      <function name="get" signature="get(String)" >
        <tags>CWE:784</tags>
        <return type="scala.Option" elementType="play.api.mvc.Cookie"/>
      </function>
    </class>

    <class name="play.api.mvc.Flash" supertypes="scala.Product,scala.Serializable">
      <field name="data" type="Map" />

      <function name="apply" signature="apply(String)" >
        <return type="String" />
      </function>
      <function name="get" signature="get(String)" >
        <return type="String" />
      </function>
    </class>

    <class name="play.api.mvc.Session" supertypes="scala.Product,scala.Serializable">
      <field name="data" type="Map" />

      <function name="apply" signature="apply(String)" >
        <return type="String" />
      </function>
      <function name="get" signature="get(String)" >
        <return type="String" />
        <source argpos="-1" kind="user_input" resource="web"/>
      </function>
      <method name="+" signature="+(java.lang.String,java.lang.Object)">
        <tags>CWE:501, stateChange</tags>
        <sink argpos="0,1" kind="trust_boundary" resource="web"/>
      </method>
    </class>

    <class name="play.api.data.Form" supertypes="scala.Product" >
      <method name="Form" signature="Form()" >
        <return type="play.api.data.Form" />
      </method>

      <method name="bind" signature="bind()" >
        <return type="play.api.data.Form" />
      </method>
      <method name="bindFromRequest" signature="bindFromRequest()" >
        <return type="play.api.data.Form" />
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
    </class>

    <!-- WS -->
    <class name="play.api.libs.ws.WSClient" supertypes="java.io.Closeable" >
      <method name="url" signature="url(String)" >
        <return type="play.api.libs.ws.WSRequest" />
        <sink argpos="0" kind="ssrf" resource="network" />
        <sink argpos="0" kind="insecure_transport" resource="network" />
        <sink argpos="0" kind="http_parameter_pollution" resource="network" />
      </method>
    </class>
    <class name="play.api.libs.ws.WSRequest" supertypes="play.api.libs.ws.StandaloneWSRequest" >
      <method name="post" signature="post()" >
        <return type="scala.concurrent.Future" elementType="play.api.libs.ws.WSRequest" />
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
      <method name="get" signature="get()" alias="delete, execute, put">
        <return type="play.api.libs.ws.WSResponse" />
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
      <method name="withAuth" signature="withAuth()" >
        <tags>username:0,password:1</tags>
        <return type="play.api.libs.ws.WSRequest" />
        <sink argpos="1" kind="plaintext_storage" resource="filesystem" />
      </method>
      <method name="withBody" signature="withBody()" >
        <return type="play.api.libs.ws.WSRequest" />
      </method>
      <method name="withCookies" signature="withCookies()" >
        <return type="play.api.libs.ws.WSRequest" />
      </method>
      <method name="withFollowRedirects" signature="withFollowRedirects()" >
        <return type="play.api.libs.ws.WSRequest" />
      </method>
      <method name="withHttpHeaders" signature="withHttpHeaders()" >
        <return type="play.api.libs.ws.WSRequest" />
      </method>
      <method name="withMethod" signature="withMethod()" >
        <return type="play.api.libs.ws.WSRequest" />
      </method>
      <method name="withProxyServer" signature="withProxyServer()" >
        <return type="play.api.libs.ws.WSRequest" />
      </method>
      <method name="withQueryStringParameters" signature="withQueryStringParameters()" >
        <return type="play.api.libs.ws.WSRequest" />
      </method>
      <method name="withRequestFilter" signature="withRequestFilter()" >
        <return type="play.api.libs.ws.WSRequest" />
      </method>
      <method name="withRequestTimeout" signature="withRequestTimeout()" >
        <return type="play.api.libs.ws.WSRequest" />
      </method>
      <method name="withVirtualHost" signature="withVirtualHost()" >
        <return type="play.api.libs.ws.WSRequest" />
      </method>
      <method name="withHeaders" signature="withHeaders()" match="name" >
        <tags>header:0</tags>
        <return type="play.api.libs.ws.WSRequest" />
      </method>
      <method name="withQueryString" signature="withQueryString()" >
        <return type="play.api.libs.ws.WSRequest" />
      </method>
    </class>

    <class name="play.api.mvc.Cookie" supertypes="scala.Product, scala.Serializable" >
      <constructor name="Cookie" signature="Cookie(String, String, Int, String, String, Boolean, Boolean)" >
        <sink argpos="1" paramNames="value" kind="cookie_plaintext_storage" resource="web" />
        <sink argpos="1" paramNames="value" kind="header_manipulation"  resource="web"/>
      </constructor>

      <field name="value" type="String" >
        <sink argpos="-1" kind="cookie_plaintext_storage" resource="web" />
        <sink argpos="-1" kind="header_manipulation"  resource="web"/>
        <source argpos="-1" kind="user_input" resource="web"/>
      </field>
      <field name="domain" type="String" >
        <source argpos="-1" kind="user_input" resource="web"/>
      </field>
      <field name="name" type="String" >
        <source argpos="-1" kind="user_input" resource="web"/>
      </field>
      <field name="path" type="String" >
        <source argpos="-1" kind="user_input" resource="web"/>
      </field>
    </class>

    <class name="Play.current.configuration" supertypes="play.api.Configuration"/>

    <class name="play.api.Configuration">
      <method name="underlying" signature="underlying()" >
        <return type="play.api.Configuration" />
      </method>
      <method name="getString" signature="getString()"  alias="getStringList">
        <return type="String" />
        <source argpos="-1" kind="sensitive_info" resource="other" >
          <checker id="scala.configPlayChecker"/>
        </source>
      </method>
    </class>

    <class name="play.Environment">
      <method name="underlying" signature="underlying()" >
        <return type="play.api.Configuration" />
      </method>
      <method name="isDev" signature="isDev()" >
        <sink argpos="0" kind="security_decision" resource="web"/>
      </method>
      <method name="isProd" signature="isProd()" >
        <sink argpos="0" kind="security_decision" resource="web"/>
      </method>
    </class>

    <!-- https://www.playframework.com/documentation/2.4.x/api/scala/index.html#play.api.libs.ws.WS$ -->
    <class name="play.api.libs.ws.WS" kind="object" >
      <method name="url" signature="url(String)" >
        <return type="play.api.libs.ws.WSRequest" />
        <sink argpos="0" kind="ssrf" resource="network" />
      </method>
      <method name="client" signature="client(play.api.Application)" >
        <return type="play.api.libs.ws.WSClient" />
      </method>
      <method name="clientUrl" signature="clientUrl(play.api.libs.ws.WSClient)" >
        <return type="play.api.libs.ws.WSRequest" />
        <sink argpos="0" kind="ssrf" resource="network" />
      </method>
    </class>

    <!-- JSON -->
    <class name="play.libs.Json">
      <method name="asciiStringify" signature="asciiStringify(com.fasterxml.jackson.databind.JsonNode)" alias="stringify">
        <return type="java.lang.String"/>
        <neutralization argpos="0" kind="json_injection" resource="web"/>
      </method>
      <method name="parse" signature="parse(java.lang.String)" match="name" >
        <return type="com.fasterxml.jackson.databind.JsonNode"/>
        <propagate from="0" to="-1"/>
        <sink argpos="0" kind="json_injection" resource="other" />
      </method>
      <method name="fromJson" signature="fromJson(com.fasterxml.jackson.databind.JsonNode,java.lang.Class)" >
        <return type="java.lang.Object"/>
        <propagate from="0" to="-1"/>
      </method>
      <method name="toJson" signature="toJson(java.lang.Object)" >
        <return type="com.fasterxml.jackson.databind.JsonNode"/>
        <propagate from="0" to="-1"/>
        <sink argpos="0" kind="json_injection" resource="other" />
      </method>
    </class>

    <!-- JSONP -->
    <class name="play.api.libs.Jsonp" supertypes="scala.Serializable" >
      <method name="Jsonp" signature="Jsonp(String, String)" >
        <return type="play.api.libs.Jsonp" />
        <sink argpos="0" kind="some_injection" resource="web" />
        <sink argpos="1" kind="jsonp_hijacking" resource="web" />
      </method>
    </class>
  </module>

  <module name="play.api.db.slick" >
    <description url="https://github.com/playframework/play-slick">Module to integrate Slick into Play</description>

    <class name="play.api.db.slick.DatabaseConfigProvider">
      <method name="get" signature="get()" >
        <tags>typeargs:true,JdbcProfile:slick.basic.JdbcDatabaseConfig,RelationalProfile:slick.basic.RelationalDatabaseConfig,SqlProfile:slick.basic.RelationalDatabaseConfig</tags>
        <return type="slick.basic.DatabaseConfig" />
      </method>
    </class>

    <class name="play.api.db.DatabaseConfig">
      <method name="DatabaseConfig" signature="DatabaseConfig(String, String, String, String, String)" >
        <tags>username:username, password:password</tags>
        <return type="slick.basic.DatabaseConfig" />
        <sink argpos="1,2,3" paramNames="url, username, password" kind="connection_string_injection" resource="database"/>
      </method>
    </class>
  </module>

  <module name="play.twirl.api" >
    <description url="https://www.playframework.com/documentation/2.8.x/api/scala/play/twirl/api/index.html" >Scala-based template engine</description>

    <class name="play.twirl.api.Html">
      <method name="Html" signature="Html()" />
    </class>

    <class name="play.twirl.api.Template">
      <method name="render" signature="render()" >
        <sink argpos="0" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
      </method>
      <method name="index" signature="index()" />
      <method name="apply" signature="apply()" >
        <sink argpos="0" kind="xss" resource="web" >
          <checker id="scala.xssPlaySourceChecker"/>
        </sink>
      </method>
      <method name="*" signature="*()" />
    </class>
  </module>

  <module name="anorm" >
    <description url="https://playframework.github.io/anorm/unidoc/anorm/">Data access layer that uses plain SQL to interact with the database and provides an API to parse and transform the resulting datasets</description>

    <function name="anorm.SQL" signature="anorm.SQL()" >
      <return type="anorm.SqlQuery" />
      <sink argpos="0" kind="sql_injection" resource="database" />
    </function>

    <class name="anorm.BatchSql">
      <constructor name="BatchSql" signature="BatchSql(anorm.SqlQuery, Seq)" >
        <parameters>
          <param type="anorm.SqlQuery" name="sql" />
          <param type="params" name="Seq" />
        </parameters>
        <sink argpos="0" kind="sql_injection" resource="database" />
      </constructor>
      <method name="BatchSql" signature="BatchSql(anorm.SqlQuery)" match="name">
        <parameters>
          <param type="anorm.SqlQuery" name="sql" />
        </parameters>
        <return type="anorm.BatchSql" />
        <sink argpos="0" kind="sql_injection" resource="database" />
      </method>
    </class>

    <class name="anorm.SqlQuery" supertypes="anorm.Sql" >
      <method name="apply" signature="apply()" />
      <method name="as" signature="as()" >
        <source argpos="-1" kind="user_input" resource="web" />
      </method>
      <method name="execute" signature="execute()" >
        <return type="scala.Boolean" />
      </method>
      <method name="execute1" signature="execute1(scala.Boolean)" >
        <return type="tuple" />
      </method>
      <method name="executeInsert" signature="executeInsert()" />
      <method name="executeUpdate" signature="executeUpdate()" >
        <return type="scala.Int" />
      </method>
      <method name="filledStatement" signature="filledStatement()" >
        <return type="java.sql.PreparedStatement" />
      </method>
      <method name="list" signature="list(anorm.Rowparser)" />
      <method name="parse" signature="parse()" />
      <method name="resultSet" signature="resultSet()" >
        <return type="java.sql.ResultSet" />
      </method>
      <method name="single" signature="single(anorm.Rowparser)" />
      <method name="singleOpt" signature="singleOpt(anorm.Rowparser)" >
        <return type="scala.Option" />
      </method>
      <method name="on" signature="on()" >
        <return type="anorm.SqlQuery" />
      </method>
    </class>
  </module>
</library>