<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="http://www.optimyth.com/schema/definitions/library_metadata"
         technology="javascript" name="angular2" standard="Angular2">

  <description url="https://angular.io/api">Angular framework</description>

  <typeAnnotation name="typescript" class="com.optimyth.qaking.ts.TSAnnotation"/>
  <typeAnnotation name="typescript" class="com.optimyth.qaking.ts.frameworks.angular.ts.Angular2Annotation"/>

  <module name="angular2" >
    <class name="angular/common/http/HttpClient">
      <function name="request" >
        <return type="rxjs/Rx/Observable" />
        <source argpos="-1" kind="external_input" resource="network" />
        <sink argpos="0" kind="insecure_transport" resource="web"/>
        <sink argpos="0,1" kind="resource_injection" resource="web"/>
        <sink argpos="0,1" kind="ssrf" resource="network"/>
      </function>
      <function name="delete" >
        <return type="rxjs/Rx/Observable" />
        <source argpos="-1" kind="external_input" resource="network" />
        <sink argpos="0" kind="insecure_transport" resource="web"/>
        <sink argpos="0" kind="resource_injection" resource="web" />
        <sink argpos="0,1" kind="ssrf" resource="network"/>
        <propagate from="0,1" to="-1"/>
      </function>
      <function name="get" >
        <return type="rxjs/Rx/Observable" />
        <source argpos="-1" kind="external_input" resource="network" />
        <sink argpos="0" kind="insecure_transport" resource="web"/>
        <sink argpos="0" kind="resource_injection" resource="web"/>
        <sink argpos="0,1" kind="ssrf" resource="network"/>
      </function>
      <function name="head" >
        <return type="rxjs/Rx/Observable" />
        <source argpos="-1" kind="external_input" resource="network" />
        <sink argpos="0" kind="insecure_transport" resource="web"/>
        <sink argpos="0" kind="resource_injection" resource="web"/>
        <sink argpos="0,1" kind="ssrf" resource="network"/>
      </function>
      <function name="jsonp" >
        <return type="rxjs/Rx/Observable" />
        <source argpos="-1" kind="external_input" resource="network" />
        <sink argpos="0" kind="insecure_transport" resource="web"/>
        <sink argpos="0" kind="resource_injection" resource="web"/>
        <sink argpos="0,1" kind="ssrf" resource="network"/>
      </function>
      <function name="patch" >
        <return type="rxjs/Rx/Observable" />
        <source argpos="-1" kind="external_input" resource="network" />
        <sink argpos="0" kind="insecure_transport" resource="web"/>
        <sink argpos="0" kind="resource_injection" resource="web"/>
        <sink argpos="1" kind="ssrf" resource="network"/>
      </function>
      <function name="post" >
        <return type="rxjs/Rx/Observable" />
        <source argpos="-1" kind="external_input" resource="network" />
        <sink argpos="0" kind="insecure_transport" resource="web"/>
        <sink argpos="0" kind="resource_injection" resource="web"/>
        <sink argpos="0,1" kind="ssrf" resource="network"/>
      </function>
      <function name="put" >
        <return type="rxjs/Rx/Observable" />
        <source argpos="-1" kind="external_input" resource="network" />
        <sink argpos="0" kind="insecure_transport" resource="web"/>
        <sink argpos="0" kind="resource_injection" resource="web"/>
        <sink argpos="0,1" kind="ssrf" resource="network"/>
      </function>
    </class>

    <class name="angular/common/http/HttpRequest">
      <field name="params" type="angular/common/http/HttpParams">
        <source kind="external_input" resource="web"/>
      </field>
      <field name="url" type="string" alias="urlWithParams">
        <source argpos="-1" kind="external_input" resource="network" />
      </field>
      <field name="method" type="string" >
        <source argpos="-1" kind="external_input" resource="network" />
      </field>
      <field name="headers" type="angular/common/http" >
        <source argpos="-1" kind="external_input" resource="network" />
      </field>
    </class>

    <class name="angular/common/http/HttpResponse">
      <field name="type" type="angular/common/http/HttpEventType/Response" >
        <source argpos="-1" kind="external_input" resource="network" />
      </field>
      <field name="url" type="string" >
        <source argpos="-1" kind="external_input" resource="network" />
      </field>
      <field name="statusText" type="string" >
        <source argpos="-1" kind="external_input" resource="network" />
      </field>
      <field name="headers" type="angular/common/http" >
        <source argpos="-1" kind="external_input" resource="network" />
      </field>
    </class>

    <class name="angular/common/http/HttpHandler" >
      <function name="handle" >
        <return type="rxjs/Rx/Observable" elementType="angular/common/http/HttpEvent" />
      </function>
    </class>
    <class name="angular/common/http/HttpBackend" supertypes="angular/common/http/HttpHandler" />
    <class name="angular/common/http/JsonpClientBackend" supertypes="angular/common/http/HttpBackend" />
    <class name="angular/common/http/HttpXhrBackend" supertypes="angular/common/http/HttpBackend" />

    <class name="angular/core/Renderer">
      <function name="setElementProperty" >
        <return type="void" />
      </function>
    </class>

  <function name="angular/core/Component" >
    <sink kind="client_side_template_injection" resource="web">
      <checker id="angular.templateChecker" />
      <arg pos="0" field="template"/>
    </sink>
  </function>

    <class name="angular/router/Router">
      <function name="navigate" >
        <return type="Promise" />
        <sink argpos="0,1" kind="open_redirect" resource="web"/>
      </function>
      <function name="navigateByUrl" >
        <return type="Promise" />
        <sink argpos="0,1" kind="open_redirect" resource="web"/>
      </function>
    </class>

    <class name="angular2/common/http/HttpHeaders" alias="angular/common/http/HttpHeaders">
      <function name="constructor" >
        <tags>header:0</tags>
        <return type="angular2/common/http/HttpHeaders" />
        <sink argpos="1" kind="header_manipulation" resource="network" />
      </function>
      <function name="get" >
        <return type="string" />
        <source argpos="-1" kind="external_input" resource="network" />
      </function>
      <function name="getAll" >
        <return type="array" />
        <source argpos="-1" kind="external_input" resource="network" />
      </function>
      <function name="append" >
        <tags>header.name:0, header.value:1</tags>
        <return type="@self"/>
        <sink argpos="1" kind="header_manipulation" resource="network" />
      </function>
      <function name="set" >
        <tags>header.name:0, header.value:1</tags>
        <return type="@self"/>
        <sink argpos="1" kind="header_manipulation" resource="network" />
      </function>
    </class>

    <!-- Deprecated -->
    <class name="angular2/http/Http" alias="angular/http/Http">
      <function name="request" >
        <return type="rxjs/Rx/Observable" />
        <source argpos="-1" kind="external_input" resource="network" />
        <sink argpos="0" kind="insecure_transport" resource="web"/>
        <sink argpos="0" kind="resource_injection" resource="web"/>
        <sink argpos="0,1" kind="ssrf" resource="network"/>
      </function>
      <function name="delete" >
        <return type="rxjs/Rx/Observable" />
        <source argpos="-1" kind="external_input" resource="network" />
        <sink argpos="0" kind="insecure_transport" resource="web"/>
        <sink argpos="0" kind="resource_injection" resource="web"/>
        <sink argpos="0,1" kind="ssrf" resource="network"/>
      </function>
      <function name="get" >
        <return type="rxjs/Rx/Observable" />
        <source argpos="-1" kind="external_input" resource="network" />
        <sink argpos="0" kind="insecure_transport" resource="web"/>
        <sink argpos="0" kind="resource_injection" resource="web"/>
        <sink argpos="0,1" kind="ssrf" resource="network"/>
      </function>
      <function name="head" >
        <return type="rxjs/Rx/Observable" />
        <source argpos="-1" kind="external_input" resource="network" />
        <sink argpos="0" kind="insecure_transport" resource="web"/>
        <sink argpos="0" kind="resource_injection" resource="web"/>
        <sink argpos="0,1" kind="ssrf" resource="network"/>
      </function>
      <function name="jsonp" >
        <return type="rxjs/Rx/Observable" />
        <source argpos="-1" kind="external_input" resource="network" />
        <sink argpos="0" kind="insecure_transport" resource="web"/>
        <sink argpos="0" kind="resource_injection" resource="web"/>
        <sink argpos="0,1" kind="ssrf" resource="network"/>
      </function>
      <function name="patch" >
        <return type="rxjs/Rx/Observable" />
        <source argpos="-1" kind="external_input" resource="network" />
        <sink argpos="0" kind="insecure_transport" resource="web"/>
        <sink argpos="0" kind="resource_injection" resource="web"/>
        <sink argpos="0,1" kind="ssrf" resource="network"/>
      </function>
      <function name="post" >
        <return type="rxjs/Rx/Observable" />
        <source argpos="-1" kind="external_input" resource="network" />
        <sink argpos="0" kind="insecure_transport" resource="web"/>
        <sink argpos="0" kind="resource_injection" resource="web"/>
        <sink argpos="0,1" kind="ssrf" resource="network"/>
      </function>
      <function name="put" >
        <return type="rxjs/Rx/Observable" />
        <source argpos="-1" kind="external_input" resource="network" />
        <sink argpos="0" kind="insecure_transport" resource="web"/>
        <sink argpos="0"  kind="resource_injection" resource="web"/>
        <sink argpos="0,1" kind="ssrf" resource="network"/>
      </function>
      <function name="request" >
        <return type="rxjs/Rx/Observable" />
        <source argpos="-1" kind="external_input" resource="network" />
        <sink argpos="0" kind="insecure_transport" resource="web"/>
        <sink argpos="0" kind="resource_injection" resource="web"/>
        <sink argpos="0,1" kind="ssrf" resource="network"/>
      </function>
    </class>
    <!-- Deprecated -->
    <class name="angular2/http/Response" alias="angular/http/Response">
      <field name="type" type="@angular/http/ResponseType" >
        <source argpos="-1" kind="external_input" resource="network" />
      </field>
      <field name="url" type="string" >
        <source argpos="-1" kind="external_input" resource="network" />
      </field>
      <field name="statusText" type="string" >
        <source argpos="-1" kind="external_input" resource="network" />
      </field>
      <field name="headers" type="@angular/http/Headers" >
        <source argpos="-1" kind="external_input" resource="network" />
      </field>

      <function name="json" >
        <return type="string" />
        <source argpos="-1" kind="external_input" resource="network" />
      </function>
    </class>
    <!-- Deprecated -->
    <class name="angular2/http/ResponseType"/>
    <!-- Deprecated -->
    <class name="angular2/http/Headers" alias="angular/http/Headers">
      <function name="constructor" >
        <tags>header:0</tags>
        <return type="angular2/http/Headers" />
        <sink argpos="1" kind="header_manipulation" resource="network" />
      </function>
      <function name="fromResponseHeaderString" >
        <return type="angular2/http/Headers" />
        <source argpos="-1" kind="external_input" resource="network" />
      </function>
      <function name="get" >
        <return type="string" />
        <source argpos="-1" kind="external_input" resource="network" />
      </function>
      <function name="values" >
        <return type="array" />
        <source argpos="-1" kind="external_input" resource="network" />
      </function>
      <function name="toJSON" >
        <return type="string" />
        <source argpos="-1" kind="external_input" resource="network" />
      </function>
      <function name="getAll" >
        <return type="array" />
        <source argpos="-1" kind="external_input" resource="network" />
      </function>
      <function name="entries" >
        <return type="angular2/http/Headers" />
        <source argpos="-1" kind="external_input" resource="network" />
      </function>
      <function name="append">
        <tags>header.name:0, header.value:1</tags>
        <sink argpos="1" kind="header_manipulation" resource="network" />
      </function>
      <function name="set" >
        <tags>header.name:0, header.value:1</tags>
        <sink argpos="1" kind="header_manipulation" resource="network" />
      </function>
    </class>

    <!-- XSS Sanitizer -->
    <class name="angular/platform-browser/DomSanitizer" alias="angular2/platform-browser/DomSanitizer">
      <function name="sanitize" >
        <sink argpos="1" kind="xss" resource="network" />
      </function>
      <function name="bypassSecurityTrustHtml" >
        <sink argpos="0" kind="xss" resource="network" />
      </function>
      <function name="bypassSecurityTrustStyle" >
        <sink argpos="0" kind="xss" resource="network" />
      </function>
      <function name="bypassSecurityTrustScript" >
        <sink argpos="0" kind="xss" resource="network" />
      </function>
      <function name="bypassSecurityTrustUrl" >
        <sink argpos="0" kind="xss" resource="network" />
      </function>
      <function name="bypassSecurityTrustResourceUrl" >
        <sink argpos="0" kind="xss" resource="network" />
      </function>
    </class>
  </module>

</library>