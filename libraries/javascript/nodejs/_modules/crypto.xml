<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="http://www.optimyth.com/schema/definitions/library_metadata"
         technology="javascript" name="nodejs/crypto" standard="nodejs">

  <module name="nodejs/crypto" standard="crypto">
    <description url="https://nodejs.org/api/crypto.html">Crypto module, provides cryptographic functionality</description>
    <class name="nodejs/crypto">
      <function name="createCipher">
        <tags>algo:0,key:1,cipher</tags>
        <return type="nodejs/crypto.Cipher"/>
      </function>
      <function name="createDecipher">
        <tags>algo:0,key:1,cipher</tags>
        <return type="nodejs/crypto.Decipher"/>
      </function>
      <function name="createCipheriv">
        <tags>algo:0,key:1,iv:2,cipher</tags>
        <return type="nodejs/crypto.Cipher"/>
      </function>
      <function name="createDecipheriv">
        <tags>algo:0,key:1,iv:2,cipher</tags>
        <return type="nodejs/crypto.Decipher"/>
      </function>
      <function name="createDiffieHellman">
        <tags>key:0,keylen:0,keygen</tags>
        <return type="nodejs/crypto.DiffieHellman"/>
      </function>
      <function name="createECDH">
        <tags>algo:0,keygen</tags>
        <return type="nodejs/crypto.ECDH"/>
      </function>
      <function name="createHash">
        <tags>hash,algo:0</tags>
        <return type="nodejs/crypto.Hash"/>
      </function>
      <function name="createHmac">
        <tags>hmac,algo:0,key:1</tags>
        <return type="nodejs/crypto.Hmac"/>
      </function>
      <function name="createSign">
        <tags>sign,hash,algo:0</tags>
        <return type="nodejs/crypto.Sign"/>
      </function>
      <function name="createVerify">
        <tags>verify,hash,algo:0</tags>
        <return type="nodejs/crypto.Verify"/>
      </function>
      <function name="pbkdf2" alias="pbkdf2Sync">
        <tags>key:0,password:0,salt:1,iterations:2,keylen:3,algo:4,keygen,pass_hash_gen:0,pass_hash_check:0</tags>
        <return type="Buffer"/>
      </function>
      <function name="privateDecrypt">
        <tags>key:0,privkey:0,data:1,decrypt</tags>
        <return type="Buffer"/>
      </function>
      <function name="privateEncrypt">
        <tags>key:0,privkey:0,data:1,encrypt</tags>
        <return type="Buffer"/>
      </function>
      <function name="publicDecrypt">
        <tags>key:0,pubkey:0,data:1,decrypt</tags>
        <return type="Buffer"/>
      </function>
      <function name="publicEncrypt">
        <tags>key:0,pubkey:0,data:1,encrypt</tags>
        <return type="Buffer"/>
      </function>
      <function name="randomBytes" alias="rng,prng">
        <tags>size:0,prng</tags>
        <return type="Buffer"/>
      </function>
      <function name="randomFillSync">
        <tags>data:0,size:3,prng</tags>
      </function>
      <function name="randomFill">
        <tags>data:0,size:3,prng</tags>
      </function>
      <function name="timingSafeEqual">
        <description>safe equal, no timing info leaked</description>
        <return type="Boolean"/>
      </function>

      <function name="Certificate">
        <return type="nodejs/crypto.Certificate"/>
      </function>
    </class>

    <class name="nodejs/crypto.Certificate"/>

    <class name="nodejs/crypto.Cipher">
      <function name="update">
        <tags>encrypt,data:0</tags>
      </function>
      <function name="final">
        <tags>encrypt</tags>
      </function>
      <function name="setAAD">
        <tags>tag:0</tags>
        <return type="nodejs/crypto.Cipher"/>
      </function>
      <function name="getAuthTag">
        <tags>tag:-1</tags>
        <return type="nodejs/Buffer"/>
      </function>
    </class>

    <class name="nodejs/crypto.Decipher">
      <function name="update">
        <tags>decrypt,data:0</tags>
      </function>
      <function name="final">
        <tags>decrypt</tags>
      </function>
      <function name="setAAD">
        <tags>tag:0</tags>
        <return type="nodejs/crypto.Cipher"/>
      </function>
      <function name="setAuthTag">
        <tags>tag:0</tags>
      </function>
    </class>

    <class name="nodejs/crypto.Hash">
      <function name="update">
        <tags>hash,data:0</tags>
        <return type="nodejs/crypto.Hash"/>
      </function>
      <function name="digest">
        <tags>hash</tags>
      </function>
    </class>

    <class name="nodejs/crypto.Hmac">
      <function name="update">
        <tags>hash,data:0</tags>
        <return type="nodejs/crypto.Hash"/>
      </function>
      <function name="digest">
        <tags>hash</tags>
      </function>
    </class>

    <class name="nodejs/crypto.Sign">
      <function name="update">
        <tags>hash,data:0</tags>
        <return type="nodejs/crypto.Sign"/>
      </function>
      <function name="sign">
        <tags>sign,privkey:0</tags>
      </function>
    </class>

    <class name="nodejs/crypto.Verify">
      <function name="update">
        <tags>hash,data:0</tags>
        <return type="nodejs/crypto.Sign"/>
      </function>
      <function name="verify">
        <tags>verify,pubkey:0,signature:1</tags>
      </function>
    </class>
  </module>

</library>