{"_id":"react-datetime","_rev":"100-f1f137921ddba910994b7fd8cad93e32","name":"react-datetime","description":"A lightweight but complete datetime picker React.js component","dist-tags":{"latest":"3.1.1","alpha":"3.0.0-alpha.5","beta":"3.0.0-beta.8"},"versions":{"0.1.0":{"name":"react-datetime","version":"0.1.0","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"https://github.com/arqex/react-datetime"},"main":"./lib/DateTime.jsx","scripts":{"build-npm":"jsx -x jsx ./src/ ./lib/","build":"gulp.cmd","build-min":"$COMPRESS=1 webpack --output-file react-bootstrap-datetimepicker.min.js","examples":"webpack-dev-server --config ./examples/webpack.config.js","test-watch":"grunt watch 2>&1 >/dev/null & karma start karma.dev.js","test":"grunt build && karma start karma.ci.js"},"keywords":["react","react-component","bootstrap","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.12","moment":"^2.8.2"},"devDependencies":{"gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","html-webpack-plugin":"^1.1.0","jsx-loader":"^0.12.2","react":">=0.12","react-tools":"^0.12.2","requirejs":"~2.1.9","webpack":"^1.5.1","webpack-dev-server":"^1.7.0","webpack-stream":"^2.0.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^0.2.4"},"gitHead":"d76f7b08bc6bbc4f8a72327400c1ff0739330459","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@0.1.0","_shasum":"a74d9a5e05c3c5a2e79a42ca5b0ebeac11f1fd91","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"a74d9a5e05c3c5a2e79a42ca5b0ebeac11f1fd91","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-0.1.0.tgz","integrity":"sha512-ykfP5vMTIVeR2sf7zQUee2G40Eis4Batp6qLCIqXQ3//frlaXof1+rqVzfMMdrBQnUv48vcaDKK+ePShhFicqw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIEs13J6zX0JeEoOjPxFwVMWt7/VQor2zC+wu7VHgei4ZAiAXHwU3ED6UR8KE2mt3tyoQtq4DXTPNBxjbc6c7Waomtw=="}]},"directories":{}},"0.3.1":{"name":"react-datetime","version":"0.3.1","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"https://github.com/arqex/react-datetime"},"main":"./lib/DateTime.jsx","scripts":{"build-npm":"jsx -x jsx ./src/ ./lib/","build":"gulp.cmd","build-min":"$COMPRESS=1 webpack --output-file react-bootstrap-datetimepicker.min.js","examples":"webpack-dev-server --config ./examples/webpack.config.js","test-watch":"grunt watch 2>&1 >/dev/null & karma start karma.dev.js","test":"grunt build && karma start karma.ci.js"},"keywords":["react","react-component","bootstrap","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.12","moment":">=2.8.1"},"devDependencies":{"gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","react":">=0.12","react-tools":"^0.12.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^0.2.4"},"gitHead":"182c2b620b74d8853bd9696c881f6e003b7a394c","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@0.3.1","_shasum":"0e680ff6ebd3e2c2dc4dd2654d008bddb6631614","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"0e680ff6ebd3e2c2dc4dd2654d008bddb6631614","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-0.3.1.tgz","integrity":"sha512-zBEOG/lUVTxANCgPfhuIpEatwsYMXWqsnr+laJD4xBUwzxCul9M3eIIaBrWPBj6w0b1i+TIgb+HJZPHNZGDvAQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCl9bEogDjm31OuxWMAYlXBwueGn0ePPk6a9Eb7pyrf8QIgUkLArtcbnWGWuD3J4bsDvyj3apdQpK2u4fSrduZOth4="}]},"directories":{}},"0.4.0":{"name":"react-datetime","version":"0.4.0","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"https://github.com/arqex/react-datetime"},"main":"./lib/DateTime.jsx","scripts":{"build-npm":"jsx -x jsx ./src/ ./lib/","build":"gulp.cmd","build-min":"$COMPRESS=1 webpack --output-file react-bootstrap-datetimepicker.min.js","examples":"webpack-dev-server --config ./examples/webpack.config.js","test-watch":"grunt watch 2>&1 >/dev/null & karma start karma.dev.js","test":"grunt build && karma start karma.ci.js"},"keywords":["react","react-component","bootstrap","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.12","moment":">=2.8.1"},"devDependencies":{"gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","react":">=0.12","react-tools":"^0.12.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^0.2.4"},"gitHead":"eba92bd9c24111756afb06f05b8478130a3beef0","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@0.4.0","_shasum":"a65449037e300eaa9ec6ab8b22a5424b4b6be252","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"a65449037e300eaa9ec6ab8b22a5424b4b6be252","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-0.4.0.tgz","integrity":"sha512-h/OhYt3QCjG1kPbcRkLHo0iBC1Obp31Qaa+UDjkBFZU7tornB1IR2UV28AWezNmicKzCCC/TiSySRsnDzAFyKw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDodTbRkO7EdAoCDlDlQOUOLc6AXMTEKkjHneupeZjSQwIhAPHpg1lbaX8YQmWmQ2QAmFIz7UkI3NmggAzX8o/LLUN0"}]},"directories":{}},"0.4.1":{"name":"react-datetime","version":"0.4.1","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"https://github.com/arqex/react-datetime"},"main":"./lib/DateTime.jsx","scripts":{"build-npm":"jsx -x jsx ./src/ ./lib/","build":"gulp.cmd","build-min":"$COMPRESS=1 webpack --output-file react-bootstrap-datetimepicker.min.js","examples":"webpack-dev-server --config ./examples/webpack.config.js","test-watch":"grunt watch 2>&1 >/dev/null & karma start karma.dev.js","test":"grunt build && karma start karma.ci.js"},"keywords":["react","react-component","bootstrap","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.12","moment":">=2.8.1"},"devDependencies":{"gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","react":">=0.12","react-tools":"^0.12.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^0.2.4"},"gitHead":"399449fd10642d7d2e09c854ee26bc650408d1bb","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@0.4.1","_shasum":"5675583380bae81bd003cec71b179f4152ec370e","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"5675583380bae81bd003cec71b179f4152ec370e","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-0.4.1.tgz","integrity":"sha512-L7zJQzudKgaqxefAz0/2+9i27qEXBMKHwWX8keVOfyotbDNZGx4QneRI88WLC+8L+zS813VjJT6TG5pLbBBM0g==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCsv4nJD77RaT4OSilIqmBtY4g1aFZp9l2CgBZzxVyXiQIgdB8F276RpfY2eUbwsaYCDdnnwCYP3yZsYmtIXSwEUH4="}]},"directories":{}},"0.4.2":{"name":"react-datetime","version":"0.4.2","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"https://github.com/arqex/react-datetime"},"main":"./lib/DateTime.jsx","scripts":{"build-npm":"jsx -x jsx ./src/ ./lib/","build":"gulp.cmd","build-min":"$COMPRESS=1 webpack --output-file react-bootstrap-datetimepicker.min.js","examples":"webpack-dev-server --config ./examples/webpack.config.js","test-watch":"grunt watch 2>&1 >/dev/null & karma start karma.dev.js","test":"grunt build && karma start karma.ci.js"},"keywords":["react","react-component","bootstrap","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.12","moment":">=2.8.1"},"devDependencies":{"gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","react":">=0.12","react-tools":"^0.12.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^0.2.4"},"gitHead":"fb73675ee16136ff32b1676ef042f56d9f930e9e","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@0.4.2","_shasum":"d0b15d8e869c335d1590345be18a4da9f118155e","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"d0b15d8e869c335d1590345be18a4da9f118155e","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-0.4.2.tgz","integrity":"sha512-8IVSwVAXzij2AfIQIy69HP3ZU3GJHeN+Owg1kcNpTwC7qTSO3qM3EmdohEXGNy62Nm5kUu+ZRWc1lzJWuaGXAA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIA2qTTLQAibsln3W+ccjT4bufUzR5M36OZBtzYSiPqUMAiEA9jpdEE3wQiie6n4BZkylRaMXm6OYzAl/BCRg47F9rKo="}]},"directories":{}},"0.4.3":{"name":"react-datetime","version":"0.4.3","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"https://github.com/arqex/react-datetime"},"main":"./DateTime.js","scripts":{"build-npm":"jsx -x jsx ./src/ ./lib/","build":"gulp.cmd","build-min":"$COMPRESS=1 webpack --output-file react-bootstrap-datetimepicker.min.js","examples":"webpack-dev-server --config ./examples/webpack.config.js","test-watch":"grunt watch 2>&1 >/dev/null & karma start karma.dev.js","test":"grunt build && karma start karma.ci.js"},"keywords":["react","react-component","bootstrap","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.12","moment":">=2.8.1"},"devDependencies":{"gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","react":">=0.12","react-tools":"^0.12.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^0.2.4"},"gitHead":"691c01adea4952f7fa2c74d36712c07cf671980b","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@0.4.3","_shasum":"e0bf8638741e94762a7159597ffa0f1ee8bb51e5","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"e0bf8638741e94762a7159597ffa0f1ee8bb51e5","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-0.4.3.tgz","integrity":"sha512-Fx862NpgEuNLNi4WnWzlrICj+u5HrzEgOQNdJTsNh7JIFQ6Zh9kYLRpsRJ2Q0m+hLOPIGDnvZTIbqwA1kHYGMA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIA10GzoHHIR3HE7pmoiaphxq2EZu++J5qFeQ2oIzA3S7AiB6LcrNN5bLy1psPhS2E98i73SuujngAmfYcgqlV8TClg=="}]},"directories":{}},"0.5.0":{"name":"react-datetime","version":"0.5.0","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"https://github.com/arqex/react-datetime"},"main":"./DateTime.js","scripts":{"build":"gulp.cmd"},"keywords":["react","react-component","bootstrap","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.12","moment":">=2.8.1"},"devDependencies":{"gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","react":">=0.12","react-tools":"^0.12.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"classlist-polyfill":"^1.0.1","object-assign":"^3.0.0","react-onclickoutside":"^0.2.4"},"gitHead":"907c50f27c255dc5db209bbb88fc63ca6a4db2fe","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@0.5.0","_shasum":"62e83cb3685a1afeb119c395674a5d8e94e67fcc","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"62e83cb3685a1afeb119c395674a5d8e94e67fcc","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-0.5.0.tgz","integrity":"sha512-dxBdpxGjCTb8zNHRqYVTMLXKDOvm9KqI5QDEWQp40aMrlsAze4YHPDj4AidytsMUeGf7iM1gcDgbkDLPyfu+bQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIBToadRVynkq1NhG0FtYrlzVJ70r++KLVuLSP/UsE/pNAiEA0p3Tfsi8XljTvLLmCh/982HJC6X947Fk5Yo6x88d6fA="}]},"directories":{}},"1.0.0-rc.1":{"name":"react-datetime","version":"1.0.0-rc.1","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"https://github.com/arqex/react-datetime"},"main":"./DateTime.js","scripts":{"build":"gulp.cmd"},"keywords":["react","react-component","bootstrap","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.12","moment":">=2.8.1"},"devDependencies":{"gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","react":">=0.12","react-tools":"^0.12.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"classlist-polyfill":"^1.0.1","object-assign":"^3.0.0","react-onclickoutside":"^0.2.4"},"gitHead":"8abb28c2b289d7d86d85b4bd24f475775a57a99d","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@1.0.0-rc.1","_shasum":"aebade21619ac144b8de8a7dac3c170a2700fce0","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"aebade21619ac144b8de8a7dac3c170a2700fce0","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-1.0.0-rc.1.tgz","integrity":"sha512-HSc8q38ZawJT6M463lk8gPXDiGCs3gE2Cc3EN6sF/060UpGxc4nAT9BinEX+YysWWOkpBuWPns+B/DhtJWm6Ow==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGl/t+H3NQ7Xeu6TWsZoPDgv8Gpkk5MQPHaF4llnZK6QAiEAnuaQKwPnomrlUJEKBK1efzFfrygZ67B2TJ/FYw59gnI="}]},"directories":{}},"1.0.0":{"name":"react-datetime","version":"1.0.0","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"https://github.com/arqex/react-datetime"},"main":"./DateTime.js","scripts":{"build":"gulp.cmd","test":"node node_modules/mocha/bin/mocha tests"},"keywords":["react","react-component","bootstrap","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.12","moment":">=2.8.1"},"devDependencies":{"gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^3.1.2","mocha":"^2.2.5","react":">=0.12","react-tools":"^0.12.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"classlist-polyfill":"^1.0.1","object-assign":"^3.0.0","react-onclickoutside":"^0.2.4"},"gitHead":"7d10673125ed2d92144f8f65bb0a3691e4c93fd9","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@1.0.0","_shasum":"41e477d3e074e47e7ddf8c13be6c26266b939129","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"41e477d3e074e47e7ddf8c13be6c26266b939129","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-1.0.0.tgz","integrity":"sha512-YuTgfm90hJsBSm6Lp+EgchD7E17+QfhwGs2X7tu1gOzoVigEpqyyTiV4ZDrD7qsLjnD4YAxXXziEAESjdsa9zg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDoOkB56nTTXCk7cwksKYTKFDJTPowHP4Y1SC/Ckszg7AiEAj1+JNBr8ScmpS6DA4XCoU0sXSF//gMAB9K0+EYulirc="}]},"directories":{}},"1.1.0":{"name":"react-datetime","version":"1.1.0","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"https://github.com/arqex/react-datetime"},"main":"./DateTime.js","scripts":{"build":"gulp.cmd","test":"node node_modules/mocha/bin/mocha tests"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.12","moment":">=2.8.1"},"devDependencies":{"gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^3.1.2","mocha":"^2.2.5","react":">=0.12","react-tools":"^0.12.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"classlist-polyfill":"^1.0.1","object-assign":"^3.0.0","react-onclickoutside":"^0.2.4"},"gitHead":"62fd2f65bd45d143116bceba919c25e9c713f503","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@1.1.0","_shasum":"994728fcc5f23f455a66469e60724ba32b69d31d","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"994728fcc5f23f455a66469e60724ba32b69d31d","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-1.1.0.tgz","integrity":"sha512-KQ3I2FqAGkESdqIufx1PSPA6EukYVESzpDEgH6KOp8Qk/KCyPvAC+m1NH/VH/xG9To7gdCu5CHO7ZyfbNMMxTw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIBnDZk+B6mfC/dERynQcxIXqBka9uXGh2ElgLTmBYo1ZAiEAzs7W+y3F4rWH5o6mmNOzaysUzV6zYeYCxpjEjsJPc4U="}]},"directories":{}},"1.1.1":{"name":"react-datetime","version":"1.1.1","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"https://github.com/arqex/react-datetime"},"main":"./DateTime.js","scripts":{"build":"gulp.cmd","test":"node node_modules/mocha/bin/mocha tests"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.12","moment":">=2.8.1"},"devDependencies":{"gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^3.1.2","mocha":"^2.2.5","react":">=0.12","react-tools":"^0.12.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"classlist-polyfill":"^1.0.1","object-assign":"^3.0.0","react-onclickoutside":"^0.3.1"},"gitHead":"862422ca0039c67aa4d5ce4978b241ae9fcf2dd2","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@1.1.1","_shasum":"461c8e5dbdeeeeb0e88a43b7428877a29e0cb768","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"461c8e5dbdeeeeb0e88a43b7428877a29e0cb768","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-1.1.1.tgz","integrity":"sha512-Br9BKmC36x3oV1a9phQKMPFke5JmLfX/4hWfh1K4jpLuvFsqXBklHcRf/Df0e9CDtxJfpsypl/VqOq9ASAGleg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDGRvzoOoAUtS0WJQmq1d53iBHqjh8x1YDCbxRaNtYIYQIhAOGi9ZdgDWWmNPHNnHxY2QdoTD9eBGjSAx6c9x4sBfK1"}]},"directories":{}},"1.2.0":{"name":"react-datetime","version":"1.2.0","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"https://github.com/arqex/react-datetime"},"main":"./DateTime.js","scripts":{"build":"gulp.cmd","test":"node node_modules/mocha/bin/mocha tests"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.12","moment":">=2.8.1"},"devDependencies":{"gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^3.1.2","mocha":"^2.2.5","react":">=0.12","react-tools":"^0.12.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"classlist-polyfill":"^1.0.1","react-onclickoutside":"^0.3.1"},"gitHead":"69a58c9f987547fbcfed7b294d285d8a17676f45","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@1.2.0","_shasum":"5902ec89ef7dfcf546d8e0e57dc045779386643f","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"5902ec89ef7dfcf546d8e0e57dc045779386643f","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-1.2.0.tgz","integrity":"sha512-xnvVoOQQWECkO7fnkghtiVyhD1ybE6IGPMUG3TVZ6NuJ9SY0mW/b9H/6Yg/xTN/t+dFsdbBmsQPGp5aoqhq+xA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHJCAMfV/Vl92KJhAYJm4RWBOLrUatgVtTqCGMCdfVjcAiAnRGmugZJTQS1gQrjtQ1OiGvBuH8Oz7zL2tDMG1cWPSg=="}]},"directories":{}},"1.2.1":{"name":"react-datetime","version":"1.2.1","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"https://github.com/arqex/react-datetime"},"main":"./DateTime.js","scripts":{"build":"gulp.cmd","test":"node node_modules/mocha/bin/mocha tests"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.12","moment":">=2.8.1"},"devDependencies":{"gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^3.1.2","mocha":"^2.2.5","react":">=0.12","react-tools":"^0.12.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^0.3.1"},"gitHead":"1f5ec14c3c4d092d45b50cb9623e28292c950003","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@1.2.1","_shasum":"28a7ca9313f81b3cb3a4b9bc1082a45404556bb9","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"28a7ca9313f81b3cb3a4b9bc1082a45404556bb9","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-1.2.1.tgz","integrity":"sha512-Zzz1yO3xb3rwgUWz93lgdth/KHLzTQWQP/4YTcDLK8kX2bGq9Npig78CHBVVsTdvO1lCYsGhSiWKuNUaUjqaQQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIBV3l0XJjUzfWhNitXMiTe1xjfWDglwRW6LWwzl+WzM9AiBwl7gOUzhAKK/0O8qJSkKeZrhYoBuKex5zCKJ60qs4ww=="}]},"directories":{}},"1.3.0":{"name":"react-datetime","version":"1.3.0","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","scripts":{"build":"gulp.cmd","test":"node node_modules/mocha/bin/mocha tests"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.12","moment":">=2.8.1"},"devDependencies":{"gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^3.1.2","mocha":"^2.2.5","react":">=0.12","react-tools":"^0.12.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^0.3.4"},"gitHead":"2729030c55b1afa656e56ecf8bcd6c0520b7bd10","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@1.3.0","_shasum":"207d6201f0d2fce512548ef0f2de1c5584a0a118","_from":".","_npmVersion":"2.14.3","_nodeVersion":"4.1.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"207d6201f0d2fce512548ef0f2de1c5584a0a118","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-1.3.0.tgz","integrity":"sha512-RuqtqjT+ZlxduDJAj4Tv6xiOHmPiOd82ILbRHsnYK/qmNH4+nJQ07AAoafhTMCpcKhKNHJhghcLtQ0RBsDiW1w==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAWmE9o/Wcj5xzuMGw/p0ArcJl5FbENf0Qp86tDvjfLbAiABrffEIw0VdIJ3x/IUo1lGmWTeMQqCWBP0SsmTu8vwbg=="}]},"directories":{}},"2.0.0":{"name":"react-datetime","version":"2.0.0","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","scripts":{"build":"gulp.cmd","test":"node node_modules/mocha/bin/mocha tests"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.13","react-dom":">=0.13","moment":">=2.8.1"},"devDependencies":{"gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^7.0.2","mocha":"^2.2.5","react":">=0.13","react-tools":"^0.13.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"gitHead":"2d82530f1bb66e36dc34cce4f1079f1c70dcece1","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.0.0","_shasum":"1b0463bfce9f343695243c27ec386134c2703bed","_from":".","_npmVersion":"2.14.3","_nodeVersion":"4.1.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"1b0463bfce9f343695243c27ec386134c2703bed","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.0.0.tgz","integrity":"sha512-dJaLGvvTK1myWj7LGK63GA6IghXZQECxP+zgrtsKu/gi+NFbbg0remP/A9JZC8cWBRG+0JysAaLFmfHUdA2dow==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCCzXYkTlpJBF3F+Hu5QU6IGKfXfE3rUAoNts1ijDIrqgIhAKJjffmMtxZTF7iLO8CWJDL9VIdz7kT0Qr/iazCyPS2p"}]},"directories":{}},"2.0.1":{"name":"react-datetime","version":"2.0.1","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","scripts":{"build":"gulp.cmd","test":"node node_modules/mocha/bin/mocha tests"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.13","react-dom":">=0.13","moment":">=2.8.1"},"devDependencies":{"gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^7.0.2","mocha":"^2.2.5","react":">=0.13","react-tools":"^0.13.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"gitHead":"315c0bb49b3934fc48403d49934ee2f126094bd5","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.0.1","_shasum":"c98a1582f48faad7f4bc6e43f5126906f507cd8a","_from":".","_npmVersion":"2.14.3","_nodeVersion":"4.1.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"c98a1582f48faad7f4bc6e43f5126906f507cd8a","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.0.1.tgz","integrity":"sha512-Kgf1PAmyn1c6cOZibFZQh42fnp4vCCszx1L91uuccCVKQtrCsCvoGrGwJ6gJ5jxNMQwopPu8VGGORM/FRNtBkg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCyNTzlcJjj9sZqBj+t+ptseDKGVocW95/l487k47fvvgIhANx51ocYOG8v82+BwTZyTwCtO4CHRU0W8oNQKQaHgKT+"}]},"directories":{}},"2.0.2":{"name":"react-datetime","version":"2.0.2","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","scripts":{"build":"gulp.cmd","test":"node node_modules/mocha/bin/mocha tests"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.13","react-dom":">=0.13","moment":">=2.8.1"},"devDependencies":{"gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^7.0.2","mocha":"^2.2.5","react":">=0.13","react-tools":"^0.13.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"gitHead":"795f65de88ddafb37e2763d5ba1a906f710ef5fe","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.0.2","_shasum":"bd77648ffdcd947e8f75aa56c74fc811389958a2","_from":".","_npmVersion":"2.14.3","_nodeVersion":"4.1.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"bd77648ffdcd947e8f75aa56c74fc811389958a2","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.0.2.tgz","integrity":"sha512-X6/VO15jVYq5+s5EkkoEoM9wqqzGj+7CJ7h5+9SpWhCJEXjfQS2ElKD7J3NAj61ImyQYYFqZ9I2a/YDgUwXfYQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHV2ctK6vXJFjKgiY2dpKih1ZO+Bir9vcuPN38mOmdyRAiEA5Y6szrDTGuOk1Pbgvk0LZSy+OYuWMtF+pOuc4piQVK8="}]},"directories":{}},"2.0.3":{"name":"react-datetime","version":"2.0.3","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","scripts":{"build":"gulp.cmd","test":"node node_modules/mocha/bin/mocha tests"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.13","react-dom":">=0.13","moment":">=2.8.1"},"devDependencies":{"gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^7.0.2","mocha":"^2.2.5","react":">=0.13","react-tools":"^0.13.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"gitHead":"8d6a3229c21d766e708fd67382de838041a67a25","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.0.3","_shasum":"446373754c37bb55f434fdac2c8e81b07577b6c8","_from":".","_npmVersion":"2.14.3","_nodeVersion":"4.1.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"446373754c37bb55f434fdac2c8e81b07577b6c8","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.0.3.tgz","integrity":"sha512-idfBXCfX7IrOrc0IK85AaqBFcjPSIS9tYHDxVtVQc/z+2vvsMNzrGMPuNPeWu1QU5w2p6TSX22uHX6/LWjUYiQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAUSy9GbwVQ/+lhJQDE0TU0g/HYRiI9JVuCWx1Rm+r2eAiAQP/LmwSij7df7C7AnE/JE8qzIZQhYhlqoyt2Y1nbeOA=="}]},"directories":{}},"2.1.0":{"name":"react-datetime","version":"2.1.0","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","scripts":{"build":"gulp.cmd","test":"node node_modules/mocha/bin/mocha tests","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.13","react-dom":">=0.13","moment":">=2.8.1"},"devDependencies":{"gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^7.0.2","mocha":"^2.2.5","react":">=0.13","react-tools":"^0.13.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"gitHead":"b9158de5946478788f175a0e5340488a3add05b7","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.1.0","_shasum":"0f011d644a1f9b79f49567a314c4b28a86f47541","_from":".","_npmVersion":"2.14.3","_nodeVersion":"4.1.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"0f011d644a1f9b79f49567a314c4b28a86f47541","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.1.0.tgz","integrity":"sha512-kpCOM218HwxnxQJcHlc1rYQ6+t1Ybh4WviClZ1D+gm3flJKLAhXh3FEeUV7yWDJPT9cLj+pZJ7Affw8kzH8UPQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDl7Cm8lPFpnNS9pnPsH80pbH8FjnMsPnRoBOmP6m6eQAIhAJ2cv1yVJKKxMZhvub3H51DKZVDPeN0ZhXTQkcH2Maly"}]},"_npmOperationalInternal":{"host":"packages-9-west.internal.npmjs.com","tmp":"tmp/react-datetime-2.1.0.tgz_1456759644970_0.8478961316868663"},"directories":{}},"2.2.0":{"name":"react-datetime","version":"2.2.0","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","scripts":{"build":"gulp.cmd","test":"node node_modules/mocha/bin/mocha tests","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.13","react-dom":">=0.13","moment":">=2.8.1"},"devDependencies":{"gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^7.0.2","mocha":"^2.2.5","react":">=0.13","react-addons-test-utils":">=0.13","react-tools":"^0.13.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"gitHead":"267a3af8db75c1921509bd8f06ceb630ddf2c223","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.2.0","_shasum":"215fdb4c87996e104233a519cb8eb54780ab9c41","_from":".","_npmVersion":"3.8.6","_nodeVersion":"4.1.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"215fdb4c87996e104233a519cb8eb54780ab9c41","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.2.0.tgz","integrity":"sha512-49Cu3Kpbd72LM3Ev+Thqbrp0ddYUZl06szdIMCOojSc8Ipzc6f3lzMWqlcTkeLrbVjrnoTTP8f0ygpxogRYiAA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGFCRd5c64S1enjWlGnML1C2JJ9xieARbNpDxRjy17Y9AiEAhKKJCSo6kPm6tcqvkU7cJL0lSHvbXK2lcG31oNQ8izA="}]},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/react-datetime-2.2.0.tgz_1464002198611_0.5800520700868219"},"directories":{}},"2.2.1":{"name":"react-datetime","version":"2.2.1","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","scripts":{"build":"gulp.cmd","test":"node node_modules/mocha/bin/mocha tests","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.13","react-dom":">=0.13","moment":">=2.8.1"},"devDependencies":{"gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^7.0.2","mocha":"^2.2.5","react":">=0.13","react-addons-test-utils":">=0.13","react-tools":"^0.13.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"gitHead":"50a0c279ca8937a2bfcde97aeb90972bd102ffa6","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.2.1","_shasum":"c488b995e243ce728796df2fe0bfd8a98efc826d","_from":".","_npmVersion":"3.8.6","_nodeVersion":"4.1.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"c488b995e243ce728796df2fe0bfd8a98efc826d","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.2.1.tgz","integrity":"sha512-gxXHjj45VX92wqPFJ7SDRGCIOhIfBHEqeNcEjlFbX7Z3JeKgfdNvSMV23kz0MrAXhE7GebU3Vr8hqZ88/QtFZQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICl61fAUWe/VOOm9YLw4sxv5GeojXuyQkbeATlyVx3HdAiBCadI/0JNE75J4Bj7vuR9QDOd0GAT9K0tCE/F8TravjQ=="}]},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/react-datetime-2.2.1.tgz_1464092333092_0.8021568937692791"},"directories":{}},"2.3.0":{"name":"react-datetime","version":"2.3.0","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","scripts":{"build":"gulp.cmd","test":"node node_modules/mocha/bin/mocha tests","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.13","react-dom":">=0.13","moment":">=2.8.1"},"devDependencies":{"gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^7.0.2","mocha":"^2.2.5","react":">=0.13","react-addons-test-utils":">=0.13","react-tools":"^0.13.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"gitHead":"0390c2ec51eac978feb2b81f3c8947ad113652e8","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.3.0","_shasum":"28df25bc761369062111733070e70cbd06ec5033","_from":".","_npmVersion":"3.8.6","_nodeVersion":"4.1.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"28df25bc761369062111733070e70cbd06ec5033","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.3.0.tgz","integrity":"sha512-wUUhOQPl8q6RN64oVO9myQDzg0VZ9+DK54324vSiEeYZmh577ecyQ7GoidaI7xjpDFMdV92sbLqzAiwMi9xSlQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDspzDho6h5zyMxR440RDcNSoYZ/qdmkYKDYsOGBkWpWgIhALQJefJJkX/nqgbdDVftXOuWkqQDbtzlIaeU0d+MgcE8"}]},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/react-datetime-2.3.0.tgz_1465812956052_0.9266041065566242"},"directories":{}},"2.3.1":{"name":"react-datetime","version":"2.3.1","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","scripts":{"build":"gulp.cmd","test":"node node_modules/mocha/bin/mocha tests","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.13","react-dom":">=0.13","moment":">=2.8.1"},"devDependencies":{"gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^7.0.2","mocha":"^2.2.5","react":">=0.13","react-addons-test-utils":">=0.13","react-tools":"^0.13.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"gitHead":"a8a17a20c11814632c3381ca54003434795ffd57","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.3.1","_shasum":"c60b14bbccf7f4320349a70b9c4bc4248a11cb45","_from":".","_npmVersion":"3.8.6","_nodeVersion":"4.1.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"c60b14bbccf7f4320349a70b9c4bc4248a11cb45","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.3.1.tgz","integrity":"sha512-PXZl2pVAmRL/xd3wWeGjUlyuqoZoDp+TltxWZJeiHmf0qhl3t2UYDJdFmGTIZEUTgN7f4oz5nso55lVu+OPjyg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDZEnmxaXOE79eDRso9QyzvKreg4JXeUeIRMGOGNp5aygIhAICGL1DpIzaUlMlGGFcRoBmDoNU156Putg/v0LVgiYQ9"}]},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/react-datetime-2.3.1.tgz_1465814047425_0.6691768430173397"},"directories":{}},"2.3.2":{"name":"react-datetime","version":"2.3.2","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","scripts":{"build":"gulp.cmd","test":"node node_modules/mocha/bin/mocha tests","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.13","react-dom":">=0.13","moment":">=2.8.1"},"devDependencies":{"gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^7.0.2","mocha":"^2.2.5","react":">=0.13","react-addons-test-utils":">=0.13","react-tools":"^0.13.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"gitHead":"ff0adb6c576d33457b57aea9b2e4e7df103b8443","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.3.2","_shasum":"2faf0e73be232895e294d61c77610f5e3da2f63a","_from":".","_npmVersion":"3.8.6","_nodeVersion":"4.1.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"2faf0e73be232895e294d61c77610f5e3da2f63a","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.3.2.tgz","integrity":"sha512-1Oh+S6lXD7MefM4mp8BfGygzZxBN72qVU/kh6/Cj2BUuh4toZKgObKYW/kQOYOSZKnHkwZ6QlLVdcRbcE8cNRg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAMPz2IEddhaaUdBch0iz7xRFHRazHN6gGKK8vJuKk8uAiB/fu9WC8MtVwhL4C34P5wcLXmHqt5zG7KLem8bFo/n6g=="}]},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/react-datetime-2.3.2.tgz_1466173661156_0.922214891994372"},"directories":{}},"2.3.3":{"name":"react-datetime","version":"2.3.3","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","scripts":{"build:win":"gulp.cmd","build:mac":"gulp","test":"node node_modules/mocha/bin/mocha tests","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.13","react-dom":">=0.13","moment":">=2.8.1"},"devDependencies":{"gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^7.0.2","mocha":"^2.2.5","react":">=0.13","react-addons-test-utils":">=0.13","react-tools":"^0.13.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"gitHead":"64ce8b21344550cb8136346765594e64ee823abd","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.3.3","_shasum":"e17819708e40a19fcf8922f367b89171fc81e5ed","_from":".","_npmVersion":"3.8.6","_nodeVersion":"4.1.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"e17819708e40a19fcf8922f367b89171fc81e5ed","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.3.3.tgz","integrity":"sha512-VwdlU/9aCnrqXok9qd4XMqq7Y6jyKd5wqlFNoXo96k5NCGf4tDZZJgeoBoAkJRRjMXvoLCWh6Xi+D69rrfc7vw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIG1QOdX2TnJ8KGRzsT6CNHug4qx5FaDmpukhbcrx8KHYAiB4vq9bTBA84EeCxnHGP6xGbWj81bSz7r8in1bmrXl67w=="}]},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/react-datetime-2.3.3.tgz_1468504029259_0.08081254875287414"},"directories":{}},"2.4.0":{"name":"react-datetime","version":"2.4.0","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","scripts":{"build:win":"gulp.cmd","build:mac":"gulp","test":"node node_modules/mocha/bin/mocha tests","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.13","react-dom":">=0.13","moment":">=2.8.1"},"devDependencies":{"eslint":"^3.1.0","gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^7.0.2","mocha":"^2.2.5","react":">=0.13","react-addons-test-utils":">=0.13","react-tools":"^0.13.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"gitHead":"52191d9d33b729ae478eaf4c68e3d6f54a0e8606","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.4.0","_shasum":"c370ba515e4a8fd0fa937ff1a013db6923717c3c","_from":".","_npmVersion":"3.8.6","_nodeVersion":"4.1.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"c370ba515e4a8fd0fa937ff1a013db6923717c3c","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.4.0.tgz","integrity":"sha512-lcj8K+lMf7lUZpNMqqL8jmDsUf2FiSojW64WS83wPuwpYizyt/TpzkSOv5cTJSIiahNwdiwzaAiqxzBTny2ZBw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCpyBtDBcYDcEY0dOwN+eb91j62KOMVIDBu6DTTTdNmpgIhAMovNk1YrasssOPPl57uojwuJiHbb9ouxh02xlDkFhji"}]},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/react-datetime-2.4.0.tgz_1468927057150_0.27273980784229934"},"directories":{}},"2.5.0":{"name":"react-datetime","version":"2.5.0","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","scripts":{"build:win":"gulp.cmd","build:mac":"gulp","test":"node node_modules/mocha/bin/mocha tests","test:watch":"node node_modules/mocha/bin/mocha --watch tests","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.13","react-dom":">=0.13","moment":">=2.8.1"},"devDependencies":{"eslint":"^3.1.0","gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^7.0.2","mocha":"^2.2.5","moment":"2.14.1","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":"15.2.1","react-tools":"^0.13.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"gitHead":"cc4a9653d8c53d92dc7d2ad2410de12651f27b19","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.5.0","_shasum":"7c0e5fbb02f37edec6da4da3fc8d86530647af07","_from":".","_npmVersion":"3.8.6","_nodeVersion":"4.1.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"7c0e5fbb02f37edec6da4da3fc8d86530647af07","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.5.0.tgz","integrity":"sha512-Wpe2DhBy109DGsdiH3bNwguKQx+yvKH3TQcKSCAyjLTfoiwVzKWOnfpZ0jCQ1AzXjZiRTUDIlmf1pwewcteRLg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC9h/1w2I3OzlVlOx1GgtSYZV7qk0sYc7cb3ccV2wbn7gIhAOECJJI8QaMkaGt75ZqVma+j0pibcw0y0QpaLrgHn7ZK"}]},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/react-datetime-2.5.0.tgz_1469790674873_0.1353716542944312"},"directories":{}},"2.6.0":{"name":"react-datetime","version":"2.6.0","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","scripts":{"build:win":"gulp.cmd","build:mac":"gulp","test":"node node_modules/mocha/bin/mocha tests","test:watch":"node node_modules/mocha/bin/mocha --watch tests","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.13","react-dom":">=0.13","moment":">=2.8.1"},"devDependencies":{"eslint":"^3.1.0","gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^7.0.2","mocha":"^2.2.5","moment":"2.14.1","pre-commit":"^1.1.3","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":"15.2.1","react-tools":"^0.13.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"pre-commit":["lint","test"],"gitHead":"f3584307689423e3bc810efee9d68e9a2aea9980","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.6.0","_shasum":"3fbfb7465377560237874168c98ad5bdac728160","_from":".","_npmVersion":"3.8.6","_nodeVersion":"4.1.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"3fbfb7465377560237874168c98ad5bdac728160","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.6.0.tgz","integrity":"sha512-S8S0gEaGDhpxUAPen9/Ct9kvpyxs9EEFKCcFuQvRTcuF0qmUMD5C0VXYiNcuBWuJBTG/Kxpkr2pYQv9KMqby9w==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFRp0DvOsGfxB8SLETGNS/bSb0MEI50OQDJv348V5XTZAiBh9MCSwtXcnqzAbCwcgKGTYC93q6VSA2RCL0EYrdL47A=="}]},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/react-datetime-2.6.0.tgz_1473154331781_0.7678613367024809"},"directories":{}},"2.6.1":{"name":"react-datetime","version":"2.6.1","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","files":["./DateTime.js","./react-datetime.d.ts","./src","./css","./dist"],"types":"./react-datetime.d.ts","scripts":{"build:win":"gulp.cmd","build:mac":"gulp","test":"node node_modules/mocha/bin/mocha tests","test:watch":"node node_modules/mocha/bin/mocha --watch tests","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.13","react-dom":">=0.13","moment":">=2.8.1"},"devDependencies":{"eslint":"^3.1.0","gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","gulp-sourcemaps":"^1.6.0","jsdom":"^7.0.2","mocha":"^2.2.5","moment":"2.14.1","pre-commit":"^1.1.3","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":"15.2.1","react-tools":"^0.13.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"pre-commit":["lint","test"],"gitHead":"f0027399101a46b3426f65a2f57c6006d7699a70","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.6.1","_shasum":"c4b8d89875cf25720c5a9120cd622c44c04ac15b","_from":".","_npmVersion":"2.15.10","_nodeVersion":"6.6.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"c4b8d89875cf25720c5a9120cd622c44c04ac15b","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.6.1.tgz","integrity":"sha512-BbQX74ppnWEFtJWMl6j7z7xmWbkpnO0uQp4WCncsPghLrR+Hz6Gb1qsacaxRegF5nPh9MIraa+9xVSU0leGWbA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDwg9nIQ5KOgQFBw/QygnkGBw+bvSDAgIFS8Ekh2rnqUAiBC8p227NIrYFlfptT6a9nIn0WwPr2BDjkEKYVZB80EJw=="}]},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/react-datetime-2.6.1.tgz_1477554366542_0.5061845253221691"},"directories":{}},"2.6.2":{"name":"react-datetime","version":"2.6.2","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","files":["DateTime.js","react-datetime.d.ts","src","css","dist"],"types":"./react-datetime.d.ts","scripts":{"build:win":"gulp.cmd","build:mac":"gulp","test":"node node_modules/mocha/bin/mocha tests","test:watch":"node node_modules/mocha/bin/mocha --watch tests","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.13","react-dom":">=0.13","moment":">=2.8.1"},"devDependencies":{"eslint":"^3.1.0","gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","gulp-sourcemaps":"^1.6.0","jsdom":"^7.0.2","mocha":"^2.2.5","moment":"2.14.1","pre-commit":"^1.1.3","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":"15.2.1","react-tools":"^0.13.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"pre-commit":["lint","test"],"gitHead":"bd232d91272e386b01b8748c5dbb018e177eaffd","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.6.2","_shasum":"2cf01449dd8722b1d144bec427b7e1be7e52058e","_from":".","_npmVersion":"2.15.10","_nodeVersion":"6.6.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"}],"dist":{"shasum":"2cf01449dd8722b1d144bec427b7e1be7e52058e","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.6.2.tgz","integrity":"sha512-+QCwa9C80Is2Xivq7PoD1BiK9NuZzXB5f2NnGbLXDw6krvDKkVh4tty5AJVMwe+QO0CAlYvr5ZZrsyUtaP4kxQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIA+ktFQfWknThR3oTu0OSdaCyA0T1+8VpisI4XULxbKrAiEAs48TxPK1TmRxmxq+B3POPXXt3/VMZVNnhWuAyiUr9Ck="}]},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/react-datetime-2.6.2.tgz_1477566518210_0.7324218603316694"},"directories":{}},"2.7.0":{"name":"react-datetime","version":"2.7.0","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","files":["DateTime.js","react-datetime.d.ts","src","css","dist"],"types":"./react-datetime.d.ts","scripts":{"build:win":"gulp.cmd","build:mac":"gulp","test":"node node_modules/mocha/bin/mocha tests","test:watch":"node node_modules/mocha/bin/mocha --watch tests","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.13","react-dom":">=0.13","moment":">=2.8.1"},"devDependencies":{"eslint":"^3.1.0","gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^7.0.2","mocha":"^2.2.5","moment":"2.14.1","pre-commit":"^1.1.3","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":"15.2.1","react-tools":"^0.13.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"pre-commit":["lint","test"],"gitHead":"851b44536c3d85b579ca592b6358c24a4fa9c8c6","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.7.0","_shasum":"143c2311f3ab7c1281bcc0845528354e210bbcb9","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.6.0","_npmUser":{"name":"simeg","email":"s.egersand@gmail.com"},"dist":{"shasum":"143c2311f3ab7c1281bcc0845528354e210bbcb9","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.7.0.tgz","integrity":"sha512-Uxgte3rLGpXyHy3NKcZ628kBOOjl7TavK+pg2MV6p1LrAVZPjx/1CWv1IbJJqfjWHKvfEl9csPSuolM4C5s04g==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCc+HlVLA9HBGKYtumbORxyS5lk3D/81zO3P97YsijOvQIgWIHMzttSjCrerswx1U5tIlc45KNACNzK+IKnMy64usA="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/react-datetime-2.7.0.tgz_1479297899399_0.1972452460322529"},"directories":{}},"2.7.1":{"name":"react-datetime","version":"2.7.1","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","files":["DateTime.js","react-datetime.d.ts","src","css","dist"],"types":"./react-datetime.d.ts","scripts":{"build:win":"gulp.cmd","build:mac":"gulp","test":"node node_modules/mocha/bin/mocha tests","test:watch":"node node_modules/mocha/bin/mocha --watch tests","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.13","react-dom":">=0.13","moment":">=2.8.1"},"devDependencies":{"eslint":"^3.1.0","gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^7.0.2","mocha":"^2.2.5","moment":"2.14.1","pre-commit":"^1.1.3","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":">=0.13","react-tools":"^0.13.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"pre-commit":["lint","test"],"gitHead":"2063ffc82dfb0e9f1d80ad9b803406acea6a9fb3","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.7.1","_shasum":"3dc4b52d8d7adb30f9e6c0dbc76ee02d86d2c3c7","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.8.1","_npmUser":{"name":"simeg","email":"s.egersand@gmail.com"},"dist":{"shasum":"3dc4b52d8d7adb30f9e6c0dbc76ee02d86d2c3c7","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.7.1.tgz","integrity":"sha512-cqqpe3IJEyxd54uVo6w9Dtkb0UOJO0KlhqJvxy/sm0RLvaRdTLnRnzyqmjMVlLyokoIjadxi7bmkG1uIOLX83w==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHF+L5hytt85385hEPE0CxPm/6n2ZZbDQr6616jz2dGdAiB++vc+7uXGFxTAzF0aiiKZ3NEpuQDCCx02Daar0VP73g=="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/react-datetime-2.7.1.tgz_1479335167022_0.16075584571808577"},"directories":{}},"2.7.2":{"name":"react-datetime","version":"2.7.2","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","files":["DateTime.js","react-datetime.d.ts","src","css","dist"],"types":"./react-datetime.d.ts","scripts":{"build:win":"gulp.cmd","build:mac":"gulp","test":"node node_modules/mocha/bin/mocha tests","test:watch":"node node_modules/mocha/bin/mocha --watch tests","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.13","react-dom":">=0.13","moment":">=2.16.0"},"devDependencies":{"eslint":"^3.1.0","gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^7.0.2","mocha":"^2.2.5","moment":">=2.16.0","pre-commit":"^1.1.3","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":">=0.13","react-tools":"^0.13.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"pre-commit":["lint","test"],"gitHead":"e905cb677f3059a6bb818f6460233080c98d05c7","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.7.2","_shasum":"b9d2e01c9fd62e47a35f84f3f3cd5056c2c80dd5","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.8.1","_npmUser":{"name":"simeg","email":"s.egersand@gmail.com"},"dist":{"shasum":"b9d2e01c9fd62e47a35f84f3f3cd5056c2c80dd5","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.7.2.tgz","integrity":"sha512-/tYwqUHFEVimWjAH5x9OzQu1hFB3m8E0inaWP7gyRp4SzNLCQQpikk00RGMjCG6mKFjhU+lnlgY5mjRd03J4yQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGszgxFl0qx8PfpyPtFaWVFlESD9QpKGYvL7Ih7hg+RMAiBb//0yqt/h0CgrUU1c7k7lyVYUgI3HelpvbsxnU4iK/Q=="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/react-datetime-2.7.2.tgz_1479422397952_0.01878301869146526"},"directories":{}},"2.7.3":{"name":"react-datetime","version":"2.7.3","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","files":["DateTime.js","react-datetime.d.ts","src","css","dist"],"types":"./react-datetime.d.ts","scripts":{"build:win":"gulp.cmd","build:mac":"gulp","test":"node node_modules/mocha/bin/mocha tests","test:watch":"node node_modules/mocha/bin/mocha --watch tests","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":"^15.4.0","react-dom":"^15.4.0","moment":"^2.16.0"},"devDependencies":{"eslint":"^3.1.0","gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^7.0.2","mocha":"^2.2.5","moment":"^2.16.0","pre-commit":"^1.1.3","react":"^15.4.0","react-addons-test-utils":"^15.4.0","react-dom":"^15.4.0","react-tools":"^0.13.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"pre-commit":["lint","test"],"gitHead":"4cf4975c22f817118416697aecef1f6cb9d1a020","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.7.3","_shasum":"a3b8c56bc4a3d2b54f8dbbb312004b6f91b57416","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.8.1","_npmUser":{"name":"simeg","email":"s.egersand@gmail.com"},"dist":{"shasum":"a3b8c56bc4a3d2b54f8dbbb312004b6f91b57416","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.7.3.tgz","integrity":"sha512-e4QMYogOz6jDxw4gh42V0jaaXWVEPbF2eiQOVWsKOsoerbnaUCeWqSGhe4m8L72iFZwBr/O/7zMJ023iRkipGQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDNkxxxSEf1AS6pymZltyLZ3Kigo9n3kGLD9A6bDFY9PAiBQ/jqDDbAK251ADnhRgcYwR2JqEbpg8VA+8HCAiy96tQ=="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/react-datetime-2.7.3.tgz_1479426370667_0.767523912480101"},"directories":{}},"2.7.4":{"name":"react-datetime","version":"2.7.4","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","files":["DateTime.js","react-datetime.d.ts","src","css","dist"],"types":"./react-datetime.d.ts","scripts":{"build:win":"gulp.cmd","build:mac":"gulp","test":"node node_modules/mocha/bin/mocha tests","test:watch":"node node_modules/mocha/bin/mocha --watch tests","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.13","react-dom":">=0.13","moment":">=2.16.0"},"devDependencies":{"eslint":"^3.1.0","gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^7.0.2","mocha":"^2.2.5","moment":">=2.16.0","pre-commit":"^1.1.3","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":">=0.13","react-tools":"^0.13.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"pre-commit":["lint","test"],"gitHead":"ecb8ac0de94747cd20161bed736816376b580381","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.7.4","_shasum":"8ef7aae4e8d2f4974fac56eeb5c7f6eb8b74a688","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.8.1","_npmUser":{"name":"simeg","email":"s.egersand@gmail.com"},"dist":{"shasum":"8ef7aae4e8d2f4974fac56eeb5c7f6eb8b74a688","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.7.4.tgz","integrity":"sha512-MDktTAv4r5lGeqgLLfDX3zCnea2bHqzEIQNFUlXoZUMDMH1+S7M+PYg/JC54v5aiRn7Rq1h8QWSFqbXFNGSKUQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCtkaCyPIOASptsXJtXhj3nUt6/bvu01PzCOOSeDoFqEQIhAJK0M1a2WspiObP9o+ycLUg6RU9sUWaFnqV+5JHycSiz"}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/react-datetime-2.7.4.tgz_1479427675954_0.24420598708093166"},"directories":{}},"2.7.5":{"name":"react-datetime","version":"2.7.5","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","files":["DateTime.js","react-datetime.d.ts","src","css","dist"],"types":"./react-datetime.d.ts","scripts":{"build:win":"gulp.cmd","build:mac":"gulp","test":"node node_modules/mocha/bin/mocha tests","test:watch":"node node_modules/mocha/bin/mocha --watch tests","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.13","react-dom":">=0.13","moment":">=2.16.0"},"devDependencies":{"eslint":"^3.1.0","gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^7.0.2","mocha":"^2.2.5","moment":">=2.16.0","pre-commit":"^1.1.3","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":">=0.13","react-tools":"^0.13.2","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"pre-commit":["lint","test"],"gitHead":"932eda56c107c1ae42c0fd2386d133af9dc1a1c4","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.7.5","_shasum":"f004fb2463684c6c918f7fa8431310a453441bea","_from":".","_npmVersion":"2.15.10","_nodeVersion":"6.6.0","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"dist":{"shasum":"f004fb2463684c6c918f7fa8431310a453441bea","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.7.5.tgz","integrity":"sha512-5QoY1t/JqTG9z+iExl6tH7yVrE5JhO7dgCiLKWJATPmokHvAmYoVfBjwKlSTB57LVta0LBnrySIDUAiyI2X+0w==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICWqmlkJZs58RE6LwWzHaQuW5vX/WN1KRbfG3IrtPcxgAiBEcpa/guX2byCpexz2q2Wjuz7y7xO72DXu4QK/hwUTNg=="}]},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/react-datetime-2.7.5.tgz_1479461737293_0.3552774910349399"},"directories":{}},"2.8.0":{"name":"react-datetime","version":"2.8.0","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","files":["DateTime.js","react-datetime.d.ts","typings/index.d.ts","src","css","dist"],"types":"./typings/index.d.ts","scripts":{"build:win":"gulp.cmd","build:mac":"gulp","test":"node node_modules/mocha/bin/mocha tests","test:watch":"node node_modules/mocha/bin/mocha --watch tests","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js","test:typings":"tsc -p ./typings"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.13","react-dom":">=0.13","moment":">=2.16.0"},"devDependencies":{"@types/react":"^0.14.49","eslint":"^3.1.0","gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^7.0.2","mocha":"^2.2.5","moment":">=2.16.0","pre-commit":"^1.1.3","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":">=0.13","react-tools":"^0.13.2","typescript":"^2.0.10","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"pre-commit":["lint","test"],"gitHead":"b1f53a20fab3c8d79ae8f80f2e8dba7f415a21e5","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.8.0","_shasum":"024b1a64937626e360c3abe75f007dc811255683","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.8.1","_npmUser":{"name":"simeg","email":"s.egersand@gmail.com"},"dist":{"shasum":"024b1a64937626e360c3abe75f007dc811255683","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.8.0.tgz","integrity":"sha512-6etnZtUp1j5xPcaR44Ca5fBj61o3RjhpCaGY+GGOkmTjZn3O1flc+eCh7JFkR5Uyd2xas3SBjffeBMZq7reaCw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCH4ElY5HAgri6jTw+DTc/A4zftxkpSyB6oi46mX+LuRgIgQRfFly1IfTm163hHbyuW8EfKdEF+Qbl2Ry2PZNsaBBM="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/react-datetime-2.8.0.tgz_1482264634550_0.9915938717313111"},"directories":{}},"2.8.1":{"name":"react-datetime","version":"2.8.1","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","files":["DateTime.js","react-datetime.d.ts","typings/index.d.ts","src","css","dist"],"types":"./typings/index.d.ts","scripts":{"build:win":"gulp.cmd","build:mac":"gulp","test":"node node_modules/mocha/bin/mocha tests","test:watch":"node node_modules/mocha/bin/mocha --watch tests","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js","test:typings":"tsc -p ./typings"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.13","react-dom":">=0.13","moment":">=2.16.0"},"devDependencies":{"@types/react":"^0.14.49","eslint":"^3.1.0","gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^7.0.2","mocha":"^2.2.5","moment":">=2.16.0","pre-commit":"^1.1.3","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":">=0.13","react-tools":"^0.13.2","typescript":"^2.0.10","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"pre-commit":["lint","test"],"gitHead":"e4109cae9c5dffc6ae487adbb1fc81c7f9b24bd5","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.8.1","_shasum":"cfc4b42a96e373927f426839bcf07adb3cb3a946","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.8.1","_npmUser":{"name":"simeg","email":"s.egersand@gmail.com"},"dist":{"shasum":"cfc4b42a96e373927f426839bcf07adb3cb3a946","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.8.1.tgz","integrity":"sha512-Eu/06xwsz6OXObnl5f3aiCm/WZByNFXFpY1t96fRmUg1GU1fevotmbH3wVLooJRONzJkGY30bPBPng+awfEuNA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDquUZZvQWevHaZlbM66QpKbMsH6VbiYCFQ1LY21YzrBAIgQxfXgY4UnlrJL2ri9+bRCTDXAWleAPSM3oOfVfNtdbo="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/react-datetime-2.8.1.tgz_1482278730911_0.8288858071900904"},"directories":{}},"2.8.2":{"name":"react-datetime","version":"2.8.2","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","files":["DateTime.js","react-datetime.d.ts","typings/index.d.ts","src","css","dist"],"types":"./typings/index.d.ts","scripts":{"build:win":"gulp.cmd","build:mac":"gulp","test":"node node_modules/mocha/bin/mocha tests","test:watch":"node node_modules/mocha/bin/mocha --watch tests","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js","test:typings":"tsc -p ./typings"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.13","react-dom":">=0.13","moment":">=2.16.0"},"devDependencies":{"@types/react":"^0.14.49","eslint":"^3.1.0","gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^7.0.2","mocha":"^2.2.5","moment":">=2.16.0","pre-commit":"^1.1.3","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":">=0.13","react-tools":"^0.13.2","typescript":"^2.0.10","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"pre-commit":["lint","test"],"gitHead":"cf81ded1c627da00904b56a603bca6b7138b6e16","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.8.2","_shasum":"b1f950ac27bbca65542fb2bfa1ae2c577db2b984","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.8.1","_npmUser":{"name":"simeg","email":"s.egersand@gmail.com"},"dist":{"shasum":"b1f950ac27bbca65542fb2bfa1ae2c577db2b984","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.8.2.tgz","integrity":"sha512-H3G4M+t7ZfMWIG3yPAPJgsyeFfnbYhFtEWqaiuZoZBHqv7DTlm/mLExOdVt3BmJi2yT/NfgYf5ETHsU2efQXRA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDKW5S0eEnoMQy6VchCEMI8wP3IoZjQ3jBL4SeaCDVyMQIhAMTyiV11G9FyNnze60K7qJNJmPkzsk4ZXIOyGvJRuDvO"}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/react-datetime-2.8.2.tgz_1483718723936_0.11088899034075439"},"directories":{}},"2.8.3":{"name":"react-datetime","version":"2.8.3","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","files":["DateTime.js","react-datetime.d.ts","typings/index.d.ts","src","css","dist"],"types":"./typings/index.d.ts","scripts":{"build:win":"gulp.cmd","build:mac":"gulp","test":"node node_modules/mocha/bin/mocha tests","test:watch":"node node_modules/mocha/bin/mocha --watch tests","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js","test:typings":"tsc -p ./typings"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"react":">=0.13","react-dom":">=0.13","moment":">=2.16.0"},"devDependencies":{"@types/react":"^0.14.49","eslint":"^3.1.0","gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^7.0.2","mocha":"^2.2.5","moment":">=2.16.0","pre-commit":"^1.1.3","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":">=0.13","react-tools":"^0.13.2","typescript":"^2.0.10","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"pre-commit":["lint","test"],"gitHead":"a801fecea776c638fd9259c509d2dd35533e6fdd","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.8.3","_shasum":"0ef74b3505cfc517b44ac113bbd6cdbc50d3e308","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.8.1","_npmUser":{"name":"simeg","email":"s.egersand@gmail.com"},"dist":{"shasum":"0ef74b3505cfc517b44ac113bbd6cdbc50d3e308","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.8.3.tgz","integrity":"sha512-z3rd/M82Z4cS0MCeo/J/k7JqxqxwI4KeENVpBj8SX2JaQP/zXbCl96VB8JFmqgcM7T65jiVahJ7byo2Vo2hErQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDMIISreprO/h1glmhJPEJVpWTA50qNfRVtDRz9+0lvaAiEA9YqaTcGZGvdBZewmy72zoWmqtTR8o+8A7rVZ4eBeXT0="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/react-datetime-2.8.3.tgz_1484087431690_0.035266727674752474"},"directories":{}},"2.8.4":{"name":"react-datetime","version":"2.8.4","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./DateTime.js","files":["DateTime.js","react-datetime.d.ts","typings/index.d.ts","src","css","dist"],"types":"./typings/index.d.ts","scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js","test":"node node_modules/mocha/bin/mocha tests","test:all":"npm run test:typings && npm run test","test:typings":"tsc -p ./typings","test:watch":"node node_modules/mocha/bin/mocha --watch tests"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":"^0.14.49","eslint":"^3.1.0","gulp":"^3.9.0","gulp-insert":"^0.4.0","gulp-uglify":"^1.2.0","gulp-webpack":"^1.5.0","jsdom":"^7.0.2","mocha":"^2.2.5","moment":">=2.16.0","pre-commit":"^1.1.3","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":">=0.13","react-tools":"^0.13.2","typescript":"^2.0.10","webpack":"^1.5.1","webpack-dev-server":"^1.7.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"pre-commit":["lint","test:all"],"gitHead":"e0ab1e51a66d88c73a8f7cf8a57bd451c06a542d","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@2.8.4","_shasum":"af247643aa480b99710ac4b45fff1a7b8d59111f","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.8.1","_npmUser":{"name":"simeg","email":"s.egersand@gmail.com"},"dist":{"shasum":"af247643aa480b99710ac4b45fff1a7b8d59111f","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.8.4.tgz","integrity":"sha512-l+K2qnA3Ou9vUg0gtPw2eAx3tu6oqRq/flDr9lLwiOnyTT0LXD1lWDmypAsqk8apqPJQrlAfiawJ+alNHMsrIw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDgvPWd4Z8RxQJQEBzUyfuP6tEqNeaXQQLqenIo3YIxWgIgZe9z+/hO3nJLWRS6OIyU+Y9N3MNI42hz0D9V5kW5dmo="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/react-datetime-2.8.4.tgz_1486254865853_0.642696110997349"},"directories":{}},"2.8.5":{"name":"react-datetime","version":"2.8.5","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","files":["DateTime.js","react-datetime.d.ts","typings/index.d.ts","src","css","dist"],"types":"./typings/index.d.ts","scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js","test":"jest","test:all":"npm run test:typings && npm run test","test:typings":"tsc -p ./typings","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":"^0.14.49","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^2.7.1","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^3.2.0","moment":">=2.16.0","pre-commit":"^1.1.3","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":">=0.13","react-test-renderer":"^15.4.2","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-dev-server":"^1.7.0","webpack-stream":"^3.2.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"pre-commit":["lint","test:all"],"gitHead":"be9654c6325a15a8ca282d3fd1245c8fe2ed699e","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@2.8.5","_shasum":"4352b08f815d7721a56b61a3ee404a5b36fb813f","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.8.1","_npmUser":{"name":"simeg","email":"s.egersand@gmail.com"},"dist":{"shasum":"4352b08f815d7721a56b61a3ee404a5b36fb813f","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.8.5.tgz","integrity":"sha512-XvPPz8jLw+2ww3Pf2T65/zA0E2DSvvVh7AGCGszUFOMe6LXhpe/4wurfwpAWCpkWeR+da19d4A65ci6MiinN0g==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCiIsxdqdRTdwLOuSdLVVfhhbxqqOi7qKjdMff4rM3WWQIgUsZqU/LQ+E9WLvGRRAdMD+/ESTy8mXOp1MfnrILMMEM="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/react-datetime-2.8.5.tgz_1486683212016_0.4215136175043881"},"directories":{}},"2.8.6":{"name":"react-datetime","version":"2.8.6","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","files":["DateTime.js","react-datetime.d.ts","typings/index.d.ts","src","css","dist"],"types":"./typings/index.d.ts","scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js","test":"jest","test:all":"npm run test:typings && npm run test","test:typings":"tsc -p ./typings","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":"^0.14.49","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^2.7.1","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^3.2.0","moment":">=2.16.0","pre-commit":"^1.1.3","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":">=0.13","react-test-renderer":"^15.4.2","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-dev-server":"^1.7.0","webpack-stream":"^3.2.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^4.1.0"},"pre-commit":["lint","test:all"],"gitHead":"56177acfe2d4c30ceef80355c93fc1b28d2cd06c","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@2.8.6","_shasum":"591c95e89fb5071b33f6907e9db293d25b331191","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.8.1","_npmUser":{"name":"simeg","email":"s.egersand@gmail.com"},"dist":{"shasum":"591c95e89fb5071b33f6907e9db293d25b331191","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.8.6.tgz","integrity":"sha512-VAR3jTSZldUtanGEVduLjSLkzGgGiRXTuBdBwkuWH1U6Q9wOlWxv7vG7n8mehCWc3Z9gyWy473ig2ekAhc5efg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCy3VbHPvWvZyTzUMpJey8UnFW3xuKP2fXxsSQLo6gDmQIhAOSaGbQXBk8mqOtVit7TYccwQn87apQL6kgB1pcsLFxI"}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/react-datetime-2.8.6.tgz_1486744290889_0.2645842870697379"},"directories":{}},"2.8.7":{"name":"react-datetime","version":"2.8.7","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","files":["DateTime.js","react-datetime.d.ts","typings/index.d.ts","src","css","dist"],"types":"./typings/index.d.ts","scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js tests/","test":"jest","test:all":"npm run test:typings && npm run test","test:typings":"tsc -p ./typings","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":"^0.14.49","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^2.7.1","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^3.2.0","moment":">=2.16.0","pre-commit":"^1.1.3","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":">=0.13","react-test-renderer":"^15.4.2","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-dev-server":"^1.7.0","webpack-stream":"^3.2.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^5.9.0"},"pre-commit":["lint","test:all"],"gitHead":"7750acc41266d88b5549241e03a586a7c7deda17","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@2.8.7","_shasum":"2c9f1a6aa866d9813719030c2541f393927e5537","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"dist":{"shasum":"2c9f1a6aa866d9813719030c2541f393927e5537","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.8.7.tgz","integrity":"sha512-Pc3QBlmo7fGK4hF+fouhR1r0eUdI41/u8OWS7q0SkV3LnDhUAxnp5SNsY7Y3wlDL+MnTalyLh92gpSYCeUT51A==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHfa6rk0qK9g9pIIsX0gggEwagtMHyc52wpNHrBNW9QUAiBXyj3icR98VhdrwsrIK758ariKgzEs4Qs36GXnrGV3oA=="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/react-datetime-2.8.7.tgz_1488191350017_0.6722081755287945"},"directories":{}},"2.8.8":{"name":"react-datetime","version":"2.8.8","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","files":["DateTime.js","react-datetime.d.ts","typings/index.d.ts","src","css","dist"],"types":"./typings/index.d.ts","scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js tests/","test":"jest","test:all":"npm run test:typings && npm run test","test:typings":"tsc -p ./typings","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":"^0.14.49","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^2.7.1","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^3.2.0","moment":">=2.16.0","pre-commit":"^1.1.3","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":">=0.13","react-test-renderer":"^15.4.2","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-dev-server":"^1.7.0","webpack-stream":"^3.2.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^5.9.0"},"pre-commit":["lint","test:all"],"gitHead":"11612b608143c1607f33ff40c43c6f9db5e073ba","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@2.8.8","_shasum":"8075836177f21dcd085b77e570ecf5b3af219e92","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"dist":{"shasum":"8075836177f21dcd085b77e570ecf5b3af219e92","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.8.8.tgz","integrity":"sha512-YVj7ox91unskApRyI3oK5PZzMjhSwUBEbz+puRF/eNHBTZEVIjq8Qy95ZnS8sjUBqXOAtBuGjPETAgV0yTU7wA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFmP9WhbaDtiyMbY2++6SXTktDzwLl5NY6LQf+QNkXEuAiBBI/f1ZGKenFRlsIn6M6PJ5rmt7vgCQDvWPh6u1ihbJw=="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/react-datetime-2.8.8.tgz_1488359930820_0.48690176801756024"},"directories":{}},"2.8.9":{"name":"react-datetime","version":"2.8.9","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","files":["DateTime.js","react-datetime.d.ts","typings/index.d.ts","src","css","dist"],"types":"./typings/index.d.ts","scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js tests/","test":"jest","test:all":"npm run test:typings && npm run test","test:typings":"tsc -p ./typings","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":"^0.14.49","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^2.7.1","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^3.2.0","moment":">=2.16.0","pre-commit":"^1.1.3","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":">=0.13","react-test-renderer":"^15.4.2","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-dev-server":"^1.7.0","webpack-stream":"^3.2.0"},"dependencies":{"object-assign":"^3.0.0","react-onclickoutside":"^5.9.0"},"pre-commit":["lint","test:all"],"gitHead":"e609a12ba958f009a742ee160152fb18b940b6b1","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@2.8.9","_shasum":"52f3a1a28b0e34146664c057d480c80b33d39793","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.1","_npmUser":{"name":"simeg","email":"s.egersand@gmail.com"},"dist":{"shasum":"52f3a1a28b0e34146664c057d480c80b33d39793","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.8.9.tgz","integrity":"sha512-7sAeQOLEQo2H3mX0WCPMK5Cf/yj+osXRczSlV49WZotYPtW4rjqNhU7B9MyGPrhYxYPW+mTHJjs3PTM2eN99EQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDZxsr3HXIBM77mfa3ISD5/Smkq153+PPavAIw8uVsoUAiEA6PJzcAXLzbJetHBFRQwX+F8MCsHwMSoHAGn/GWHTS3E="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/react-datetime-2.8.9.tgz_1491649646554_0.6753573960158974"},"directories":{}},"2.8.10":{"name":"react-datetime","version":"2.8.10","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","files":["DateTime.js","react-datetime.d.ts","typings/index.d.ts","src","css","dist"],"types":"./typings/index.d.ts","scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js tests/","test":"jest","test:all":"npm run test:typings && npm run test","test:typings":"tsc -p ./typings","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":"^0.14.49","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^2.7.1","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^3.2.0","moment":">=2.16.0","pre-commit":"^1.1.3","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":">=0.13","react-test-renderer":"^15.4.2","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-dev-server":"^1.7.0","webpack-stream":"^3.2.0"},"dependencies":{"create-react-class":"^15.5.2","object-assign":"^3.0.0","prop-types":"^15.5.7","react-onclickoutside":"^5.9.0"},"pre-commit":["lint","test:all"],"gitHead":"c79ee0d810eec1909a2338bcdf417253a40c2121","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@2.8.10","_shasum":"06d4317b7734310e0e8109555526656128346132","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.1","_npmUser":{"name":"simeg","email":"s.egersand@gmail.com"},"dist":{"shasum":"06d4317b7734310e0e8109555526656128346132","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.8.10.tgz","integrity":"sha512-aPgF0PjVdnKTOKO3agTwMZO/t/kY5hyMJSEKim0jbft8+WhNSgp6lXFYZ1O4YDi4a4iZ9SRBInOw8L7hAGQKXA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGjGtSMudV/kZ2N4ivBg+lMtKivbDdGOW3XDuTUBBkM+AiEA22BaSLX0Xe+imTMIk8Xb0e1hidXE/s1zAMtU/KMkEB0="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/react-datetime-2.8.10.tgz_1493065162103_0.549296990968287"},"directories":{}},"2.8.11":{"name":"react-datetime","version":"2.8.11","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","typings":"./DateTime.d.ts","files":["DateTime.js","DateTime.d.ts","src","css","dist"],"scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js tests/","test":"jest","test:all":"npm run test:typings && npm run test","test:typings":"tsc -p ./typings","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^2.7.1","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^3.2.0","moment":">=2.16.0","pre-commit":"^1.1.3","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":">=0.13","react-test-renderer":"^15.4.2","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-dev-server":"^1.7.0","webpack-stream":"^3.2.0"},"dependencies":{"@types/react":">=15","object-assign":"^3.0.0","prop-types":"^15.5.7","react-onclickoutside":"^5.9.0"},"pre-commit":["lint","test:all"],"gitHead":"e3815186e6b33a8516960922aa05479557dcc076","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@2.8.11","_npmVersion":"5.3.0","_nodeVersion":"8.2.1","_npmUser":{"name":"simeg","email":"s.egersand@gmail.com"},"dist":{"integrity":"sha512-HdFxiiirBRTDRJcjnxxpgfFslGy9SEN6FKvCjg8LqDPVXEzohtDNWcTkWJ1dRZIyf/w1QgTxHhN2KaeK0Vr5WA==","shasum":"54d672c13f82af17a14621da430e6e9d02b097e0","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.8.11.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDjVgWS80P27t1c3jThm693csUPcsyivCdumRCCPDSA2gIgKlMXSlKfTYbgMv5ZqowasZg2L6h2DfO1pmLcdJ9wLDQ="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime-2.8.11.tgz_1501188372036_0.8845469739753753"},"directories":{}},"2.9.0":{"name":"react-datetime","version":"2.9.0","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","typings":"./DateTime.d.ts","files":["DateTime.js","DateTime.d.ts","src","css","dist"],"scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js test/","test":"jest","test:all":"npm run test:typings && npm run test","test:typings":"tsc -p ./typings","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^2.7.1","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^3.2.0","moment":">=2.16.0","pre-commit":"^1.1.3","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":">=0.13","react-test-renderer":"^15.4.2","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-dev-server":"^1.7.0","webpack-stream":"^3.2.0"},"dependencies":{"@types/react":">=15","object-assign":"^3.0.0","prop-types":"^15.5.7","react-onclickoutside":"^5.9.0"},"pre-commit":["lint","test:all"],"gitHead":"0d28a4a175ee8d0f023b20def1b2cac3477c5085","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@2.9.0","_npmVersion":"5.3.0","_nodeVersion":"8.2.1","_npmUser":{"name":"simeg","email":"s.egersand@gmail.com"},"dist":{"integrity":"sha512-gyfogbSC7xF8aK8wIBxrptNchPfM1H72JT1hz1pTTn0VwodKkaIWNTA9KIIsPocxjGpOjvEum5Rt9MvrZz8AtQ==","shasum":"9ec80060cbb8e5c5d8f98f0acebb6f4712ce449a","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.9.0.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD2XzciT16h2+ajprjuGZxg/oJZAw42hvbETwKEHnySwwIhALAyrrxwa901rqmds3IfrsObgUoaPw+AAHDtbGc6sCGk"}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime-2.9.0.tgz_1501405207976_0.09948407229967415"},"directories":{}},"2.10.0":{"name":"react-datetime","version":"2.10.0","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","typings":"./DateTime.d.ts","files":["DateTime.js","DateTime.d.ts","src","css","dist"],"scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js test/","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"npm run test:typings && npm run test","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^2.7.1","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^3.2.0","moment":">=2.16.0","pre-commit":"^1.1.3","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":">=0.13","react-test-renderer":"^15.4.2","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-dev-server":"^1.7.0","webpack-stream":"^3.2.0"},"dependencies":{"create-react-class":"^15.5.2","@types/react":">=15","object-assign":"^3.0.0","prop-types":"^15.5.7","react-onclickoutside":"^5.9.0"},"pre-commit":["lint","test:all"],"gitHead":"8f6f3312403adbc3260c031e65d0c594e86a7e93","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@2.10.0","_npmVersion":"5.3.0","_nodeVersion":"6.11.2","_npmUser":{"name":"layneanderson","email":"layneand@gmail.com"},"dist":{"integrity":"sha512-dRVPIHUazVjL9JOLCrWSox1UZRkKGxhsi63MAj+s0G5/cr+EvEArVq8D8l6pN0bS2QkTh5IDOzG8YPW5v/F+aw==","shasum":"fa7e341f727865ab60d90329e60517800f450259","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.10.0.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIC+iJjpoHauEZMZd2Af0HAAA3Win6Azc37tlwxmbd910AiA7ssESfaYkX3hhNLkkzrpl2z6X+meDAzjFJqpIc5uFoA=="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"layneanderson","email":"layneand@gmail.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime-2.10.0.tgz_1503790841414_0.8002382875420153"},"directories":{}},"2.10.1":{"name":"react-datetime","version":"2.10.1","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","typings":"./DateTime.d.ts","files":["DateTime.js","DateTime.d.ts","src","css","dist"],"scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js test/","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"npm run test:typings && npm run test","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^2.7.1","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^3.2.0","moment":">=2.16.0","pre-commit":"^1.1.3","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":">=0.13","react-test-renderer":"^15.4.2","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-dev-server":"^1.7.0","webpack-stream":"^3.2.0"},"dependencies":{"create-react-class":"^15.5.2","@types/react":">=15","object-assign":"^3.0.0","prop-types":"^15.5.7","react-onclickoutside":"^5.9.0"},"pre-commit":["lint","test:all"],"gitHead":"1c710b46c3048035b6b6e7371137640046b54c17","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@2.10.1","_npmVersion":"5.3.0","_nodeVersion":"5.7.0","_npmUser":{"name":"layneanderson","email":"layneand@gmail.com"},"dist":{"integrity":"sha512-Q/xI/Zys8JoRfJfYxANL2Kee4bJLpDXEGKeCCOPucidsXGegefY/NWa4mnKXiZH2fe+qargIe+/drHn7cCbLLQ==","shasum":"25ba863551ae6e5ae80d8a7f99d359ea063c4a38","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.10.1.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAu/IPcOMvN2bd7kc18HpGjZxG14zL4a0P3FOkMTjV7vAiBbofPwQgJZxfXfUlaSD44PyltI+vviJz2IAzn6kStHXg=="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"layneanderson","email":"layneand@gmail.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime-2.10.1.tgz_1503795955838_0.15174421179108322"},"directories":{}},"2.10.2":{"name":"react-datetime","version":"2.10.2","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","typings":"./DateTime.d.ts","files":["DateTime.js","DateTime.d.ts","src","css","dist"],"scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js test/","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"npm run test:typings && npm run test","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":">=15","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^2.7.1","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^3.2.0","moment":">=2.16.0","pre-commit":"^1.1.3","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":">=0.13","react-test-renderer":"^15.4.2","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-dev-server":"^1.7.0","webpack-stream":"^3.2.0"},"dependencies":{"create-react-class":"^15.5.2","object-assign":"^3.0.0","prop-types":"^15.5.7","react-onclickoutside":"^5.9.0"},"pre-commit":["lint","test:all"],"gitHead":"ea49e7ae71b5546a43ba61898342c64702700bc2","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@2.10.2","_npmVersion":"5.4.2","_nodeVersion":"8.2.1","_npmUser":{"name":"simeg","email":"s.egersand@gmail.com"},"dist":{"integrity":"sha512-tErw6Yp6fGRX6BQ1vTgSqDabWLpCovxLoMaohWB41yv5K1umf8JrxAZLt1JjKVDYdU0aBC+nH1/K9x4CLEq7rA==","shasum":"0a91819c8068f6f3f24bbc687c0039820145a43e","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.10.2.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDgWeWUAV1imPsSKKf+LnbreRQb3q7LZBdsNugiM1D7UgIgONGzvFl57ad2EsYxubEn5ksHXP58anYWjSba3NfIddI="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"layneanderson","email":"layneand@gmail.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime-2.10.2.tgz_1506178546004_0.37301517999731004"},"directories":{}},"2.10.3":{"name":"react-datetime","version":"2.10.3","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","typings":"./DateTime.d.ts","files":["DateTime.js","DateTime.d.ts","src","css","dist"],"scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js test/","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"npm run test:typings && npm run test","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":">=15","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^2.7.1","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^3.2.0","moment":">=2.16.0","pre-commit":"^1.1.3","react":">=0.13","react-addons-test-utils":">=0.13","react-dom":">=0.13","react-test-renderer":"^15.4.2","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-dev-server":"^1.7.0","webpack-stream":"^3.2.0"},"dependencies":{"create-react-class":"^15.5.2","object-assign":"^3.0.0","prop-types":"^15.5.7","react-onclickoutside":"^6.5.0"},"pre-commit":["lint","test:all"],"gitHead":"39b8275f9b2bbd8f11ffecba94fce7d339c4d577","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@2.10.3","_npmVersion":"5.4.2","_nodeVersion":"6.11.2","_npmUser":{"name":"layneanderson","email":"layneand@gmail.com"},"dist":{"integrity":"sha512-ZEOWY8WlIY7C2N4WE2o+ZpTktkv8pCHfrCg0lGUgGhZAVU/09h9peYjz3aWcZB4Sh+3z3A+YlC2J5d4xJF734Q==","shasum":"9807a7d9be1dd4ee01b3466b0416614e3543378e","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.10.3.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICIY7cbkMvfnqVlMYExJ/1D5zqXo05+kTbvXY26U6atoAiBSXSWhY6C6PYTlGnnvds/jJltB92h+3Sip8BiSMsniUQ=="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"layneanderson","email":"layneand@gmail.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime-2.10.3.tgz_1506724567890_0.4380787690170109"},"directories":{}},"2.11.0":{"name":"react-datetime","version":"2.11.0","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","typings":"./DateTime.d.ts","files":["DateTime.js","DateTime.d.ts","src","css","dist"],"scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js test/","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"npm run test:typings && npm run test","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":">=15","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^3.0.0","enzyme-adapter-react-15":"^1.0.5","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^3.2.0","moment":">=2.16.0","pre-commit":"^1.1.3","react":"^15.5.0","react-addons-test-utils":">=0.13","react-dom":"^15.5.0","react-test-renderer":"^15.5.0","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-dev-server":"^1.7.0","webpack-stream":"^3.2.0"},"dependencies":{"create-react-class":"^15.5.2","object-assign":"^3.0.0","prop-types":"^15.5.7","react-onclickoutside":"^6.5.0"},"pre-commit":["lint","test:all"],"gitHead":"c1a952d4fe02173646362bba85582c45b515edee","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@2.11.0","_npmVersion":"5.5.1","_nodeVersion":"8.8.1","_npmUser":{"name":"simeg","email":"s.egersand@gmail.com"},"dist":{"integrity":"sha512-LfToQVZrFjH9b+R4PWemo/jJcWawHWHL+eF1HFWGZ9zGXXgy7d/X1+PzJUBYiZfteFM+VSdaHvYyqReqP/nGaQ==","shasum":"6560a8e5b81f7e52986083dc2e8cb94bb74528ea","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.11.0.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCIsgVm/koUgLMZ/6AvPhj8IhMQAeF1w3Sm1p4f24wYmQIhAJTSfgouXhuikwzOGfiVExjfEe7euroosO1YWxbRNSEz"}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"layneanderson","email":"layneand@gmail.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime-2.11.0.tgz_1510609128127_0.15015545953065157"},"directories":{}},"2.11.1":{"name":"react-datetime","version":"2.11.1","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","typings":"./DateTime.d.ts","files":["DateTime.js","DateTime.d.ts","src","css","dist"],"scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js test/","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"npm run test:typings && npm run test","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":">=15","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^3.0.0","enzyme-adapter-react-15":"^1.0.5","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^3.2.0","moment":">=2.16.0","pre-commit":"^1.1.3","react":"^15.5.0","react-addons-test-utils":">=0.13","react-dom":"^15.5.0","react-test-renderer":"^15.5.0","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-dev-server":"^1.7.0","webpack-stream":"^3.2.0"},"dependencies":{"create-react-class":"^15.5.2","object-assign":"^3.0.0","prop-types":"^15.5.7","react-onclickoutside":"^6.5.0"},"pre-commit":["lint","test:all"],"gitHead":"2a5ddc991e0b91eb78414d9ff432738e4ac6ca9e","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@2.11.1","_npmVersion":"5.5.1","_nodeVersion":"8.9.1","_npmUser":{"name":"simeg","email":"s.egersand@gmail.com"},"dist":{"integrity":"sha512-yDZdygP/2zeq02yYnRxid8rDnlUXwCA+0WeHOScc8wZqBnxfkrDEhYJSo/lKaX+85dIU7uuBCuG5oTkl4xXAYQ==","shasum":"11d15081dd7d6729284e21c1b8ea7b975e3bdc7e","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.11.1.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDmT74RhAFZGoNNQ/ei4yt3YJd7wFRs1q5+dNB2IGEMtAiEA/LYuJfOB4GhrXu/z2Qhtn8dbqNwLVPIBgHIClSdM8Lg="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"layneanderson","email":"layneand@gmail.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime-2.11.1.tgz_1512169710503_0.5139063368551433"},"directories":{}},"2.12.0":{"name":"react-datetime","version":"2.12.0","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","typings":"./DateTime.d.ts","files":["DateTime.js","DateTime.d.ts","src","css","dist"],"scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js test/ && echo 'Linting OK!'","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"npm run test:typings && npm run test","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":">=15","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^3.0.0","enzyme-adapter-react-15":"^1.0.5","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^3.2.0","moment":">=2.16.0","pre-commit":"^1.1.3","react":"^15.5.0","react-addons-test-utils":">=0.13","react-dom":"^15.5.0","react-test-renderer":"^15.5.0","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-dev-server":"^1.7.0","webpack-stream":"^3.2.0"},"dependencies":{"create-react-class":"^15.5.2","object-assign":"^3.0.0","prop-types":"^15.5.7","react-onclickoutside":"^6.5.0"},"pre-commit":["lint","test:all"],"gitHead":"6e920abe5d820c2aa13aa2fc3a9b5df6319ee53d","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@2.12.0","_npmVersion":"5.6.0","_nodeVersion":"9.4.0","_npmUser":{"name":"simeg","email":"s.egersand@gmail.com"},"dist":{"integrity":"sha512-Dy6QnGhIYtrNx7lpmruD7ZXrViuj1d8ocW8eqouOOo2cciZsC4L5OC21ZXybQGvSyb0CbtwqpNthyEvzIOyn2A==","shasum":"9226a11730b7be1273c12f018a4d5613496e831c","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.12.0.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIEL0XDQivl7jmt6RByFUv/74ML/Fes2h0nT3CbPT0wNbAiBWunLSLsdSOux2v/0zPDorDXI6dFJ9CXzfW1qWRbS+pw=="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"layneanderson","email":"layneand@gmail.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime-2.12.0.tgz_1517011394648_0.5999996983446181"},"directories":{}},"2.13.0":{"name":"react-datetime","version":"2.13.0","description":"A lightweight but complete datetime picker React.js component.","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","typings":"./DateTime.d.ts","files":["DateTime.js","DateTime.d.ts","src","css","dist"],"scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js test/ && echo 'Linting OK! ?'","notify-pre-commit-hook":"echo '### Starting pre-commit hook ?'","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"echo 'Running tests...' && npm run test:typings && npm run test && echo 'All tests passed! ?'","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":">=15","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^3.0.0","enzyme-adapter-react-15":"^1.0.5","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^3.2.0","moment":">=2.16.0","pre-commit":"^1.1.3","react":"^15.5.0","react-addons-test-utils":">=0.13","react-dom":"^15.5.0","react-test-renderer":"^15.5.0","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-dev-server":"^1.7.0","webpack-stream":"^3.2.0"},"dependencies":{"create-react-class":"^15.5.2","object-assign":"^3.0.0","prop-types":"^15.5.7","react-onclickoutside":"^6.5.0"},"pre-commit":["notify-pre-commit-hook","lint","test:all"],"gitHead":"94dde5590a472f9a671578ffd4607cd53a94b322","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@2.13.0","_npmVersion":"5.6.0","_nodeVersion":"9.5.0","_npmUser":{"name":"simeg","email":"s.egersand@gmail.com"},"dist":{"integrity":"sha512-0AE68dQX6HcqM0znSI8PD4QQiwX+Uvbokw9PUNUjDPpue6FgVBnKwBszEw1esuUItLJWp04oJUiF2MntyohEyg==","shasum":"a5121e83a5b7512b3cd78af5fadc17a7be3f1534","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.13.0.tgz","fileCount":15,"unpackedSize":542654,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDmQEeTojiZ09iwbbY/0D+sMAkzXYiV6GS2fnwfwP/vxAiB3fghZBLTxZIaRxjV1a4i+UFGr8LOBJESc//ysfAOPtw=="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"layneanderson","email":"layneand@gmail.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime_2.13.0_1518175166115_0.17612422729896005"},"_hasShrinkwrap":false},"2.14.0":{"name":"react-datetime","version":"2.14.0","description":"A lightweight but complete datetime picker React.js component","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","typings":"./DateTime.d.ts","files":["DateTime.js","DateTime.d.ts","src","css","dist"],"scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js test/ && echo 'Linting OK! ?'","notify-pre-commit-hook":"echo '### Starting pre-commit hook ?'","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"echo 'Running tests...' && npm run test:typings && npm run test && echo 'All tests passed! ?'","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":">=15","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^3.0.0","enzyme-adapter-react-15":"^1.0.5","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^3.2.0","moment":">=2.16.0","pre-commit":"^1.1.3","react":"^15.5.0","react-addons-test-utils":">=0.13","react-dom":"^15.5.0","react-test-renderer":"^15.5.0","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-dev-server":"^1.7.0","webpack-stream":"^3.2.0"},"dependencies":{"create-react-class":"^15.5.2","object-assign":"^3.0.0","prop-types":"^15.5.7","react-onclickoutside":"^6.5.0"},"pre-commit":["notify-pre-commit-hook","lint","test:all"],"gitHead":"12add8e864157a0593398fd0db943f040aea0d52","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@2.14.0","_npmVersion":"5.6.0","_nodeVersion":"9.5.0","_npmUser":{"name":"simeg","email":"s.egersand@gmail.com"},"dist":{"integrity":"sha512-BUWIzMLRGzWQSYyJf0mivLyDgw4KCTFYn8zW50UTl2qB3xd/BH/TgPzfgDvAScNbiXwWpXei/GCoc6nI2J3GgA==","shasum":"c7859c5b765275d7980f1cca27c03a727ff9ccef","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.14.0.tgz","fileCount":15,"unpackedSize":544563,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIG0QLkOUOBFXEnJOOX8KnFUR566bH70LyHiqcJDrGLBBAiBj7nhWa+e/rj/DpIqy/Tit/TWUkBOuoKhfzb8k2GwNig=="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"layneanderson","email":"layneand@gmail.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime_2.14.0_1518373757725_0.5538829649103543"},"_hasShrinkwrap":false},"2.15.0":{"name":"react-datetime","version":"2.15.0","description":"A lightweight but complete datetime picker React.js component","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","typings":"./DateTime.d.ts","files":["DateTime.js","DateTime.d.ts","src","css","dist"],"scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js test/ && echo 'Linting OK! ?'","notify-pre-commit-hook":"echo '### Starting pre-commit hook ?'","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"echo 'Running tests...' && npm run test:typings && npm run test && echo 'All tests passed! ?'","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":">=15","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^3.0.0","enzyme-adapter-react-15":"^1.0.5","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^3.2.0","moment":">=2.16.0","pre-commit":"^1.1.3","react":"^15.5.0","react-addons-test-utils":">=0.13","react-dom":"^15.5.0","react-test-renderer":"^15.5.0","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-dev-server":"^1.7.0","webpack-stream":"^3.2.0"},"dependencies":{"create-react-class":"^15.5.2","object-assign":"^3.0.0","prop-types":"^15.5.7","react-onclickoutside":"^6.5.0"},"pre-commit":["notify-pre-commit-hook","lint","test:all"],"bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@2.15.0","_npmVersion":"5.6.0","_nodeVersion":"8.11.1","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"dist":{"integrity":"sha512-RP5OqXVfrhdoFALJzMU8tKxRFaIZzJZqZEpf5oK7pvwG80a/bET/TdJ7jT7W9lyAf1nKNo6zyYkvHW3ZJ/ypvg==","shasum":"a8f7da6c58b6b45dbeea32d4e8485db17614e12c","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.15.0.tgz","fileCount":15,"unpackedSize":526447,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbVw14CRA9TVsSAnZWagAAs6QP/RM2jqaVf2cEZMPsaUVX\nmk2hjWVTa4mIHBJ36g1F3dqqRz+xm2uiwWflO3wVgr6KqGI2YQMTd9SIKA1p\nFII0Whcou/G3bGV+S1lO9u7jN23EENr380C03knvnSYXGO09+n6J4esOw3C0\n/Fs/5/TSdXe3aOE4/bSUxh/ZqC/O1TX4oHF4D/Qh6ePRm/Sy61eFQJpl03W8\nSiz2UKdMGpQmkJIRBNZ2PnSkSOzSh1Uf5MybWp3hHNOCuWmb9R1MTrn2z1na\n8IiY6Mq6i1/c/JpVIWc2dOle6VZkZ6hHlogNekwC1tBh6S6fLCpgizwcesnP\nn/LPtDCbRi9ykvyNYkhs1UONxcjojs6y+9BHYIWtr8ut6hBdwmFNfedhSERD\nQrLmXJKduO9Zw+FJLSjrEdCAxWjc9CL+Ld7aKiRt/eL8YwLzG2sP/XPlOIfB\nMhKNl/axZ7h0BlsWLjD/y72yfl4oE1GFnJ48ndZ1Pw54FmyjNFzPv1kfq0Or\nZlplOoPLrWdo1Xr2fT8fnj70dYOdDo6m+/Rox+Qp+z99J4mz1HJNii22jEWN\nMHpgprgUnrdNUArtQr9yTf9IGH07bMKWBPIvQF2yPhHj/JOWO3TaeitDedLR\nQvaGJJYT64X/BPl3Cd8QB6pVNp77iGhcjzrzpnS8mNpnWQwNU7rnCvWaCcFo\nAOqz\r\n=qT5j\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCiT+UKzkaZNXqwEqpaCTkTzIAQZvSXDM57qBxKfA8TjwIgFOCACY0YocLqIzFCsC9+Lp5uISsrdxCicWKOC+yyvj4="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"layneanderson","email":"layneand@gmail.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime_2.15.0_1532431736402_0.4936302919423359"},"_hasShrinkwrap":false},"2.16.0":{"name":"react-datetime","version":"2.16.0","description":"A lightweight but complete datetime picker React.js component","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","typings":"./DateTime.d.ts","scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js test/ && echo 'Linting OK! ?'","notify-pre-commit-hook":"echo '### Starting pre-commit hook ?'","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"echo 'Running tests...' && npm run test:typings && npm run test && echo 'All tests passed! ?'","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","moment-timezone":"^0.5.13","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":">=15","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^3.0.0","enzyme-adapter-react-15":"^1.0.5","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^3.2.0","moment":">=2.16.0","moment-timezone":"^0.5.13","pre-commit":"^1.1.3","react":"^15.5.0","react-addons-test-utils":">=0.13","react-dom":"^15.5.0","react-test-renderer":"^15.5.0","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-dev-server":"^1.7.0","webpack-stream":"^3.2.0"},"dependencies":{"create-react-class":"^15.5.2","object-assign":"^3.0.0","prop-types":"^15.5.7","react-onclickoutside":"^6.5.0"},"pre-commit":["notify-pre-commit-hook","lint","test:all"],"bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@2.16.0","_npmVersion":"5.7.1","_nodeVersion":"8.11.1","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"dist":{"integrity":"sha512-9loyehO/LKaln15uevEKysQNRhyqqfSyr5Fbv3TcLTFwX47R/dG72GQpvXCRw7v5WJ9xDpbOJy4MxFt76gITwQ==","shasum":"da02c68e1817b7ce66144e688090d111b4e9b6e6","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.16.0.tgz","fileCount":15,"unpackedSize":543181,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbyJEcCRA9TVsSAnZWagAAoPUQAKQcePvuOPu2Z+FOQTMg\n/yRcsEvEB6ErHOYhbeearOjv8ULsDaAjcQkKmcbKTfoAK9dfAj/Y+fJpPhlS\n90rf1/zgwk3j0VCG2zn5qDkkTWq2Vrh+ClDvDILFvd4pFoYmF8xCzoViaveH\nnZfCFSDJcGHXcU2E7plUS7b/+F7AHLyS1w1xkaURvNo2HNHSvwqk4/uuudQv\nvXwItJCC+7MRN9XGfkfHTg576+mSbPIL4hmcTLWsFcIjVJhmN84Jja9Gewjh\nk1RtHj4HnexeXwYICZHQT/7QdAoTRmgHycOgxIg3T9bxQ4Y4oYYyB/RODFt7\nmDRtzkpNpfQCxSjgJhWQQl4Mj7IP1X0yEwzXmnzOUr9BW42UuNh3JnN734b+\nDISP/HcMfuOdQxHz+Uovfdn9QWCUa0ObvFByw26oyjaCrWcINTI7GOT5nqwW\na152mdTnIZUq0md7IgJZBMPe7SXWRFRR4KOlpXLJ7HCCB8MxpZwCjeSq0ugz\ntiSu2EDktwLywyp6Y6Kh5MBune98X8e5iCpx01zAvPS41eqnsdywsIkSfKke\ngcDBezTP8q4b42lW0/Aq+hNymJQSGcOOXcb+Vn1alHudGtpuLW2iFdoAjAQN\nKG3E9EqiwCAoqPyY5h6217MUfDB9XTx3DL/sGboHZANElR0D7lqBvT/1GChj\nqVMc\r\n=6skM\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCZdogdB51MRu3Fg6jteEdKzrjzY7VYAcGCPHg2pBHbQQIhALl3wE1nfPCuN05stF1WPDLXZMZiFKZcHp006vv9Ih1g"}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"layneanderson","email":"layneand@gmail.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime_2.16.0_1539871004174_0.8256283796789143"},"_hasShrinkwrap":false},"2.16.1":{"name":"react-datetime","version":"2.16.1","description":"A lightweight but complete datetime picker React.js component","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","typings":"./DateTime.d.ts","scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js test/ && echo 'Linting OK! ?'","notify-pre-commit-hook":"echo '### Starting pre-commit hook ?'","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"echo 'Running tests...' && npm run test:typings && npm run test && echo 'All tests passed! ?'","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","moment-timezone":"^0.5.13","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":">=15","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^3.0.0","enzyme-adapter-react-15":"^1.0.5","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^3.2.0","moment":">=2.16.0","moment-timezone":"^0.5.13","pre-commit":"^1.1.3","react":"^15.5.0","react-addons-test-utils":">=0.13","react-dom":"^15.5.0","react-test-renderer":"^15.5.0","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-dev-server":"^1.7.0","webpack-stream":"^3.2.0"},"dependencies":{"create-react-class":"^15.5.2","object-assign":"^3.0.0","prop-types":"^15.5.7","react-onclickoutside":"^6.5.0"},"pre-commit":["notify-pre-commit-hook","lint","test:all"],"bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@2.16.1","_npmVersion":"5.7.1","_nodeVersion":"8.11.1","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"dist":{"integrity":"sha512-FqutodT4zQjS9qFq5lNO0oyEUIfEYfJQJNh2okPYsD8kZgIkG+iL/V/dyoNbCaNHUrMZXs30D+YEZ4u23J4/gQ==","shasum":"8b4e3947b4e560b468e3dc31ca997c65c9a4e8aa","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.16.1.tgz","fileCount":15,"unpackedSize":543329,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbyZeCCRA9TVsSAnZWagAArwMP/1v39W/g8v9hefB5/evH\nwD8tWVvu69D+rgy3T7l/FE0aFDixkgAitasKAI01+L2pw/A1gQBsQAtDPk/S\nKVadGm/0ISWgkSaQ7MjvccW2Gzvt5mGvzrTDka0Js+ZijFLqqj34Q5Lyi3qF\nx+vgz4S3SiqeVjs9VtXAK+zTI0ysobRGW5ToM290d3hf4Ouy/WbegrkEg4Fw\nfkx16Qbz53ZVHdNVq4jLcHM5G53DcT6DJ9U1Ny58naRPToCfZy4cu7VLJom9\nTCDtt3vswjHm3z1u61LfpRMbTeYVBRM8TOtutn+OZ8MX95j6j13Ae2Y0yYqq\nnFZdhE6jBZepnDsskowQzy687tyV8Z0FdjIfwTmNX++hkXTQK0m4CFoGiSXj\nQxJBrG5c6RCBXnURg/7DZRc3b1LmwhvksOV9L98iAZ4l3TSLf72TJtLbMs6S\nY1Rxtl1VFnWCk8Cx80Giife+7DTSFyyEvhO9Ug/yFoHRvF78jSNyNTsTSQXr\nAN85KZhheEtYHQ0flbhv+9W5Dc8xg9OoKMN2EZdzeIq3iHiq7qwNPfbahrv2\nRrfc5Zq2wggdg1eEdP18yIWgjzb+vZhFcyTIzgW6XOvjyY5eT7ATRxgIQtD5\nOtcWKUtjKc51Criv6Xz4iX/8rAgo4+dh86zkJ7/xs3Oq3bbYv3kmCl2VOKLF\n/g3H\r\n=r0vs\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCjd0DqBN3n+yfBk0VH9MciA6uCEjJ67sC6iObrPF2iMgIhAOpajP4JIdCifQoLFK9e1LCwxanS+HufyauOLf3c5BuB"}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"layneanderson","email":"layneand@gmail.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime_2.16.1_1539938176930_0.41187029923517615"},"_hasShrinkwrap":false},"2.16.2":{"name":"react-datetime","version":"2.16.2","description":"A lightweight but complete datetime picker React.js component","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","typings":"./DateTime.d.ts","scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js test/ && echo 'Linting OK! ?'","notify-pre-commit-hook":"echo '### Starting pre-commit hook ?'","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"echo 'Running tests...' && npm run test:typings && npm run test && echo 'All tests passed! ?'","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":">=15","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^3.0.0","enzyme-adapter-react-15":"^1.0.5","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^3.2.0","moment":">=2.16.0","moment-timezone":"^0.5.13","pre-commit":"^1.1.3","react":"^15.5.0","react-addons-test-utils":">=0.13","react-dom":"^15.5.0","react-test-renderer":"^15.5.0","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-dev-server":"^1.7.0","webpack-stream":"^3.2.0"},"dependencies":{"create-react-class":"^15.5.2","object-assign":"^3.0.0","prop-types":"^15.5.7","react-onclickoutside":"^6.5.0"},"pre-commit":["notify-pre-commit-hook","lint","test:all"],"bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@2.16.2","_npmVersion":"5.7.1","_nodeVersion":"8.11.1","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"dist":{"integrity":"sha512-QjQIixhmsbAQZSe2nlliTWAqdmckov3+rEL/s/uxw9LcM/V7vaFX0DIVRHksi1IsIqUG2AgM/4EX+aMZwXMMGg==","shasum":"d5d41fe3f6f3fa8fa1b068f2fae75cec25e1bb39","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.16.2.tgz","fileCount":15,"unpackedSize":544006,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbzYb6CRA9TVsSAnZWagAAUqIP/0UEAsMzecch5pXgazDp\n92WaDtL3Pi+czOuumuVOkd6xk4tFFw+xs+srOA4J/Lpk5c99ZV4k8DpqNok7\n/MLJ3eg647S8mH5S+dY58TSGVudCZzBBBe+PYKVVV1+r+MxSTE5czF4suvzZ\nGz64saGkI4CjrO5Pa84gPx4WGEcPXUhdxmeov2woFdB/6dpmZ4F3OBx2ScVO\naTf1hDvv3Sp2mtjg55ZkkOR8UZry1QOcb0OYrhm8RtGjm1XKd8ntliuvmqLk\n0ZIg3X4guXeaGlpHAdVbFLku4xzdlIKSJav6lne+P1SLo7CRLiSo7GUytK2r\nkNanj0NkOPGJbquMt081JU5VQdcW75JZM5XxrRXrRKEIRP7j3ovd3XLY4TTX\nS++PDYOiL55Po6OAk9kAbQr7RtNNtDAWE6JIDUr9II7PAsPmiNmhFhDnKioS\nVbD3Xk9zCC7gjzU+CdpRLbt84aV30XL0pekvmMm/vDgGBMWOaUyrL2WeDTzF\nqfwtwDFZ099bBjEpX1yJqZRkrXf9q1gWBeu1vqRzeyXlnO5ZAAkjGh56zv7y\n/UBWd1Qwbm4TSGBNJSvcnHnhXFW3s8TbrzpIJG1yoQWtewe1nAxKo0WLtv3A\nIQ6rihkcdpHGXx+8zUbxO6W2fcffhraO8fLBdKyExxV1w4KYFqTE64mxfzVh\nbAHe\r\n=IlrF\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHNnou9ccK2Ll6y/QednIQsxObIGg6puUX8Mk80p1oVvAiEAgfHrRtuhSTFtS6S7+sNW0Y5sYmJTe/tUWV6YIbveYnc="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"layneanderson","email":"layneand@gmail.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime_2.16.2_1540196089624_0.4937826254857658"},"_hasShrinkwrap":false},"2.16.3":{"name":"react-datetime","version":"2.16.3","description":"A lightweight but complete datetime picker React.js component","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","typings":"./DateTime.d.ts","scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js test/ && echo 'Linting OK! ?'","notify-pre-commit-hook":"echo '### Starting pre-commit hook ?'","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"echo 'Running tests...' && npm run test:typings && npm run test && echo 'All tests passed! ?'","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":">=15","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^3.0.0","enzyme-adapter-react-15":"^1.0.5","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^3.2.0","moment":">=2.16.0","moment-timezone":"^0.5.13","pre-commit":"^1.1.3","react":"^15.5.0","react-addons-test-utils":">=0.13","react-dom":"^15.5.0","react-test-renderer":"^15.5.0","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-dev-server":"^1.7.0","webpack-stream":"^3.2.0"},"dependencies":{"create-react-class":"^15.5.2","object-assign":"^3.0.0","prop-types":"^15.5.7","react-onclickoutside":"^6.5.0"},"pre-commit":["notify-pre-commit-hook","lint","test:all"],"gitHead":"ab70aefb66233022a13e826605d7efb947ccab4f","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@2.16.3","_npmVersion":"5.7.1","_nodeVersion":"8.11.1","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"dist":{"integrity":"sha512-amWfb5iGEiyqjLmqCLlPpu2oN415jK8wX1qoTq7qn6EYiU7qQgbNHglww014PT4O/3G5eo/3kbJu/M/IxxTyGw==","shasum":"7f9ac7d4014a939c11c761d0c22d1fb506cb505e","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-2.16.3.tgz","fileCount":15,"unpackedSize":544006,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcBT2lCRA9TVsSAnZWagAA8mUP/2WiNuR+H1Cwa7MSs6XI\n1LS9aBVasOTRvky//YyJ1kVWNTRJjKj5s8FfNihEEa21aDz0dnygQPeDn1Xj\n7Aj8SNZHMhP1ZCvHRhg7mqUxcYD4zWookweldiHa2jsgdGFFWS8NtBqvx31R\nDzwiFkHqcq+gcufJVjZTzVLlwHgFaWQtUMm67rHx7NbR4qZwr8bJD+aS7xDa\nrNgh0Y8r8umnXIgvWC4c8m2pepk+CSFFnFIB4QQUGZD+hvl9nUYaXN9i7zgD\nK7jKr2jGR+1/Uyu3tFCGEqkaXtpIEigm+d2NIQLOyRrlcdMCLCgTCsALm4W6\nM5cLr7FDWKPTNAa/9Up1kh4HYB8CWMZEP/hKosg1x7iyE6rgYWvFdwoSwsGo\nyAjN/4byHg7+Y6JQdOfqDjv1T2Y8mb8+BnaGAoINoKDB90UIlustvCZ4B5RX\nNdMYAIdehJ7Aw4/EclbPwLnPw2GXFQWjZ5NFYlsi22/Z3zFuscB/mpJ6rRZh\ncHtKDUN7YyTMqO5ifkiF+b/cCIKmhDTLEAnMLATV+pNBXx1r0ixyRA6mqv5g\nXwPBpW5ZLahLjz5nb4of6SuHwsMrpg8Dey0NVz6EsjyCyxdgVffcCnQkEiEf\nKcWaaMxbZdecTwtPKw7gumJUVoHO1LgWJQ+EO+lehrY/hOvPkmlLTZSOJnxd\npWGt\r\n=0YSo\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFjGUliaGYD7b25h/3GfyOQA0e2oPu1+o2XWugVJ1Ws7AiAHhVAv1QX8C1FkT0cmZPUw1ptzOOMX4GCeuxTRMv3FjQ=="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"layneanderson","email":"layneand@gmail.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime_2.16.3_1543847329678_0.0629782741311451"},"_hasShrinkwrap":false},"3.0.0-alpha.2":{"name":"react-datetime","version":"3.0.0-alpha.2","description":"A lightweight but complete datetime picker React.js component","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","typings":"./DateTime.d.ts","scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js test/ && echo 'Linting OK! ?'","notify-pre-commit-hook":"echo '### Starting pre-commit hook ?'","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"echo 'Running tests...' && npm run test:typings && npm run test && echo 'All tests passed! ?'","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":">=15","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^3.0.0","enzyme-adapter-react-15":"^1.0.5","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^3.2.0","moment":">=2.16.0","moment-timezone":"^0.5.13","pre-commit":"^1.1.3","react":"^15.5.0","react-addons-test-utils":">=0.13","react-dom":"^15.5.0","react-test-renderer":"^15.5.0","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-dev-server":"^1.7.0","webpack-stream":"^3.2.0"},"dependencies":{"create-react-class":"^15.6.3","object-assign":"^3.0.0","prop-types":"^15.5.7","react-onclickoutside":"^6.5.0"},"pre-commit":["notify-pre-commit-hook","lint","test:all"],"readme":"# react-datetime\n\n[![Build Status](https://secure.travis-ci.org/YouCanBookMe/react-datetime.svg)](https://travis-ci.org/YouCanBookMe/react-datetime)\n[![npm version](https://badge.fury.io/js/react-datetime.svg)](http://badge.fury.io/js/react-datetime)\n\nA date and time picker in the same React.js component. It can be used as a datepicker, timepicker or both at the same time. It is **highly customizable** and it even allows to edit date's milliseconds.\n\nThis project started as a fork of https://github.com/quri/react-bootstrap-datetimepicker but the code and the API has changed a lot.\n\n## Installation\n\nInstall using npm:\n```sh\nnpm install --save react-datetime\n```\n\nInstall using yarn:\n```sh\nyarn add react-datetime\n```\n\n## Usage\n\n[React.js](http://facebook.github.io/react/) and [Moment.js](http://momentjs.com/) are peer dependencies for react-datetime (as well as [Moment.js timezones](https://momentjs.com/timezone/) if you want to use the `displayTimeZone` prop). These dependencies are not installed along with react-datetime automatically, but your project needs to have them installed in order to make the datepicker work. You can then use the datepicker like in the example below.\n\n\n```js\nrequire('react-datetime');\n\n...\n\nrender: function() {\n    return <Datetime />;\n}\n```\n[See this example working](http://codepen.io/simeg/pen/mEmQmP).\n\n**Don't forget to add the [CSS stylesheet](https://github.com/YouCanBookMe/react-datetime/blob/master/css/react-datetime.css) to make it work out of the box.**\n\n## API\n\n| Name         | Type    | Default | Description |\n| ------------ | ------- | ------- | ----------- |\n| **value** | `Date` | `new Date()` | Represents the selected date by the component, in order to use it as a [controlled component](https://facebook.github.io/react/docs/forms.html#controlled-components). This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. |\n| **defaultValue** | `Date` | `new Date()` | Represents the selected date for the component to use it as a [uncontrolled component](https://facebook.github.io/react/docs/uncontrolled-components.html). This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. |\n| **viewDate** | `Date` | `new Date()` | Represents the month which is viewed on opening the calendar when there is no selected date. This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. |\n| **dateFormat**   | `boolean` or `string`  | `true` | Defines the format for the date. It accepts any [Moment.js date format](http://momentjs.com/docs/#/displaying/format/) (not in localized format). If `true` the date will be displayed using the defaults for the current locale. If `false` the datepicker is disabled and the component can be used as timepicker, see [available units docs](#specify-available-units). |\n| **timeFormat**   | `boolean` or `string`  | `true` | Defines the format for the time. It accepts any [Moment.js time format](http://momentjs.com/docs/#/displaying/format/) (not in localized format). If `true` the time will be displayed using the defaults for the current locale. If `false` the timepicker is disabled and the component can be used as datepicker, see [available units docs](#specify-available-units). |\n| **input** | `boolean` | `true` | Whether to show an input field to edit the date manually. |\n| **open** | `boolean` | `null` | Whether to open or close the picker. If not set react-datetime will open the datepicker on input focus and close it on click outside. |\n| **locale** | `string` | `null` | Manually set the locale for the react-datetime instance. Moment.js locale needs to be loaded to be used, see [i18n docs](#i18n).\n| **utc** | `boolean` | `false` | When true, input time values will be interpreted as UTC (Zulu time) by Moment.js. Otherwise they will default to the user's local timezone.\n| **displayTimeZone** | `string` | `null` | **Needs [moment's timezone](https://momentjs.com/timezone/) available in your project.** When specified, input time values will be displayed in the given time zone. Otherwise they will default to the user's local timezone (unless `utc` specified).\n| **onChange** | `function` | empty function | Callback trigger when the date changes. The callback receives the selected `moment` object as only parameter, if the date in the input is valid. If the date in the input is not valid, the callback receives the value of the input (a string). |\n| **onFocus** | `function` | empty function | Callback trigger for when the user opens the datepicker. The callback receives an event of type SyntheticEvent. |\n| **onBlur** | `function` | empty function | Callback trigger for when the user clicks outside of the input, simulating a regular onBlur. The callback receives the selected `moment` object as only parameter, if the date in the input is valid. If the date in the input is not valid, the callback returned. |\n| **onViewModeChange** | `function` | empty function | Callback trigger when the view mode changes. The callback receives the selected view mode string (`years`, `months`, `days` or `time`) as only parameter.|\n| **onNavigateBack** | `function` | empty function | Callback trigger when the user navigates to the previous month, year or decade. The callback receives the amount and type ('month', 'year') as parameters. |\n| **onNavigateForward** | `function` | empty function | Callback trigger when the user navigates to the next month, year or decade. The callback receives the amount and type ('month', 'year') as parameters. |\n| **viewMode** | `string` or `number` | `'days'` | The default view to display when the picker is shown (`'years'`, `'months'`, `'days'`, `'time'`). |\n| **className** | `string` or `string array` | `''` | Extra class name for the outermost markup element. |\n| **inputProps** | `object` | `undefined` | Defines additional attributes for the input element of the component. For example: `onClick`, `placeholder`, `disabled`, `required`, `name` and `className` (`className` *sets* the class attribute for the input element). See [Customize the Input Appearance](#customize-the-input-appearance). |\n| **isValidDate** | `function` | `() => true` | Define the dates that can be selected. The function receives `(currentDate, selectedDate)` and shall return a `true` or `false` whether the `currentDate` is valid or not. See [selectable dates](#selectable-dates).|\n| **renderInput** | `function` | `undefined` | Replace the rendering of the input element. The function has the following arguments: the default calculated `props` for the input, `openCalendar` (a function which opens the calendar) and `closeCalendar` (a function which closes the calendar). Must return a React component or `null`. See [Customize the Input Appearance](#customize-the-input-appearance). |\n| **renderDay** | `function` | `DOM.td(day)` | Customize the way that the days are shown in the daypicker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderMonth** | `function` | `DOM.td(month)` | Customize the way that the months are shown in the monthpicker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, the `month` and the `year` to be shown, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderYear** | `function` | `DOM.td(year)` | Customize the way that the years are shown in the year picker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, the `year` to be shown, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **strictParsing** | `boolean` | `true` | Whether to use Moment.js's [strict parsing](http://momentjs.com/docs/#/parsing/string-format/) when parsing input.\n| **closeOnSelect** | `boolean` | `false` | When `true`, once the day has been selected, the datepicker will be automatically closed.\n| **closeOnTab** | `boolean` | `true` | When `true` and the input is focused, pressing the `tab` key will close the datepicker.\n| **timeConstraints** | `object` | `null` | Add some constraints to the timepicker. It accepts an `object` with the format `{ hours: { min: 9, max: 15, step: 2 }}`, this example means the hours can't be lower than `9` and higher than `15`, and it will change adding or subtracting `2` hours everytime the buttons are clicked. The constraints can be added to the `hours`, `minutes`, `seconds` and `milliseconds`.\n| **disableCloseOnClickOutside** | `boolean` | `false` | When `true`, keep the datepicker open when click event is triggered outside of component. When `false`, close it.\n\n## i18n\nDifferent language and date formats are supported by react-datetime. React uses [Moment.js](http://momentjs.com/) to format the dates, and the easiest way of changing the language of the calendar is [changing the Moment.js locale](http://momentjs.com/docs/#/i18n/changing-locale/).\n\n```js\nvar moment = require('moment');\nrequire('moment/locale/fr');\n// Now react-datetime will be in french\n```\n\nIf there are multiple locales loaded, you can use the prop `locale` to define what language shall be used by the instance.\n```js\n<Datetime locale=\"fr-ca\" />\n<Datetime locale=\"de\" />\n```\n[Here you can see the i18n example working](http://codepen.io/simeg/pen/yVVjdJ).\n\n## Customize the Input Appearance\nIt is possible to customize the way that the input is displayed. The simplest is to supply `inputProps` which get assigned to the default `<input />` element within the component.\n\n```js\n<Datetime inputProps={{ placeholder: 'N/A', disabled: true }}>\n```\n\nAlternatively, if you need to render different content than an `<input />` element, you may supply a `renderInput` function which is called instead.\n\n```js\nvar MyDTPicker = React.createClass({\n    render: function(){\n        return <Datetime renderInput={ this.renderInput } />;\n    },\n    renderInput: function( props, openCalendar, closeCalendar ){\n        function clear(){\n            props.onChange({target: {value: ''}});\n        }\n        return (\n            <div>\n                <input {...props} />\n                <button onClick={openCalendar}>open calendar</button>\n                <button onClick={closeCalendar}>close calendar</button>\n                <button onClick={clear}>clear</button>\n            </div>\n        );\n    },\n});\n```\n\n## Customize the Datepicker Appearance\nIt is possible to customize the way that the datepicker display the days, months and years in the calendar. To adapt the calendar for every need it is possible to use the props `renderDay(props, currentDate, selectedDate)`, `renderMonth(props, month, year, selectedDate)` and `renderYear(props, year, selectedDate)` to customize the output of each rendering method.\n\n```js\nvar MyDTPicker = React.createClass({\n    render: function(){\n        return <Datetime\n            renderDay={ this.renderDay }\n            renderMonth={ this.renderMonth }\n            renderYear={ this.renderYear }\n        />;\n    },\n    renderDay: function( props, currentDate, selectedDate ){\n        return <td {...props}>{ '0' + currentDate.date() }</td>;\n    },\n    renderMonth: function( props, month, year, selectedDate ){\n        return <td {...props}>{ month }</td>;\n    },\n    renderYear: function( props, year, selectedDate ){\n        return <td {...props}>{ year % 100 }</td>;\n    }\n});\n```\n[You can see a customized calendar here.](http://codepen.io/simeg/pen/YppLmO)\n\n#### Method Parameters\n* `props` is the object that the datepicker has calculated for this object. It is convenient to use this object as the `props` for your custom component, since it knows how to handle the click event and its `className` attribute is used by the default styles.\n* `selectedDate` and `currentDate` are [moment objects](http://momentjs.com) and can be used to change the output depending on the selected date, or the date for the current day.\n* `month` and `year` are the numeric representation of the current month and year to be displayed. Notice that the possible `month` values range from `0` to `11`.\n\n## Specify Available Units\nYou can filter out what you want the user to be able to pick by using `dateFormat` and `timeFormat`, e.g. to create a timepicker, yearpicker etc.\n\nIn this example the component is being used as a *timepicker* and can *only be used for selecting a time*.\n```js\n<Datetime dateFormat={false} />\n```\n[Working example of a timepicker here.](http://codepen.io/simeg/pen/mRQBrp)\n\nIn this example you can *only select a year and month*.\n```js\n<Datetime dateFormat=\"YYYY-MM\" timeFormat={false} />\n```\n[Working example of only selecting year and month here.](http://codepen.io/simeg/pen/apQLdd)\n\n## Selectable Dates\nIt is possible to disable dates in the calendar if the user are not allowed to select them, e.g. dates in the past. This is done using the prop `isValidDate`, which admits a function in the form `function(currentDate, selectedDate)` where both arguments are [moment objects](http://momentjs.com). The function shall return `true` for selectable dates, and `false` for disabled ones.\n\nIn the example below are *all dates before today* disabled.\n\n```js\n// Let's use the static moment reference in the Datetime component\nvar yesterday = Datetime.moment().subtract( 1, 'day' );\nvar valid = function( current ){\n    return current.isAfter( yesterday );\n};\n<Datetime isValidDate={ valid } />\n```\n[Working example of disabled days here.](http://codepen.io/simeg/pen/XNNYJg)\n\nIt's also possible to disable *the weekends*, as shown in the example below.\n```js\nvar valid = function( current ){\n    return current.day() !== 0 && current.day() !== 6;\n};\n<Datetime isValidDate={ valid } />\n```\n[Working example of disabled weekends here.](http://codepen.io/simeg/pen/jVVKWq)\n\n## Usage with TypeScript\n\nThis project includes typings for TypeScript versions 1.8 and 2.0. Additional typings are not\nrequired.\n\nTypings for 1.8 are found in `react-datetime.d.ts` and typings for 2.0 are found in `typings/index.d.ts`.\n\n```js\nimport * as Datetime from 'react-datetime';\n\nclass MyDTPicker extends React.Component<MyDTPickerProps, MyDTPickerState> {\n    render() JSX.Element {\n        return <Datetime />;\n    }\n}\n```\n\n## Contributions\nFor information about how to contribute, see the [CONTRIBUTING](.github/CONTRIBUTING.md) file.\n\n## Development\n```sh\nnpm run dev\n```\nThis will start a local `webpack-dev-server` based on `example/example.js` where most development can be done.\n\nIf you want to develop using the component inside a React application, we recommend that you use [react-datetime-playground](https://github.com/arqex/react-datetime-playground).\n\n### [Changelog](CHANGELOG.md)\n\n### [MIT Licensed](LICENSE.md)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@3.0.0-alpha.2","_npmVersion":"5.7.1","_nodeVersion":"8.11.1","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"dist":{"integrity":"sha512-FCXsjD28CiQSfJ6BurU4+TCPxD1jd0F2h7/t0uCGRKdvWT8XwBOxkVDa80NDG0KseIoY/ojcYslTrcyiMH5iHA==","shasum":"cc07189c92ebbba8dc1458206b8b68e531ffa771","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-3.0.0-alpha.2.tgz","fileCount":15,"unpackedSize":528089,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcBT95CRA9TVsSAnZWagAAaRAP/jRwP15JaNZ/Fcfpeppm\nP3UodYKSHSZbR80w7l9K2MBHZjrY3ULLVnJ+p7OasOz8NDiyC4CrE8PZsN5Z\nHg8eyU+U/U6Q9b8L7CuAyeyfI3xwWpONZ6d9YGA/4poGnToSiJh22lqNnUav\n9CGAAZG9ouoA9rp3rSDSEBYuESv6dkrE0/gIt/qr20oDrMluAIWaTc1nW2cd\nKjqJzdjO6f17f/jWNPcrSl3uuq8Ep48beLl//nswvvx/3NOtXZ7psj5NAx/u\nOzARHzaZx2txpzlgrttrHQpNqTaodL5tDzNYVqqqugI8Z7ZrFd9RR57QuWmA\ncwQLZCSKgspNVVYnTItBsSp8xIPk4Wo8qz7EvTKCXjXookQIScWthnUGOoNb\nyyOqncLFQPmUsQRwk8B1y/VxWJ3cY7Xzqt+4kFp1XqCnBd0o9QTgPC8hESAh\n/wi8M74jBGMybZ/pujJRSvXQA+z5uncY4jFTRhihwfFkNdstDGKJdtgf7Ncj\nA/VjZ4AIcZ5WRifyFEFi4cDKsTCfEo7Ko3ZzPoxHlKQR2bYxBOhB7fUNXWL2\nBcdtlHxZ5NZPuiuZg+8iUKmWqz/+GJsiKdmgG/bVtAWrzT931bOLPJddoyiR\nrQJMTvnuUvthFjqtqrK2bdVMP+hDcGukzc5xlLa1pBSgZTsfh7WNetfDSAox\nRYmM\r\n=vca8\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIBC8Iy2kQJ2z/j9bY0E0vKWkOJE45YQMO3S4ofHdBhyyAiAyaMQ1SD5KQMzy2Tuu+kiF8n6MprreSiJVuIDbhcnbkQ=="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"layneanderson","email":"layneand@gmail.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime_3.0.0-alpha.2_1543847800575_0.9616169912011971"},"_hasShrinkwrap":false},"3.0.0-alpha.3":{"name":"react-datetime","version":"3.0.0-alpha.3","description":"A lightweight but complete datetime picker React.js component","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","typings":"./DateTime.d.ts","scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js test/ && echo 'Linting OK! ?'","notify-pre-commit-hook":"echo '### Starting pre-commit hook ?'","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"echo 'Running tests...' && npm run test:typings && npm run test && echo 'All tests passed! ?'","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":">=15","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^3.0.0","enzyme-adapter-react-15":"^1.0.5","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^3.2.0","moment":">=2.16.0","moment-timezone":"^0.5.13","pre-commit":"^1.1.3","react":"^15.5.0","react-addons-test-utils":">=0.13","react-dom":"^15.5.0","react-test-renderer":"^15.5.0","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-dev-server":"^1.7.0","webpack-stream":"^3.2.0"},"dependencies":{"create-react-class":"^15.6.3","object-assign":"^3.0.0","prop-types":"^15.5.7","react-onclickoutside":"^6.5.0"},"pre-commit":["notify-pre-commit-hook","lint","test:all"],"readme":"# react-datetime\n\n[![Build Status](https://secure.travis-ci.org/YouCanBookMe/react-datetime.svg)](https://travis-ci.org/YouCanBookMe/react-datetime)\n[![npm version](https://badge.fury.io/js/react-datetime.svg)](http://badge.fury.io/js/react-datetime)\n\nA date and time picker in the same React.js component. It can be used as a datepicker, timepicker or both at the same time. It is **highly customizable** and it even allows to edit date's milliseconds.\n\nThis project started as a fork of https://github.com/quri/react-bootstrap-datetimepicker but the code and the API has changed a lot.\n\n## Installation\n\nInstall using npm:\n```sh\nnpm install --save react-datetime\n```\n\nInstall using yarn:\n```sh\nyarn add react-datetime\n```\n\n## Usage\n\n[React.js](http://facebook.github.io/react/) and [Moment.js](http://momentjs.com/) are peer dependencies for react-datetime (as well as [Moment.js timezones](https://momentjs.com/timezone/) if you want to use the `displayTimeZone` prop). These dependencies are not installed along with react-datetime automatically, but your project needs to have them installed in order to make the datepicker work. You can then use the datepicker like in the example below.\n\n\n```js\nrequire('react-datetime');\n\n...\n\nrender: function() {\n    return <Datetime />;\n}\n```\n[See this example working](http://codepen.io/simeg/pen/mEmQmP).\n\n**Don't forget to add the [CSS stylesheet](https://github.com/YouCanBookMe/react-datetime/blob/master/css/react-datetime.css) to make it work out of the box.**\n\n## API\n\n| Name         | Type    | Default | Description |\n| ------------ | ------- | ------- | ----------- |\n| **value** | `Date` | `new Date()` | Represents the selected date by the component, in order to use it as a [controlled component](https://facebook.github.io/react/docs/forms.html#controlled-components). This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. |\n| **initialValue** | `Date` | `new Date()` | Represents the selected date for the component to use it as a [uncontrolled component](https://facebook.github.io/react/docs/uncontrolled-components.html). This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. If you need to set the selected date programmatically after the picker is initialized, please use the `value` prop instead. |\n| **initialViewDate** | `Date` | `new Date()` | Define the month/year/decade/time which is viewed on opening the calendar. This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. |\n| **initialViewMode** | `string` or `number` | `'days'` | The default view to display when the picker is shown for the first time. (`'years'`, `'months'`, `'days'`, `'time'`) |\n| **dateFormat**   | `boolean` or `string`  | `true` | Defines the format for the date. It accepts any [Moment.js date format](http://momentjs.com/docs/#/displaying/format/) (not in localized format). If `true` the date will be displayed using the defaults for the current locale. If `false` the datepicker is disabled and the component can be used as timepicker, see [available units docs](#specify-available-units). |\n| **timeFormat**   | `boolean` or `string`  | `true` | Defines the format for the time. It accepts any [Moment.js time format](http://momentjs.com/docs/#/displaying/format/) (not in localized format). If `true` the time will be displayed using the defaults for the current locale. If `false` the timepicker is disabled and the component can be used as datepicker, see [available units docs](#specify-available-units). |\n| **input** | `boolean` | `true` | Whether to show an input field to edit the date manually. |\n| **open** | `boolean` | `null` | Whether to open or close the picker. If not set react-datetime will open the datepicker on input focus and close it on click outside. |\n| **locale** | `string` | `null` | Manually set the locale for the react-datetime instance. Moment.js locale needs to be loaded to be used, see [i18n docs](#i18n).\n| **utc** | `boolean` | `false` | When true, input time values will be interpreted as UTC (Zulu time) by Moment.js. Otherwise they will default to the user's local timezone.\n| **displayTimeZone** | `string` | `null` | **Needs [moment's timezone](https://momentjs.com/timezone/) available in your project.** When specified, input time values will be displayed in the given time zone. Otherwise they will default to the user's local timezone (unless `utc` specified).\n| **onChange** | `function` | empty function | Callback trigger when the date changes. The callback receives the selected `moment` object as only parameter, if the date in the input is valid. If the date in the input is not valid, the callback receives the value of the input (a string). |\n| **onFocus** | `function` | empty function | Callback trigger for when the user opens the datepicker. The callback receives an event of type SyntheticEvent. |\n| **onBlur** | `function` | empty function | Callback trigger for when the user clicks outside of the input, simulating a regular onBlur. The callback receives the selected `moment` object as only parameter, if the date in the input is valid. If the date in the input is not valid, the callback returned. |\n| **onViewModeChange** | `function` | empty function | Callback trigger when the view mode changes. The callback receives the selected view mode string (`years`, `months`, `days` or `time`) as only parameter.|\n| **onNavigateBack** | `function` | empty function | Callback trigger when the user navigates to the previous month, year or decade. The callback receives the amount and type ('month', 'year') as parameters. |\n| **onNavigateForward** | `function` | empty function | Callback trigger when the user navigates to the next month, year or decade. The callback receives the amount and type ('month', 'year') as parameters. |\n| **className** | `string` or `string array` | `''` | Extra class name for the outermost markup element. |\n| **inputProps** | `object` | `undefined` | Defines additional attributes for the input element of the component. For example: `onClick`, `placeholder`, `disabled`, `required`, `name` and `className` (`className` *sets* the class attribute for the input element). See [Customize the Input Appearance](#customize-the-input-appearance). |\n| **isValidDate** | `function` | `() => true` | Define the dates that can be selected. The function receives `(currentDate, selectedDate)` and shall return a `true` or `false` whether the `currentDate` is valid or not. See [selectable dates](#selectable-dates).|\n| **renderInput** | `function` | `undefined` | Replace the rendering of the input element. The function has the following arguments: the default calculated `props` for the input, `openCalendar` (a function which opens the calendar) and `closeCalendar` (a function which closes the calendar). Must return a React component or `null`. See [Customize the Input Appearance](#customize-the-input-appearance). |\n| **renderDay** | `function` | `DOM.td(day)` | Customize the way that the days are shown in the daypicker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderMonth** | `function` | `DOM.td(month)` | Customize the way that the months are shown in the monthpicker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, the `month` and the `year` to be shown, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderYear** | `function` | `DOM.td(year)` | Customize the way that the years are shown in the year picker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, the `year` to be shown, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **strictParsing** | `boolean` | `true` | Whether to use Moment.js's [strict parsing](http://momentjs.com/docs/#/parsing/string-format/) when parsing input.\n| **closeOnSelect** | `boolean` | `false` | When `true`, once the day has been selected, the datepicker will be automatically closed.\n| **closeOnTab** | `boolean` | `true` | When `true` and the input is focused, pressing the `tab` key will close the datepicker.\n| **timeConstraints** | `object` | `null` | Add some constraints to the timepicker. It accepts an `object` with the format `{ hours: { min: 9, max: 15, step: 2 }}`, this example means the hours can't be lower than `9` and higher than `15`, and it will change adding or subtracting `2` hours everytime the buttons are clicked. The constraints can be added to the `hours`, `minutes`, `seconds` and `milliseconds`.\n| **closeOnClickOutside** | `boolean` | `false` | When `true`, keep the datepicker open when click event is triggered outside of component. When `false`, close it.\n\n## i18n\nDifferent language and date formats are supported by react-datetime. React uses [Moment.js](http://momentjs.com/) to format the dates, and the easiest way of changing the language of the calendar is [changing the Moment.js locale](http://momentjs.com/docs/#/i18n/changing-locale/).\n\n```js\nvar moment = require('moment');\nrequire('moment/locale/fr');\n// Now react-datetime will be in french\n```\n\nIf there are multiple locales loaded, you can use the prop `locale` to define what language shall be used by the instance.\n```js\n<Datetime locale=\"fr-ca\" />\n<Datetime locale=\"de\" />\n```\n[Here you can see the i18n example working](http://codepen.io/simeg/pen/yVVjdJ).\n\n## Customize the Input Appearance\nIt is possible to customize the way that the input is displayed. The simplest is to supply `inputProps` which get assigned to the default `<input />` element within the component.\n\n```js\n<Datetime inputProps={{ placeholder: 'N/A', disabled: true }}>\n```\n\nAlternatively, if you need to render different content than an `<input />` element, you may supply a `renderInput` function which is called instead.\n\n```js\nvar MyDTPicker = React.createClass({\n    render: function(){\n        return <Datetime renderInput={ this.renderInput } />;\n    },\n    renderInput: function( props, openCalendar, closeCalendar ){\n        function clear(){\n            props.onChange({target: {value: ''}});\n        }\n        return (\n            <div>\n                <input {...props} />\n                <button onClick={openCalendar}>open calendar</button>\n                <button onClick={closeCalendar}>close calendar</button>\n                <button onClick={clear}>clear</button>\n            </div>\n        );\n    },\n});\n```\n\n## Customize the Datepicker Appearance\nIt is possible to customize the way that the datepicker display the days, months and years in the calendar. To adapt the calendar for every need it is possible to use the props `renderDay(props, currentDate, selectedDate)`, `renderMonth(props, month, year, selectedDate)` and `renderYear(props, year, selectedDate)` to customize the output of each rendering method.\n\n```js\nvar MyDTPicker = React.createClass({\n    render: function(){\n        return <Datetime\n            renderDay={ this.renderDay }\n            renderMonth={ this.renderMonth }\n            renderYear={ this.renderYear }\n        />;\n    },\n    renderDay: function( props, currentDate, selectedDate ){\n        return <td {...props}>{ '0' + currentDate.date() }</td>;\n    },\n    renderMonth: function( props, month, year, selectedDate ){\n        return <td {...props}>{ month }</td>;\n    },\n    renderYear: function( props, year, selectedDate ){\n        return <td {...props}>{ year % 100 }</td>;\n    }\n});\n```\n[You can see a customized calendar here.](http://codepen.io/simeg/pen/YppLmO)\n\n#### Method Parameters\n* `props` is the object that the datepicker has calculated for this object. It is convenient to use this object as the `props` for your custom component, since it knows how to handle the click event and its `className` attribute is used by the default styles.\n* `selectedDate` and `currentDate` are [moment objects](http://momentjs.com) and can be used to change the output depending on the selected date, or the date for the current day.\n* `month` and `year` are the numeric representation of the current month and year to be displayed. Notice that the possible `month` values range from `0` to `11`.\n\n## Specify Available Units\nYou can filter out what you want the user to be able to pick by using `dateFormat` and `timeFormat`, e.g. to create a timepicker, yearpicker etc.\n\nIn this example the component is being used as a *timepicker* and can *only be used for selecting a time*.\n```js\n<Datetime dateFormat={false} />\n```\n[Working example of a timepicker here.](http://codepen.io/simeg/pen/mRQBrp)\n\nIn this example you can *only select a year and month*.\n```js\n<Datetime dateFormat=\"YYYY-MM\" timeFormat={false} />\n```\n[Working example of only selecting year and month here.](http://codepen.io/simeg/pen/apQLdd)\n\n## Selectable Dates\nIt is possible to disable dates in the calendar if the user are not allowed to select them, e.g. dates in the past. This is done using the prop `isValidDate`, which admits a function in the form `function(currentDate, selectedDate)` where both arguments are [moment objects](http://momentjs.com). The function shall return `true` for selectable dates, and `false` for disabled ones.\n\nIn the example below are *all dates before today* disabled.\n\n```js\n// Let's use the static moment reference in the Datetime component\nvar yesterday = Datetime.moment().subtract( 1, 'day' );\nvar valid = function( current ){\n    return current.isAfter( yesterday );\n};\n<Datetime isValidDate={ valid } />\n```\n[Working example of disabled days here.](http://codepen.io/simeg/pen/XNNYJg)\n\nIt's also possible to disable *the weekends*, as shown in the example below.\n```js\nvar valid = function( current ){\n    return current.day() !== 0 && current.day() !== 6;\n};\n<Datetime isValidDate={ valid } />\n```\n[Working example of disabled weekends here.](http://codepen.io/simeg/pen/jVVKWq)\n\n## Usage with TypeScript\n\nThis project includes typings for TypeScript versions 1.8 and 2.0. Additional typings are not\nrequired.\n\nTypings for 1.8 are found in `react-datetime.d.ts` and typings for 2.0 are found in `typings/index.d.ts`.\n\n```js\nimport * as Datetime from 'react-datetime';\n\nclass MyDTPicker extends React.Component<MyDTPickerProps, MyDTPickerState> {\n    render() JSX.Element {\n        return <Datetime />;\n    }\n}\n```\n\n## Contributions\nFor information about how to contribute, see the [CONTRIBUTING](.github/CONTRIBUTING.md) file.\n\n## Development\n```sh\nnpm run dev\n```\nThis will start a local `webpack-dev-server` based on `example/example.js` where most development can be done.\n\nIf you want to develop using the component inside a React application, we recommend that you use [react-datetime-playground](https://github.com/arqex/react-datetime-playground).\n\n### [Changelog](CHANGELOG.md)\n\n### [MIT Licensed](LICENSE.md)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@3.0.0-alpha.3","_npmVersion":"5.7.1","_nodeVersion":"8.11.1","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"dist":{"integrity":"sha512-kTsxE4Hwzn++Rc/ge1rYMHEFWUDQl4FJYDPnNfDpNHVPZRm3Grrr9SO2KDmRFhNb7PG0nWVd30U26jF1l/O/wg==","shasum":"f2d4df7477e002433e713086715e95d4dee4f023","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-3.0.0-alpha.3.tgz","fileCount":15,"unpackedSize":538885,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcBpUnCRA9TVsSAnZWagAA4GsP/3I/xBjlWtZmMNF6jhpj\nvOWTcwCp59Ts36a++7Yu/0KFjGjX4bbH4t8suWqNf/8A4upQTBKYTFK3CChO\nnwLHpph8Isr4JNlX/cTjA0L+f1a6EY3cxtsKgFfHeu3E0Qb2YQNpcpwpnnFP\ngzL/rM1zSyOyUiehrqsfJLrD5fGdosSljlUyhHELqgLiG+vG/5Q59sXkG3Wq\nTnw9Z/lZA4blY/09QDuxJExoCm0f09ybE+7jYGJ5Ah1Nq3ZQ9bcMR8/H7JGO\nmLqlhFV+/0LxSrGt/+S5sEn5cwCjl0zogHVX/NCNOHgO35iQ6+fqcZzI05dM\nc5fecl8cCUKqNsndeF5hIhiY351gMjKabPCT/4fGDb6es5rg+203petYxdI7\nEWVClKjXrSiApABaZFw+5+7e4X1L7G6C4pbXJ6HDDbcR//Qkr8oWCU+W3oEd\nwytSksC2IJRuB4auDBX3Hy3fEeGJQ9kW6ogCkkv2oXbjcwd6zseVAKg2oguD\nEtd1JDGXWiEIr73TMO8js7Ph2LEoQOzUKd+HZnySL06oeoqloYrLRS4+181h\n9EbmuJqedkeyvoBnI2HlzmeGD1/yHg/Jv5eHPmeTWK+yquYfIB3dMqxvqRIp\nUxECNqZrvVNX+hVqfdYuTD7IhyNeIbrIOoJLA+FGLdp51pnJuQdYI0L08NLI\nJVwH\r\n=oUr3\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICN6wBL7caMrpHPmzVkjIUYWbGKOYtW5MHmjHQxPZ/5QAiAGfjL7Z9+9vbWSBdE2zXuQB2SUk8deKtT9ejVPr6heyg=="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"layneanderson","email":"layneand@gmail.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime_3.0.0-alpha.3_1543935270730_0.7401630345655454"},"_hasShrinkwrap":false},"3.0.0-alpha.4":{"name":"react-datetime","version":"3.0.0-alpha.4","description":"A lightweight but complete datetime picker React.js component","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","typings":"./DateTime.d.ts","scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js test/ && echo 'Linting OK! ?'","notify-pre-commit-hook":"echo '### Starting pre-commit hook ?'","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"echo 'Running tests...' && npm run test:typings && npm run test && echo 'All tests passed! ?'","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":">=15","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^3.0.0","enzyme-adapter-react-15":"^1.0.5","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^3.2.0","moment":">=2.16.0","moment-timezone":"^0.5.13","pre-commit":"^1.1.3","react":"^15.5.0","react-addons-test-utils":">=0.13","react-dom":"^15.5.0","react-test-renderer":"^15.5.0","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-dev-server":"^1.7.0","webpack-stream":"^3.2.0"},"dependencies":{"create-react-class":"^15.6.3","object-assign":"^3.0.0","prop-types":"^15.5.7","react-onclickoutside":"^6.5.0"},"pre-commit":["notify-pre-commit-hook","lint","test:all"],"readme":"# react-datetime\n\n[![Build Status](https://secure.travis-ci.org/YouCanBookMe/react-datetime.svg)](https://travis-ci.org/YouCanBookMe/react-datetime)\n[![npm version](https://badge.fury.io/js/react-datetime.svg)](http://badge.fury.io/js/react-datetime)\n\nA date and time picker in the same React.js component. It can be used as a datepicker, timepicker or both at the same time. It is **highly customizable** and it even allows to edit date's milliseconds.\n\nThis project started as a fork of https://github.com/quri/react-bootstrap-datetimepicker but the code and the API has changed a lot.\n\n## Installation\n\nInstall using npm:\n```sh\nnpm install --save react-datetime\n```\n\nInstall using yarn:\n```sh\nyarn add react-datetime\n```\n\n## Usage\n\n[React.js](http://facebook.github.io/react/) and [Moment.js](http://momentjs.com/) are peer dependencies for react-datetime (as well as [Moment.js timezones](https://momentjs.com/timezone/) if you want to use the `displayTimeZone` prop). These dependencies are not installed along with react-datetime automatically, but your project needs to have them installed in order to make the datepicker work. You can then use the datepicker like in the example below.\n\n\n```js\nrequire('react-datetime');\n\n...\n\nrender: function() {\n    return <Datetime />;\n}\n```\n[See this example working](http://codepen.io/simeg/pen/mEmQmP).\n\n**Don't forget to add the [CSS stylesheet](https://github.com/YouCanBookMe/react-datetime/blob/master/css/react-datetime.css) to make it work out of the box.**\n\n## API\n\n| Name         | Type    | Default | Description |\n| ------------ | ------- | ------- | ----------- |\n| **value** | `Date` | `new Date()` | Represents the selected date by the component, in order to use it as a [controlled component](https://facebook.github.io/react/docs/forms.html#controlled-components). This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. |\n| **initialValue** | `Date` | `new Date()` | Represents the selected date for the component to use it as a [uncontrolled component](https://facebook.github.io/react/docs/uncontrolled-components.html). This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. If you need to set the selected date programmatically after the picker is initialized, please use the `value` prop instead. |\n| **initialViewDate** | `Date` | `new Date()` | Define the month/year/decade/time which is viewed on opening the calendar. This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. |\n| **initialViewMode** | `string` or `number` | `'days'` | The default view to display when the picker is shown for the first time. (`'years'`, `'months'`, `'days'`, `'time'`) |\n| **dateFormat**   | `boolean` or `string`  | `true` | Defines the format for the date. It accepts any [Moment.js date format](http://momentjs.com/docs/#/displaying/format/) (not in localized format). If `true` the date will be displayed using the defaults for the current locale. If `false` the datepicker is disabled and the component can be used as timepicker, see [available units docs](#specify-available-units). |\n| **timeFormat**   | `boolean` or `string`  | `true` | Defines the format for the time. It accepts any [Moment.js time format](http://momentjs.com/docs/#/displaying/format/) (not in localized format). If `true` the time will be displayed using the defaults for the current locale. If `false` the timepicker is disabled and the component can be used as datepicker, see [available units docs](#specify-available-units). |\n| **input** | `boolean` | `true` | Whether to show an input field to edit the date manually. |\n| **open** | `boolean` | `null` | Whether to open or close the picker. If not set react-datetime will open the datepicker on input focus and close it on click outside. |\n| **locale** | `string` | `null` | Manually set the locale for the react-datetime instance. Moment.js locale needs to be loaded to be used, see [i18n docs](#i18n).\n| **utc** | `boolean` | `false` | When true, input time values will be interpreted as UTC (Zulu time) by Moment.js. Otherwise they will default to the user's local timezone.\n| **displayTimeZone** | `string` | `null` | **Needs [moment's timezone](https://momentjs.com/timezone/) available in your project.** When specified, input time values will be displayed in the given time zone. Otherwise they will default to the user's local timezone (unless `utc` specified).\n| **onChange** | `function` | empty function | Callback trigger when the date changes. The callback receives the selected `moment` object as only parameter, if the date in the input is valid. If the date in the input is not valid, the callback receives the value of the input (a string). |\n| **onFocus** | `function` | empty function | Callback trigger for when the user opens the datepicker. The callback receives an event of type SyntheticEvent. |\n| **onBlur** | `function` | empty function | Callback trigger for when the user clicks outside of the input, simulating a regular onBlur. The callback receives the selected `moment` object as only parameter, if the date in the input is valid. If the date in the input is not valid, the callback returned. |\n| **onViewModeChange** | `function` | empty function | Callback trigger when the view mode changes. The callback receives the selected view mode string (`years`, `months`, `days` or `time`) as only parameter.|\n| **onNavigateBack** | `function` | empty function | Callback trigger when the user navigates to the previous month, year or decade. The callback receives the amount and type ('month', 'year') as parameters. |\n| **onNavigateForward** | `function` | empty function | Callback trigger when the user navigates to the next month, year or decade. The callback receives the amount and type ('month', 'year') as parameters. |\n| **className** | `string` or `string array` | `''` | Extra class name for the outermost markup element. |\n| **inputProps** | `object` | `undefined` | Defines additional attributes for the input element of the component. For example: `onClick`, `placeholder`, `disabled`, `required`, `name` and `className` (`className` *sets* the class attribute for the input element). See [Customize the Input Appearance](#customize-the-input-appearance). |\n| **isValidDate** | `function` | `() => true` | Define the dates that can be selected. The function receives `(currentDate, selectedDate)` and shall return a `true` or `false` whether the `currentDate` is valid or not. See [selectable dates](#selectable-dates).|\n| **renderInput** | `function` | `undefined` | Replace the rendering of the input element. The function has the following arguments: the default calculated `props` for the input, `openCalendar` (a function which opens the calendar) and `closeCalendar` (a function which closes the calendar). Must return a React component or `null`. See [Customize the Input Appearance](#customize-the-input-appearance). |\n| **renderDay** | `function` | `DOM.td(day)` | Customize the way that the days are shown in the daypicker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderMonth** | `function` | `DOM.td(month)` | Customize the way that the months are shown in the monthpicker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, the `month` and the `year` to be shown, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderYear** | `function` | `DOM.td(year)` | Customize the way that the years are shown in the year picker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, the `year` to be shown, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **strictParsing** | `boolean` | `true` | Whether to use Moment.js's [strict parsing](http://momentjs.com/docs/#/parsing/string-format/) when parsing input.\n| **closeOnSelect** | `boolean` | `false` | When `true`, once the day has been selected, the datepicker will be automatically closed.\n| **closeOnTab** | `boolean` | `true` | When `true` and the input is focused, pressing the `tab` key will close the datepicker.\n| **timeConstraints** | `object` | `null` | Add some constraints to the timepicker. It accepts an `object` with the format `{ hours: { min: 9, max: 15, step: 2 }}`, this example means the hours can't be lower than `9` and higher than `15`, and it will change adding or subtracting `2` hours everytime the buttons are clicked. The constraints can be added to the `hours`, `minutes`, `seconds` and `milliseconds`.\n| **closeOnClickOutside** | `boolean` | `false` | When `true`, keep the datepicker open when click event is triggered outside of component. When `false`, close it.\n\n## i18n\nDifferent language and date formats are supported by react-datetime. React uses [Moment.js](http://momentjs.com/) to format the dates, and the easiest way of changing the language of the calendar is [changing the Moment.js locale](http://momentjs.com/docs/#/i18n/changing-locale/).\n\n```js\nvar moment = require('moment');\nrequire('moment/locale/fr');\n// Now react-datetime will be in french\n```\n\nIf there are multiple locales loaded, you can use the prop `locale` to define what language shall be used by the instance.\n```js\n<Datetime locale=\"fr-ca\" />\n<Datetime locale=\"de\" />\n```\n[Here you can see the i18n example working](http://codepen.io/simeg/pen/yVVjdJ).\n\n## Customize the Input Appearance\nIt is possible to customize the way that the input is displayed. The simplest is to supply `inputProps` which get assigned to the default `<input />` element within the component.\n\n```js\n<Datetime inputProps={{ placeholder: 'N/A', disabled: true }}>\n```\n\nAlternatively, if you need to render different content than an `<input />` element, you may supply a `renderInput` function which is called instead.\n\n```js\nvar MyDTPicker = React.createClass({\n    render: function(){\n        return <Datetime renderInput={ this.renderInput } />;\n    },\n    renderInput: function( props, openCalendar, closeCalendar ){\n        function clear(){\n            props.onChange({target: {value: ''}});\n        }\n        return (\n            <div>\n                <input {...props} />\n                <button onClick={openCalendar}>open calendar</button>\n                <button onClick={closeCalendar}>close calendar</button>\n                <button onClick={clear}>clear</button>\n            </div>\n        );\n    },\n});\n```\n\n## Customize the Datepicker Appearance\nIt is possible to customize the way that the datepicker display the days, months and years in the calendar. To adapt the calendar for every need it is possible to use the props `renderDay(props, currentDate, selectedDate)`, `renderMonth(props, month, year, selectedDate)` and `renderYear(props, year, selectedDate)` to customize the output of each rendering method.\n\n```js\nvar MyDTPicker = React.createClass({\n    render: function(){\n        return <Datetime\n            renderDay={ this.renderDay }\n            renderMonth={ this.renderMonth }\n            renderYear={ this.renderYear }\n        />;\n    },\n    renderDay: function( props, currentDate, selectedDate ){\n        return <td {...props}>{ '0' + currentDate.date() }</td>;\n    },\n    renderMonth: function( props, month, year, selectedDate ){\n        return <td {...props}>{ month }</td>;\n    },\n    renderYear: function( props, year, selectedDate ){\n        return <td {...props}>{ year % 100 }</td>;\n    }\n});\n```\n[You can see a customized calendar here.](http://codepen.io/simeg/pen/YppLmO)\n\n#### Method Parameters\n* `props` is the object that the datepicker has calculated for this object. It is convenient to use this object as the `props` for your custom component, since it knows how to handle the click event and its `className` attribute is used by the default styles.\n* `selectedDate` and `currentDate` are [moment objects](http://momentjs.com) and can be used to change the output depending on the selected date, or the date for the current day.\n* `month` and `year` are the numeric representation of the current month and year to be displayed. Notice that the possible `month` values range from `0` to `11`.\n\n## Specify Available Units\nYou can filter out what you want the user to be able to pick by using `dateFormat` and `timeFormat`, e.g. to create a timepicker, yearpicker etc.\n\nIn this example the component is being used as a *timepicker* and can *only be used for selecting a time*.\n```js\n<Datetime dateFormat={false} />\n```\n[Working example of a timepicker here.](http://codepen.io/simeg/pen/mRQBrp)\n\nIn this example you can *only select a year and month*.\n```js\n<Datetime dateFormat=\"YYYY-MM\" timeFormat={false} />\n```\n[Working example of only selecting year and month here.](http://codepen.io/simeg/pen/apQLdd)\n\n## Selectable Dates\nIt is possible to disable dates in the calendar if the user are not allowed to select them, e.g. dates in the past. This is done using the prop `isValidDate`, which admits a function in the form `function(currentDate, selectedDate)` where both arguments are [moment objects](http://momentjs.com). The function shall return `true` for selectable dates, and `false` for disabled ones.\n\nIn the example below are *all dates before today* disabled.\n\n```js\n// Let's use the static moment reference in the Datetime component\nvar yesterday = Datetime.moment().subtract( 1, 'day' );\nvar valid = function( current ){\n    return current.isAfter( yesterday );\n};\n<Datetime isValidDate={ valid } />\n```\n[Working example of disabled days here.](http://codepen.io/simeg/pen/XNNYJg)\n\nIt's also possible to disable *the weekends*, as shown in the example below.\n```js\nvar valid = function( current ){\n    return current.day() !== 0 && current.day() !== 6;\n};\n<Datetime isValidDate={ valid } />\n```\n[Working example of disabled weekends here.](http://codepen.io/simeg/pen/jVVKWq)\n\n## Usage with TypeScript\n\nThis project includes typings for TypeScript versions 1.8 and 2.0. Additional typings are not\nrequired.\n\nTypings for 1.8 are found in `react-datetime.d.ts` and typings for 2.0 are found in `typings/index.d.ts`.\n\n```js\nimport * as Datetime from 'react-datetime';\n\nclass MyDTPicker extends React.Component<MyDTPickerProps, MyDTPickerState> {\n    render() JSX.Element {\n        return <Datetime />;\n    }\n}\n```\n\n## Contributions\nFor information about how to contribute, see the [CONTRIBUTING](.github/CONTRIBUTING.md) file.\n\n## Development\n```sh\nnpm run dev\n```\nThis will start a local `webpack-dev-server` based on `example/example.js` where most development can be done.\n\nIf you want to develop using the component inside a React application, we recommend that you use [react-datetime-playground](https://github.com/arqex/react-datetime-playground).\n\n### [Changelog](CHANGELOG.md)\n\n### [MIT Licensed](LICENSE.md)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@3.0.0-alpha.4","_npmVersion":"5.7.1","_nodeVersion":"8.11.1","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"dist":{"integrity":"sha512-1fly7jDdyZgRdqrvxeHkiZqV6yhjJPO33FOI2s83bae29tmOlb1pl5en57op2F6hnQNXQy83MYgDKkvBA7VFeQ==","shasum":"772e09bb3ed8bfff0d7125df969c1a360015fdbf","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-3.0.0-alpha.4.tgz","fileCount":15,"unpackedSize":539077,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcBpgxCRA9TVsSAnZWagAAehUP/2QyXv5fLCQcgRNWCBXd\n1+PWgNe8dI/SzRKOfBDLFLv53QEwASGKRSdEsXtfuGrfClseEfTaIda8UYyy\nPSlr7tE4h5AGoH2f8ThpBhSIOrcBR6c4VapAAHAMNmRm9U6jDDAFQZ0nZ65f\npHo5gIGrzHSPuw1jdGeTI7FRffnAfgoq42XV956g9QMlIrw9p2jfvMC+hDwh\nIGE6B1IDjRaiSUFrKPcp0HMdZmLbAXdoIqDbQsuNXqd8Z9Gy194fZvbRmkV9\nb3WOHpkwwt1in+lmjv8kkULWeCYSdLnu5Tv1ssPE8nwGTpdPOv5w+CFomCEr\nKHjFwmocQbaF+aalQGa9MJXjOkE1ira0XBgrcDPyR7JHYfchgkjA6VyMGMpc\nw/1oeAuyi1yH04zbI9PnRAiVIfN/DXcCOYw8cueBXZNRqQRisUuJFL/S9gTV\nhbxTL7/0bhGed4GcaX4lIgB9IWWPSvnbaJbYUH3eqhKbNQWFdg1b5nHHSxay\nRGlG2UoA0y9PmKBsfg3ihL+zYTTDYqnRkI5HzDkimkhjZmVvKe9e2RX1DARs\nHDJxWuAWrQAgbM/1kG+6MhEQ2MpvOe8n+Cp4xyTF7YOivURrQcGO4n5SEeye\nnaxrbycxjIVkZGxB+iNHIkzNy9zikJ4ORMRPEO3+TLeDJ4JqjoJewKo4Sc7y\n2Kit\r\n=5M3c\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC/XFwlp0ACxz1n/v8R26l3QUQFn6UKksqB5hV/z2hF5AIgPNeNRbv6zy8IOAGfHAySmhESiC1FY4lv+RAPwxh+aXI="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"layneanderson","email":"layneand@gmail.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime_3.0.0-alpha.4_1543936048838_0.20492658339347192"},"_hasShrinkwrap":false},"3.0.0-alpha.5":{"name":"react-datetime","version":"3.0.0-alpha.5","description":"A lightweight but complete datetime picker React.js component","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","typings":"./DateTime.d.ts","scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js test/ && echo 'Linting OK! ?'","notify-pre-commit-hook":"echo '### Starting pre-commit hook ?'","test":"node ./node_modules/jest/bin/jest.js","test:typings":"node ./node_modules/typescript/bin/tsc -p ./typings","test:snapshot":"node ./node_modules/jest/bin/jest.js snapshot","test:snapshot:update":"node ./node_modules/jest/bin/jest.js snapshot --updateSnapshot","test:all":"echo 'Running tests...' && npm run test:typings && npm run test && echo 'All tests passed! ?'","test:watch":"node ./node_modules/jest/bin/jest.js --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":">=15","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^3.0.0","enzyme-adapter-react-15":"^1.0.5","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^5.2.0","moment":">=2.16.0","moment-timezone":"^0.5.13","pre-commit":"^1.1.3","react":"^15.5.0","react-addons-test-utils":">=0.13","react-dom":"^15.5.0","react-test-renderer":"^15.5.0","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-stream":"^3.2.0"},"dependencies":{"create-react-class":"^15.6.3","object-assign":"^3.0.0","prop-types":"^15.5.7","react-onclickoutside":"^6.5.0"},"pre-commit":["notify-pre-commit-hook","lint","test:all"],"readme":"# react-datetime\n\n[![Build Status](https://secure.travis-ci.org/YouCanBookMe/react-datetime.svg)](https://travis-ci.org/YouCanBookMe/react-datetime)\n[![npm version](https://badge.fury.io/js/react-datetime.svg)](http://badge.fury.io/js/react-datetime)\n\nA date and time picker in the same React.js component. It can be used as a datepicker, timepicker or both at the same time. It is **highly customizable** and it even allows to edit date's milliseconds.\n\nThis project started as a fork of https://github.com/quri/react-bootstrap-datetimepicker but the code and the API has changed a lot.\n\n## Installation\n\nInstall using npm:\n```sh\nnpm install --save react-datetime\n```\n\nInstall using yarn:\n```sh\nyarn add react-datetime\n```\n\n## Usage\n\n[React.js](http://facebook.github.io/react/) and [Moment.js](http://momentjs.com/) are peer dependencies for react-datetime (as well as [Moment.js timezones](https://momentjs.com/timezone/) if you want to use the `displayTimeZone` prop). These dependencies are not installed along with react-datetime automatically, but your project needs to have them installed in order to make the datepicker work. You can then use the datepicker like in the example below.\n\n\n```js\nrequire('react-datetime');\n\n...\n\nrender: function() {\n    return <Datetime />;\n}\n```\n[See this example working](http://codepen.io/simeg/pen/mEmQmP).\n\n**Don't forget to add the [CSS stylesheet](https://github.com/YouCanBookMe/react-datetime/blob/master/css/react-datetime.css) to make it work out of the box.**\n\n## API\n\n| Name         | Type    | Default | Description |\n| ------------ | ------- | ------- | ----------- |\n| **value** | `Date` | `new Date()` | Represents the selected date by the component, in order to use it as a [controlled component](https://facebook.github.io/react/docs/forms.html#controlled-components). This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. |\n| **initialValue** | `Date` | `new Date()` | Represents the selected date for the component to use it as a [uncontrolled component](https://facebook.github.io/react/docs/uncontrolled-components.html). This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. If you need to set the selected date programmatically after the picker is initialized, please use the `value` prop instead. |\n| **initialViewDate** | `Date` | `new Date()` | Define the month/year/decade/time which is viewed on opening the calendar. This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. |\n| **initialViewMode** | `string` or `number` | `'days'` | The default view to display when the picker is shown for the first time. (`'years'`, `'months'`, `'days'`, `'time'`) |\n| **dateFormat**   | `boolean` or `string`  | `true` | Defines the format for the date. It accepts any [Moment.js date format](http://momentjs.com/docs/#/displaying/format/) (not in localized format). If `true` the date will be displayed using the defaults for the current locale. If `false` the datepicker is disabled and the component can be used as timepicker, see [available units docs](#specify-available-units). |\n| **timeFormat**   | `boolean` or `string`  | `true` | Defines the format for the time. It accepts any [Moment.js time format](http://momentjs.com/docs/#/displaying/format/) (not in localized format). If `true` the time will be displayed using the defaults for the current locale. If `false` the timepicker is disabled and the component can be used as datepicker, see [available units docs](#specify-available-units). |\n| **input** | `boolean` | `true` | Whether to show an input field to edit the date manually. |\n| **open** | `boolean` | `null` | Whether to open or close the picker. If not set react-datetime will open the datepicker on input focus and close it on click outside. |\n| **locale** | `string` | `null` | Manually set the locale for the react-datetime instance. Moment.js locale needs to be loaded to be used, see [i18n docs](#i18n).\n| **utc** | `boolean` | `false` | When true, input time values will be interpreted as UTC (Zulu time) by Moment.js. Otherwise they will default to the user's local timezone.\n| **displayTimeZone** | `string` | `null` | **Needs [moment's timezone](https://momentjs.com/timezone/) available in your project.** When specified, input time values will be displayed in the given time zone. Otherwise they will default to the user's local timezone (unless `utc` specified).\n| **onChange** | `function` | empty function | Callback trigger when the date changes. The callback receives the selected `moment` object as only parameter, if the date in the input is valid. If the date in the input is not valid, the callback receives the value of the input (a string). |\n| **onFocus** | `function` | empty function | Callback trigger for when the user opens the datepicker. The callback receives an event of type SyntheticEvent. |\n| **onBlur** | `function` | empty function | Callback trigger for when the user clicks outside of the input, simulating a regular onBlur. The callback receives the selected `moment` object as only parameter, if the date in the input is valid. If the date in the input is not valid, the callback returned. |\n| **onViewModeChange** | `function` | empty function | Callback trigger when the view mode changes. The callback receives the selected view mode string (`years`, `months`, `days` or `time`) as only parameter.|\n| **onNavigateBack** | `function` | empty function | Callback trigger when the user navigates to the previous month, year or decade. The callback receives the amount and type ('month', 'year') as parameters. |\n| **onNavigateForward** | `function` | empty function | Callback trigger when the user navigates to the next month, year or decade. The callback receives the amount and type ('month', 'year') as parameters. |\n| **className** | `string` or `string array` | `''` | Extra class name for the outermost markup element. |\n| **inputProps** | `object` | `undefined` | Defines additional attributes for the input element of the component. For example: `onClick`, `placeholder`, `disabled`, `required`, `name` and `className` (`className` *sets* the class attribute for the input element). See [Customize the Input Appearance](#customize-the-input-appearance). |\n| **isValidDate** | `function` | `() => true` | Define the dates that can be selected. The function receives `(currentDate, selectedDate)` and shall return a `true` or `false` whether the `currentDate` is valid or not. See [selectable dates](#selectable-dates).|\n| **renderInput** | `function` | `undefined` | Replace the rendering of the input element. The function has the following arguments: the default calculated `props` for the input, `openCalendar` (a function which opens the calendar) and `closeCalendar` (a function which closes the calendar). Must return a React component or `null`. See [Customize the Input Appearance](#customize-the-input-appearance). |\n| **renderDay** | `function` | `DOM.td(day)` | Customize the way that the days are shown in the daypicker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderMonth** | `function` | `DOM.td(month)` | Customize the way that the months are shown in the monthpicker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, the `month` and the `year` to be shown, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderYear** | `function` | `DOM.td(year)` | Customize the way that the years are shown in the year picker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, the `year` to be shown, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **strictParsing** | `boolean` | `true` | Whether to use Moment.js's [strict parsing](http://momentjs.com/docs/#/parsing/string-format/) when parsing input.\n| **closeOnSelect** | `boolean` | `false` | When `true`, once the day has been selected, the datepicker will be automatically closed.\n| **closeOnTab** | `boolean` | `true` | When `true` and the input is focused, pressing the `tab` key will close the datepicker.\n| **timeConstraints** | `object` | `null` | Add some constraints to the timepicker. It accepts an `object` with the format `{ hours: { min: 9, max: 15, step: 2 }}`, this example means the hours can't be lower than `9` and higher than `15`, and it will change adding or subtracting `2` hours everytime the buttons are clicked. The constraints can be added to the `hours`, `minutes`, `seconds` and `milliseconds`.\n| **closeOnClickOutside** | `boolean` | `false` | When `true`, keep the datepicker open when click event is triggered outside of component. When `false`, close it.\n\n## i18n\nDifferent language and date formats are supported by react-datetime. React uses [Moment.js](http://momentjs.com/) to format the dates, and the easiest way of changing the language of the calendar is [changing the Moment.js locale](http://momentjs.com/docs/#/i18n/changing-locale/).\n\n```js\nvar moment = require('moment');\nrequire('moment/locale/fr');\n// Now react-datetime will be in french\n```\n\nIf there are multiple locales loaded, you can use the prop `locale` to define what language shall be used by the instance.\n```js\n<Datetime locale=\"fr-ca\" />\n<Datetime locale=\"de\" />\n```\n[Here you can see the i18n example working](http://codepen.io/simeg/pen/yVVjdJ).\n\n## Customize the Input Appearance\nIt is possible to customize the way that the input is displayed. The simplest is to supply `inputProps` which get assigned to the default `<input />` element within the component.\n\n```js\n<Datetime inputProps={{ placeholder: 'N/A', disabled: true }}>\n```\n\nAlternatively, if you need to render different content than an `<input />` element, you may supply a `renderInput` function which is called instead.\n\n```js\nvar MyDTPicker = React.createClass({\n    render: function(){\n        return <Datetime renderInput={ this.renderInput } />;\n    },\n    renderInput: function( props, openCalendar, closeCalendar ){\n        function clear(){\n            props.onChange({target: {value: ''}});\n        }\n        return (\n            <div>\n                <input {...props} />\n                <button onClick={openCalendar}>open calendar</button>\n                <button onClick={closeCalendar}>close calendar</button>\n                <button onClick={clear}>clear</button>\n            </div>\n        );\n    },\n});\n```\n\n## Customize the Datepicker Appearance\nIt is possible to customize the way that the datepicker display the days, months and years in the calendar. To adapt the calendar for every need it is possible to use the props `renderDay(props, currentDate, selectedDate)`, `renderMonth(props, month, year, selectedDate)` and `renderYear(props, year, selectedDate)` to customize the output of each rendering method.\n\n```js\nvar MyDTPicker = React.createClass({\n    render: function(){\n        return <Datetime\n            renderDay={ this.renderDay }\n            renderMonth={ this.renderMonth }\n            renderYear={ this.renderYear }\n        />;\n    },\n    renderDay: function( props, currentDate, selectedDate ){\n        return <td {...props}>{ '0' + currentDate.date() }</td>;\n    },\n    renderMonth: function( props, month, year, selectedDate ){\n        return <td {...props}>{ month }</td>;\n    },\n    renderYear: function( props, year, selectedDate ){\n        return <td {...props}>{ year % 100 }</td>;\n    }\n});\n```\n[You can see a customized calendar here.](http://codepen.io/simeg/pen/YppLmO)\n\n#### Method Parameters\n* `props` is the object that the datepicker has calculated for this object. It is convenient to use this object as the `props` for your custom component, since it knows how to handle the click event and its `className` attribute is used by the default styles.\n* `selectedDate` and `currentDate` are [moment objects](http://momentjs.com) and can be used to change the output depending on the selected date, or the date for the current day.\n* `month` and `year` are the numeric representation of the current month and year to be displayed. Notice that the possible `month` values range from `0` to `11`.\n\n## Specify Available Units\nYou can filter out what you want the user to be able to pick by using `dateFormat` and `timeFormat`, e.g. to create a timepicker, yearpicker etc.\n\nIn this example the component is being used as a *timepicker* and can *only be used for selecting a time*.\n```js\n<Datetime dateFormat={false} />\n```\n[Working example of a timepicker here.](http://codepen.io/simeg/pen/mRQBrp)\n\nIn this example you can *only select a year and month*.\n```js\n<Datetime dateFormat=\"YYYY-MM\" timeFormat={false} />\n```\n[Working example of only selecting year and month here.](http://codepen.io/simeg/pen/apQLdd)\n\n## Selectable Dates\nIt is possible to disable dates in the calendar if the user are not allowed to select them, e.g. dates in the past. This is done using the prop `isValidDate`, which admits a function in the form `function(currentDate, selectedDate)` where both arguments are [moment objects](http://momentjs.com). The function shall return `true` for selectable dates, and `false` for disabled ones.\n\nIn the example below are *all dates before today* disabled.\n\n```js\n// Let's use the static moment reference in the Datetime component\nvar yesterday = Datetime.moment().subtract( 1, 'day' );\nvar valid = function( current ){\n    return current.isAfter( yesterday );\n};\n<Datetime isValidDate={ valid } />\n```\n[Working example of disabled days here.](http://codepen.io/simeg/pen/XNNYJg)\n\nIt's also possible to disable *the weekends*, as shown in the example below.\n```js\nvar valid = function( current ){\n    return current.day() !== 0 && current.day() !== 6;\n};\n<Datetime isValidDate={ valid } />\n```\n[Working example of disabled weekends here.](http://codepen.io/simeg/pen/jVVKWq)\n\n## Usage with TypeScript\n\nThis project includes typings for TypeScript versions 1.8 and 2.0. Additional typings are not\nrequired.\n\nTypings for 1.8 are found in `react-datetime.d.ts` and typings for 2.0 are found in `typings/index.d.ts`.\n\n```js\nimport * as Datetime from 'react-datetime';\n\nclass MyDTPicker extends React.Component<MyDTPickerProps, MyDTPickerState> {\n    render() JSX.Element {\n        return <Datetime />;\n    }\n}\n```\n\n## Contributions\nFor information about how to contribute, see the [CONTRIBUTING](.github/CONTRIBUTING.md) file.\n\n## Development\n```sh\nnpm run dev\n```\nThis will start a local `webpack-dev-server` based on `example/example.js` where most development can be done.\n\nIf you want to develop using the component inside a React application, we recommend that you use [react-datetime-playground](https://github.com/arqex/react-datetime-playground).\n\n### [Changelog](CHANGELOG.md)\n\n### [MIT Licensed](LICENSE.md)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@3.0.0-alpha.5","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"dist":{"integrity":"sha512-Pa/ORC8+sK1CzmQq8AFLgaVBYQYzLrMFtJEReK+LhXd/UwlrXUDgaamXVhyJlkgOnfpeGjrQb0fJ98Qk/Q+lAw==","shasum":"e562e8c2b7d3f0de8c0765abc0a3d73fee27dc6a","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-3.0.0-alpha.5.tgz","fileCount":15,"unpackedSize":551310,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcGibjCRA9TVsSAnZWagAAaaAP/jiIuqmt7oFkRZByUwFV\nkHDxnsSdZz0PvkWXM32e7KlCbSf1tYe0nYJ0tvpQVpj7udKBgS0TiNrrAlW0\n+5Keol+3ebmT5IyzSGOrwHsbZCK6yLl5+3ncyVy7HMW9k96TsA8S0PQdfpwd\nezJfZJycX70xMVfuXl1rDmDXY4dxdIF7P4HJXabCyJt7TpFvmmApjYigUay1\nVtNi1HPglXfz6uus3Xf2PwMFp7QvYNtsmAIBJpDmcnRx7Gy2pvyMiX9BVc86\nJIV5XqYOnbNG9LliNIx4Eo3xm/mRZMfBbWm2SGEsuUj0l9V8MGDNDtd2tx3T\nrVF1fV+oDXsV80b1iAh8rsZjjH7XBN2W3m7dIvZMULM/dgq7FHXGP+CVMDgO\nuLzwFfKBp0CF7uavjhylB7Ai0MIYH4LHVwFxOcBPbba4HGUluVFNeGuJ7qqb\n3k8ZlYErweSRjMhg7y54Gij7sqQflMAbagiv48cteOGj7As3rtpROarcxGoq\nkF3hJoqZr9EpbrFKZa1OSxKMtZHx9cFjMBSkKoWVI6N0oPwYLeU35UMYvQcB\nMBDIctCdNN3uLqZ77EAiZx4pDt8clKWkfxaZMShXdSkkgTCoMKblAz6H0QP6\nbz8FTy+r/S0rX0b3AJdfBVBa6HjTcz2/fsNgKm7uXYXHrpCaprgnOGzgOVoo\nZzZf\r\n=Nxo9\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDFisEKxBNs9vpMKrKcgEf1Q5Tn4xEWNIGxEJomNABuagIgQrfVjnYDMB5YNn+LZQPvHgWwt67k2YcmbD+iSK99YGU="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"layneanderson","email":"layneand@gmail.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime_3.0.0-alpha.5_1545217762597_0.7838822154693921"},"_hasShrinkwrap":false},"3.0.0-beta.1":{"name":"react-datetime","version":"3.0.0-beta.1","description":"A lightweight but complete datetime picker React.js component","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","typings":"./DateTime.d.ts","scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"eslint src/ DateTime.js test/ && echo 'Linting OK! ?'","notify-pre-commit-hook":"echo '### Starting pre-commit hook ?'","test":"node ./node_modules/jest/bin/jest.js","test:typings":"node ./node_modules/typescript/bin/tsc -p ./typings","test:snapshot":"node ./node_modules/jest/bin/jest.js snapshot","test:snapshot:update":"node ./node_modules/jest/bin/jest.js snapshot --updateSnapshot","test:all":"echo 'Running tests...' && npm run test:typings && npm run test && echo 'All tests passed! ?'","test:watch":"node ./node_modules/jest/bin/jest.js --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":">=15","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^3.0.0","enzyme-adapter-react-15":"^1.0.5","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^5.2.0","moment":">=2.16.0","moment-timezone":"^0.5.13","pre-commit":"^1.1.3","react":"^15.5.0","react-addons-test-utils":">=0.13","react-dom":"^15.5.0","react-test-renderer":"^15.5.0","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-stream":"^3.2.0"},"dependencies":{"create-react-class":"^15.6.3","object-assign":"^3.0.0","prop-types":"^15.5.7","react-onclickoutside":"^6.5.0"},"pre-commit":["notify-pre-commit-hook","lint","test:all"],"readme":"# react-datetime\n\n[![Build Status](https://secure.travis-ci.org/YouCanBookMe/react-datetime.svg)](https://travis-ci.org/YouCanBookMe/react-datetime.svg?branch=master)\n[![npm version](https://badge.fury.io/js/react-datetime.svg)](http://badge.fury.io/js/react-datetime)\n\nA date and time picker in the same React.js component. It can be used as a datepicker, timepicker or both at the same time. It is **highly customizable** and it even allows to edit date's milliseconds.\n\nThis project started as a fork of https://github.com/quri/react-bootstrap-datetimepicker but the code and the API has changed a lot.\n\n## Installation\n\nInstall using npm:\n```sh\nnpm install --save react-datetime\n```\n\nInstall using yarn:\n```sh\nyarn add react-datetime\n```\n\n## Usage\n\n[React.js](http://facebook.github.io/react/) and [Moment.js](http://momentjs.com/) are peer dependencies for react-datetime (as well as [Moment.js timezones](https://momentjs.com/timezone/) if you want to use the `displayTimeZone` prop). These dependencies are not installed along with react-datetime automatically, but your project needs to have them installed in order to make the datepicker work. You can then use the datepicker like in the example below.\n\n\n```js\nrequire('react-datetime');\n\n...\n\nrender: function() {\n    return <Datetime />;\n}\n```\n[See this example working](http://codepen.io/simeg/pen/mEmQmP).\n\n**Don't forget to add the [CSS stylesheet](https://github.com/YouCanBookMe/react-datetime/blob/master/css/react-datetime.css) to make it work out of the box.**\n\n## API\n\n| Name         | Type    | Default | Description |\n| ------------ | ------- | ------- | ----------- |\n| **value** | `Date` | `new Date()` | Represents the selected date by the component, in order to use it as a [controlled component](https://facebook.github.io/react/docs/forms.html#controlled-components). This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. |\n| **initialValue** | `Date` | `new Date()` | Represents the selected date for the component to use it as a [uncontrolled component](https://facebook.github.io/react/docs/uncontrolled-components.html). This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. If you need to set the selected date programmatically after the picker is initialized, please use the `value` prop instead. |\n| **initialViewDate** | `Date` | `new Date()` | Define the month/year/decade/time which is viewed on opening the calendar. This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. |\n| **initialViewMode** | `string` or `number` | `'days'` | The default view to display when the picker is shown for the first time. (`'years'`, `'months'`, `'days'`, `'time'`) |\n| **updateOnView** | `string` | Intelligent guess | In the calendar we can navigate through years and months without actualling updating the selected view. Only when we get to one view called the \"updating view\", we make a selection there and the value gets updated, triggering an `onChange` event. By default the updating view will get guessed by using the `dateFormat` so if our dates only show months and never days, the update is done in the `months` view. If we set `updateOnView=\"time\"` selecting a day will navigate to the time view. The time view always updates the selected date, never navigates. If `closeOnSelect={ true }`, making a selection in the view defined by `updateOnView` will close the calendar. |\n| **dateFormat**   | `boolean` or `string`  | `true` | Defines the format for the date. It accepts any [Moment.js date format](http://momentjs.com/docs/#/displaying/format/) (not in localized format). If `true` the date will be displayed using the defaults for the current locale. If `false` the datepicker is disabled and the component can be used as timepicker, see [available units docs](#specify-available-units). |\n| **timeFormat**   | `boolean` or `string`  | `true` | Defines the format for the time. It accepts any [Moment.js time format](http://momentjs.com/docs/#/displaying/format/) (not in localized format). If `true` the time will be displayed using the defaults for the current locale. If `false` the timepicker is disabled and the component can be used as datepicker, see [available units docs](#specify-available-units). |\n| **input** | `boolean` | `true` | Whether to show an input field to edit the date manually. |\n| **open** | `boolean` | `null` | Whether to open or close the picker. If not set react-datetime will open the datepicker on input focus and close it on click outside. |\n| **locale** | `string` | `null` | Manually set the locale for the react-datetime instance. Moment.js locale needs to be loaded to be used, see [i18n docs](#i18n).\n| **utc** | `boolean` | `false` | When true, input time values will be interpreted as UTC (Zulu time) by Moment.js. Otherwise they will default to the user's local timezone.\n| **displayTimeZone** | `string` | `null` | **Needs [moment's timezone](https://momentjs.com/timezone/) available in your project.** When specified, input time values will be displayed in the given time zone. Otherwise they will default to the user's local timezone (unless `utc` specified).\n| **onChange** | `function` | empty function | Callback trigger when the date changes. The callback receives the selected `moment` object as only parameter, if the date in the input is valid. If the date in the input is not valid, the callback receives the value of the input (a string). |\n| **onFocus** | `function` | empty function | Callback trigger for when the user opens the datepicker. The callback receives an event of type SyntheticEvent. |\n| **onBlur** | `function` | empty function | Callback trigger for when the user clicks outside of the input, simulating a regular onBlur. The callback receives the selected `moment` object as only parameter, if the date in the input is valid. If the date in the input is not valid, the callback returned. |\n| **onViewModeChange** | `function` | empty function | Callback trigger when the view mode changes. The callback receives the selected view mode string (`years`, `months`, `days` or `time`) as only parameter.|\n| **onNavigateBack** | `function` | empty function | Callback trigger when the user navigates to the previous month, year or decade. The callback receives the amount and type ('month', 'year') as parameters. |\n| **onNavigateForward** | `function` | empty function | Callback trigger when the user navigates to the next month, year or decade. The callback receives the amount and type ('month', 'year') as parameters. |\n| **className** | `string` or `string array` | `''` | Extra class name for the outermost markup element. |\n| **inputProps** | `object` | `undefined` | Defines additional attributes for the input element of the component. For example: `onClick`, `placeholder`, `disabled`, `required`, `name` and `className` (`className` *sets* the class attribute for the input element). See [Customize the Input Appearance](#customize-the-input-appearance). |\n| **isValidDate** | `function` | `() => true` | Define the dates that can be selected. The function receives `(currentDate, selectedDate)` and shall return a `true` or `false` whether the `currentDate` is valid or not. See [selectable dates](#selectable-dates).|\n| **renderInput** | `function` | `undefined` | Replace the rendering of the input element. The function has the following arguments: the default calculated `props` for the input, `openCalendar` (a function which opens the calendar) and `closeCalendar` (a function which closes the calendar). Must return a React component or `null`. See [Customize the Input Appearance](#customize-the-input-appearance). |\n| **renderView** | `function` | `(viewType, renderDefault) => renderDefault()` | Customize the way the calendar is rendered. The accepted function receives the type of the view\nit's going to be rendered `'years', 'months', 'days', 'time'` and a function to render the default\nview of react-datetime, this way it's possible to wrap the original view adding our own markup or\noverride it completely with our own code. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderDay** | `function` | `DOM.td(day)` | Customize the way that the days are shown in the daypicker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderMonth** | `function` | `DOM.td(month)` | Customize the way that the months are shown in the monthpicker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, the `month` and the `year` to be shown, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderYear** | `function` | `DOM.td(year)` | Customize the way that the years are shown in the year picker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, the `year` to be shown, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **strictParsing** | `boolean` | `true` | Whether to use Moment.js's [strict parsing](http://momentjs.com/docs/#/parsing/string-format/) when parsing input.\n| **closeOnSelect** | `boolean` | `false` | When `true`, once the day has been selected, the datepicker will be automatically closed.\n| **closeOnTab** | `boolean` | `true` | When `true` and the input is focused, pressing the `tab` key will close the datepicker.\n| **timeConstraints** | `object` | `null` | Add some constraints to the timepicker. It accepts an `object` with the format `{ hours: { min: 9, max: 15, step: 2 }}`, this example means the hours can't be lower than `9` and higher than `15`, and it will change adding or subtracting `2` hours everytime the buttons are clicked. The constraints can be added to the `hours`, `minutes`, `seconds` and `milliseconds`.\n| **closeOnClickOutside** | `boolean` | `false` | When `true`, keep the datepicker open when click event is triggered outside of component. When `false`, close it.\n\n## i18n\nDifferent language and date formats are supported by react-datetime. React uses [Moment.js](http://momentjs.com/) to format the dates, and the easiest way of changing the language of the calendar is [changing the Moment.js locale](http://momentjs.com/docs/#/i18n/changing-locale/).\n\n```js\nvar moment = require('moment');\nrequire('moment/locale/fr');\n// Now react-datetime will be in french\n```\n\nIf there are multiple locales loaded, you can use the prop `locale` to define what language shall be used by the instance.\n```js\n<Datetime locale=\"fr-ca\" />\n<Datetime locale=\"de\" />\n```\n[Here you can see the i18n example working](http://codepen.io/simeg/pen/yVVjdJ).\n\n## Customize the Input Appearance\nIt is possible to customize the way that the input is displayed. The simplest is to supply `inputProps` which get assigned to the default `<input />` element within the component.\n\n```js\n<Datetime inputProps={{ placeholder: 'N/A', disabled: true }}>\n```\n\nAlternatively, if you need to render different content than an `<input />` element, you may supply a `renderInput` function which is called instead.\n\n```js\nvar MyDTPicker = React.createClass({\n    render: function(){\n        return <Datetime renderInput={ this.renderInput } />;\n    },\n    renderInput: function( props, openCalendar, closeCalendar ){\n        function clear(){\n            props.onChange({target: {value: ''}});\n        }\n        return (\n            <div>\n                <input {...props} />\n                <button onClick={openCalendar}>open calendar</button>\n                <button onClick={closeCalendar}>close calendar</button>\n                <button onClick={clear}>clear</button>\n            </div>\n        );\n    },\n});\n```\n\n## Customize the Datepicker Appearance\nIt is possible to customize the way that the datepicker display the days, months and years in the calendar. To adapt the calendar for every need it is possible to use the props `renderDay(props, currentDate, selectedDate)`, `renderMonth(props, month, year, selectedDate)` and `renderYear(props, year, selectedDate)` to customize the output of each rendering method.\n\n```js\nvar MyDTPicker = React.createClass({\n    render: function(){\n        return <Datetime\n            renderDay={ this.renderDay }\n            renderMonth={ this.renderMonth }\n            renderYear={ this.renderYear }\n        />;\n    },\n    renderDay: function( props, currentDate, selectedDate ){\n        return <td {...props}>{ '0' + currentDate.date() }</td>;\n    },\n    renderMonth: function( props, month, year, selectedDate ){\n        return <td {...props}>{ month }</td>;\n    },\n    renderYear: function( props, year, selectedDate ){\n        return <td {...props}>{ year % 100 }</td>;\n    }\n});\n```\n[You can see a customized calendar here.](http://codepen.io/simeg/pen/YppLmO)\n\n#### Method Parameters\n* `props` is the object that the datepicker has calculated for this object. It is convenient to use this object as the `props` for your custom component, since it knows how to handle the click event and its `className` attribute is used by the default styles.\n* `selectedDate` and `currentDate` are [moment objects](http://momentjs.com) and can be used to change the output depending on the selected date, or the date for the current day.\n* `month` and `year` are the numeric representation of the current month and year to be displayed. Notice that the possible `month` values range from `0` to `11`.\n\n## Specify Available Units\nYou can filter out what you want the user to be able to pick by using `dateFormat` and `timeFormat`, e.g. to create a timepicker, yearpicker etc.\n\nIn this example the component is being used as a *timepicker* and can *only be used for selecting a time*.\n```js\n<Datetime dateFormat={false} />\n```\n[Working example of a timepicker here.](http://codepen.io/simeg/pen/mRQBrp)\n\nIn this example you can *only select a year and month*.\n```js\n<Datetime dateFormat=\"YYYY-MM\" timeFormat={false} />\n```\n[Working example of only selecting year and month here.](http://codepen.io/simeg/pen/apQLdd)\n\n## Selectable Dates\nIt is possible to disable dates in the calendar if the user are not allowed to select them, e.g. dates in the past. This is done using the prop `isValidDate`, which admits a function in the form `function(currentDate, selectedDate)` where both arguments are [moment objects](http://momentjs.com). The function shall return `true` for selectable dates, and `false` for disabled ones.\n\nIn the example below are *all dates before today* disabled.\n\n```js\n// Let's use the static moment reference in the Datetime component\nvar yesterday = Datetime.moment().subtract( 1, 'day' );\nvar valid = function( current ){\n    return current.isAfter( yesterday );\n};\n<Datetime isValidDate={ valid } />\n```\n[Working example of disabled days here.](http://codepen.io/simeg/pen/XNNYJg)\n\nIt's also possible to disable *the weekends*, as shown in the example below.\n```js\nvar valid = function( current ){\n    return current.day() !== 0 && current.day() !== 6;\n};\n<Datetime isValidDate={ valid } />\n```\n[Working example of disabled weekends here.](http://codepen.io/simeg/pen/jVVKWq)\n\n## Usage with TypeScript\n\nThis project includes typings for TypeScript versions 1.8 and 2.0. Additional typings are not\nrequired.\n\nTypings for 1.8 are found in `react-datetime.d.ts` and typings for 2.0 are found in `typings/index.d.ts`.\n\n```js\nimport * as Datetime from 'react-datetime';\n\nclass MyDTPicker extends React.Component<MyDTPickerProps, MyDTPickerState> {\n    render() JSX.Element {\n        return <Datetime />;\n    }\n}\n```\n\n## Contributions\nFor information about how to contribute, see the [CONTRIBUTING](.github/CONTRIBUTING.md) file.\n\n## Development\n```sh\nnpm run dev\n```\nThis will start a local `webpack-dev-server` based on `example/example.js` where most development can be done.\n\nIf you want to develop using the component inside a React application, we recommend that you use [react-datetime-playground](https://github.com/arqex/react-datetime-playground).\n\n### [Changelog](CHANGELOG.md)\n\n### [MIT Licensed](LICENSE.md)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@3.0.0-beta.1","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"dist":{"integrity":"sha512-O2UkIYvQFRH1/1TRGobKsjzMV7pOEZH4l7KRubcm+R2+PV83rZmFWHsdelyezskKfKKD5QpxPJ5Ub3ypwOyRwg==","shasum":"2f7b87b45e8d7455c0d35087dccb6474c269ef78","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-3.0.0-beta.1.tgz","fileCount":15,"unpackedSize":556552,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcG4SeCRA9TVsSAnZWagAAgoMP/3/VBkzEKAjx6QCNlvRP\n34C6t8prtllmcAcZKq86o8qLWehEEPf/0vzi8JI1PzF69yd3unFmJhrLK/Ht\nLs8W3Ou9XsRBWCqhnsXCvXuefmLwxQgPHiRNEtHw4AilazFM56++OzYr6hj7\njKra3nu/nUTnSZF3Vdr5fzai1/nprqGHiLhoYyw6fO26x5+SBMa0lEww1AvN\nRRR0Xw5hwOC/00aa5vLrl8dUWuSp1rK7BN7PouPYNxHY9QgoU//ZWO+FiUzW\nfWQAdT9VEpX5N9kGjScOjudLadLt0NDpUA5C/3g8pzKV10BzGR3L+oMFHRGl\nS1J1nLmlk422uZJX1ft24zrS2NMxA+/BN2rEItaPA9RQ/Fjg3V85VlWtxE+V\nF31B/fWEYoVZKsH2TkQcYIFHmrrcnjUBi2JRf6Ept4ltJVuicBJ/oplKJkC6\nzabyNSnJQ8IlX/C30w+fMCtCfpUF541vK0msK2vo0dYrVnqo1ey2GOvZj4Uv\nE1sZ98iXbGYaKyfv/Yddhk+ceFzGvfgpMMQLc/hYbaBKvOAgS8FhgV/2C+Nn\n8FqIZA/EPnHNy23hVHbdskIHEmEKwIr8/jlNCHMCA3PMOC5ZotKBFmpzSz/W\n7AvzVJaTD4Vxe28OnQ2/GYagkVMTVt6EnjVM8Huew198A4MHBwKXx+rSqIVW\nyb4r\r\n=CQUB\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDZw+nOHGfTJs8ruJNRc8HBt66sE/Eh+dOaoSPJvFJsFAiBS9EmF2cNr8wytxr94K7eT0pX5m+r+HiONnVznM5ND3A=="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"layneanderson","email":"layneand@gmail.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime_3.0.0-beta.1_1545307294000_0.37783893708622585"},"_hasShrinkwrap":false},"3.0.0-beta.2":{"name":"react-datetime","version":"3.0.0-beta.2","description":"A lightweight but complete datetime picker React.js component","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","typings":"./DateTime.d.ts","scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"node ./node_modules/eslint/bin/eslint.js src/ DateTime.js test/ && echo 'Linting OK! ?'","notify-pre-commit-hook":"echo '### Starting pre-commit hook ?'","test":"node ./node_modules/jest/bin/jest.js","test:typings":"node ./node_modules/typescript/bin/tsc -p ./typings","test:snapshot":"node ./node_modules/jest/bin/jest.js snapshot","test:snapshot:update":"node ./node_modules/jest/bin/jest.js snapshot --updateSnapshot","test:all":"echo 'Running tests...' && npm run test:typings && npm run test && echo 'All tests passed! ?'","test:watch":"node ./node_modules/jest/bin/jest.js --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":">=15","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^3.0.0","enzyme-adapter-react-15":"^1.0.5","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^5.2.0","moment":">=2.16.0","moment-timezone":"^0.5.13","pre-commit":"^1.1.3","react":"^15.5.0","react-addons-test-utils":">=0.13","react-dom":"^15.5.0","react-test-renderer":"^15.5.0","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-stream":"^3.2.0"},"dependencies":{"create-react-class":"^15.6.3","object-assign":"^3.0.0","prop-types":"^15.5.7","react-onclickoutside":"^6.5.0"},"pre-commit":["notify-pre-commit-hook","lint","test:all"],"readme":"# react-datetime\n\n[![Build Status](https://secure.travis-ci.org/YouCanBookMe/react-datetime.svg)](https://travis-ci.org/YouCanBookMe/react-datetime.svg?branch=master)\n[![npm version](https://badge.fury.io/js/react-datetime.svg)](http://badge.fury.io/js/react-datetime)\n\nA date and time picker in the same React.js component. It can be used as a datepicker, timepicker or both at the same time. It is **highly customizable** and it even allows to edit date's milliseconds.\n\nThis project started as a fork of https://github.com/quri/react-bootstrap-datetimepicker but the code and the API has changed a lot.\n\n## Installation\n\nInstall using npm:\n```sh\nnpm install --save react-datetime\n```\n\nInstall using yarn:\n```sh\nyarn add react-datetime\n```\n\n## Usage\n\n[React.js](http://facebook.github.io/react/) and [Moment.js](http://momentjs.com/) are peer dependencies for react-datetime (as well as [Moment.js timezones](https://momentjs.com/timezone/) if you want to use the `displayTimeZone` prop). These dependencies are not installed along with react-datetime automatically, but your project needs to have them installed in order to make the datepicker work. You can then use the datepicker like in the example below.\n\n\n```js\nrequire('react-datetime');\n\n...\n\nrender: function() {\n    return <Datetime />;\n}\n```\n[See this example working](http://codepen.io/simeg/pen/mEmQmP).\n\n**Don't forget to add the [CSS stylesheet](https://github.com/YouCanBookMe/react-datetime/blob/master/css/react-datetime.css) to make it work out of the box.**\n\n## API\n\n| Name         | Type    | Default | Description |\n| ------------ | ------- | ------- | ----------- |\n| **value** | `Date` | `new Date()` | Represents the selected date by the component, in order to use it as a [controlled component](https://facebook.github.io/react/docs/forms.html#controlled-components). This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. |\n| **initialValue** | `Date` | `new Date()` | Represents the selected date for the component to use it as a [uncontrolled component](https://facebook.github.io/react/docs/uncontrolled-components.html). This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. If you need to set the selected date programmatically after the picker is initialized, please use the `value` prop instead. |\n| **initialViewDate** | `Date` | `new Date()` | Define the month/year/decade/time which is viewed on opening the calendar. This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. |\n| **initialViewMode** | `string` or `number` | `'days'` | The default view to display when the picker is shown for the first time. (`'years'`, `'months'`, `'days'`, `'time'`) |\n| **updateOnView** | `string` | Intelligent guess | In the calendar we can navigate through years and months without actualling updating the selected view. Only when we get to one view called the \"updating view\", we make a selection there and the value gets updated, triggering an `onChange` event. By default the updating view will get guessed by using the `dateFormat` so if our dates only show months and never days, the update is done in the `months` view. If we set `updateOnView=\"time\"` selecting a day will navigate to the time view. The time view always updates the selected date, never navigates. If `closeOnSelect={ true }`, making a selection in the view defined by `updateOnView` will close the calendar. |\n| **dateFormat**   | `boolean` or `string`  | `true` | Defines the format for the date. It accepts any [Moment.js date format](http://momentjs.com/docs/#/displaying/format/) (not in localized format). If `true` the date will be displayed using the defaults for the current locale. If `false` the datepicker is disabled and the component can be used as timepicker, see [available units docs](#specify-available-units). |\n| **timeFormat**   | `boolean` or `string`  | `true` | Defines the format for the time. It accepts any [Moment.js time format](http://momentjs.com/docs/#/displaying/format/) (not in localized format). If `true` the time will be displayed using the defaults for the current locale. If `false` the timepicker is disabled and the component can be used as datepicker, see [available units docs](#specify-available-units). |\n| **input** | `boolean` | `true` | Whether to show an input field to edit the date manually. |\n| **open** | `boolean` | `null` | Whether to open or close the picker. If not set react-datetime will open the datepicker on input focus and close it on click outside. |\n| **locale** | `string` | `null` | Manually set the locale for the react-datetime instance. Moment.js locale needs to be loaded to be used, see [i18n docs](#i18n).\n| **utc** | `boolean` | `false` | When true, input time values will be interpreted as UTC (Zulu time) by Moment.js. Otherwise they will default to the user's local timezone.\n| **displayTimeZone** | `string` | `null` | **Needs [moment's timezone](https://momentjs.com/timezone/) available in your project.** When specified, input time values will be displayed in the given time zone. Otherwise they will default to the user's local timezone (unless `utc` specified).\n| **onChange** | `function` | empty function | Callback trigger when the date changes. The callback receives the selected `moment` object as only parameter, if the date in the input is valid. If the date in the input is not valid, the callback receives the value of the input (a string). |\n| **onFocus** | `function` | empty function | Callback trigger for when the user opens the datepicker. The callback receives an event of type SyntheticEvent. |\n| **onBlur** | `function` | empty function | Callback trigger for when the user clicks outside of the input, simulating a regular onBlur. The callback receives the selected `moment` object as only parameter, if the date in the input is valid. If the date in the input is not valid, the callback returned. |\n| **onNavigate** | `function` | empty function | Callback trigger when the view mode changes. The callback receives the selected view mode string (`years`, `months`, `days` or `time`) as only parameter.|\n| **onBeforeNavigate** | `function` | ( nextView, currentView, viewDate ) => nextView | Allows to intercept a change of the calendar view. The accepted function receives the view that it's supposed to navigate to, the view that is showing currently and the date currently shown in the view. Return a viewMode ( default ones are `years`, `months`, `days` or `time`) to navigate to it. If the function returns a \"falsy\" value, the navigation is stopped and we will remain in the current view. |\n| **onNavigateBack** | `function` | empty function | Callback trigger when the user navigates to the previous month, year or decade. The callback receives the amount and type ('month', 'year') as parameters. |\n| **onNavigateForward** | `function` | empty function | Callback trigger when the user navigates to the next month, year or decade. The callback receives the amount and type ('month', 'year') as parameters. |\n| **className** | `string` or `string array` | `''` | Extra class name for the outermost markup element. |\n| **inputProps** | `object` | `undefined` | Defines additional attributes for the input element of the component. For example: `onClick`, `placeholder`, `disabled`, `required`, `name` and `className` (`className` *sets* the class attribute for the input element). See [Customize the Input Appearance](#customize-the-input-appearance). |\n| **isValidDate** | `function` | `() => true` | Define the dates that can be selected. The function receives `(currentDate, selectedDate)` and shall return a `true` or `false` whether the `currentDate` is valid or not. See [selectable dates](#selectable-dates).|\n| **renderInput** | `function` | `undefined` | Replace the rendering of the input element. The function has the following arguments: the default calculated `props` for the input, `openCalendar` (a function which opens the calendar) and `closeCalendar` (a function which closes the calendar). Must return a React component or `null`. See [Customize the Input Appearance](#customize-the-input-appearance). |\n| **renderView** | `function` | `(viewType, renderDefault) => renderDefault()` | Customize the way the calendar is rendered. The accepted function receives the type of the view\nit's going to be rendered `'years', 'months', 'days', 'time'` and a function to render the default\nview of react-datetime, this way it's possible to wrap the original view adding our own markup or\noverride it completely with our own code. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderDay** | `function` | `DOM.td(day)` | Customize the way that the days are shown in the daypicker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderMonth** | `function` | `DOM.td(month)` | Customize the way that the months are shown in the monthpicker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, the `month` and the `year` to be shown, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderYear** | `function` | `DOM.td(year)` | Customize the way that the years are shown in the year picker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, the `year` to be shown, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **strictParsing** | `boolean` | `true` | Whether to use Moment.js's [strict parsing](http://momentjs.com/docs/#/parsing/string-format/) when parsing input.\n| **closeOnSelect** | `boolean` | `false` | When `true`, once the day has been selected, the datepicker will be automatically closed.\n| **closeOnTab** | `boolean` | `true` | When `true` and the input is focused, pressing the `tab` key will close the datepicker.\n| **timeConstraints** | `object` | `null` | Add some constraints to the timepicker. It accepts an `object` with the format `{ hours: { min: 9, max: 15, step: 2 }}`, this example means the hours can't be lower than `9` and higher than `15`, and it will change adding or subtracting `2` hours everytime the buttons are clicked. The constraints can be added to the `hours`, `minutes`, `seconds` and `milliseconds`.\n| **closeOnClickOutside** | `boolean` | `false` | When `true`, keep the datepicker open when click event is triggered outside of component. When `false`, close it.\n\n## i18n\nDifferent language and date formats are supported by react-datetime. React uses [Moment.js](http://momentjs.com/) to format the dates, and the easiest way of changing the language of the calendar is [changing the Moment.js locale](http://momentjs.com/docs/#/i18n/changing-locale/).\n\n```js\nvar moment = require('moment');\nrequire('moment/locale/fr');\n// Now react-datetime will be in french\n```\n\nIf there are multiple locales loaded, you can use the prop `locale` to define what language shall be used by the instance.\n```js\n<Datetime locale=\"fr-ca\" />\n<Datetime locale=\"de\" />\n```\n[Here you can see the i18n example working](http://codepen.io/simeg/pen/yVVjdJ).\n\n## Customize the Input Appearance\nIt is possible to customize the way that the input is displayed. The simplest is to supply `inputProps` which get assigned to the default `<input />` element within the component.\n\n```js\n<Datetime inputProps={{ placeholder: 'N/A', disabled: true }}>\n```\n\nAlternatively, if you need to render different content than an `<input />` element, you may supply a `renderInput` function which is called instead.\n\n```js\nvar MyDTPicker = React.createClass({\n    render: function(){\n        return <Datetime renderInput={ this.renderInput } />;\n    },\n    renderInput: function( props, openCalendar, closeCalendar ){\n        function clear(){\n            props.onChange({target: {value: ''}});\n        }\n        return (\n            <div>\n                <input {...props} />\n                <button onClick={openCalendar}>open calendar</button>\n                <button onClick={closeCalendar}>close calendar</button>\n                <button onClick={clear}>clear</button>\n            </div>\n        );\n    },\n});\n```\n\n## Customize the Datepicker Appearance\nIt is possible to customize the way that the datepicker display the days, months and years in the calendar. To adapt the calendar for every need it is possible to use the props `renderDay(props, currentDate, selectedDate)`, `renderMonth(props, month, year, selectedDate)` and `renderYear(props, year, selectedDate)` to customize the output of each rendering method.\n\n```js\nvar MyDTPicker = React.createClass({\n    render: function(){\n        return <Datetime\n            renderDay={ this.renderDay }\n            renderMonth={ this.renderMonth }\n            renderYear={ this.renderYear }\n        />;\n    },\n    renderDay: function( props, currentDate, selectedDate ){\n        return <td {...props}>{ '0' + currentDate.date() }</td>;\n    },\n    renderMonth: function( props, month, year, selectedDate ){\n        return <td {...props}>{ month }</td>;\n    },\n    renderYear: function( props, year, selectedDate ){\n        return <td {...props}>{ year % 100 }</td>;\n    }\n});\n```\n[You can see a customized calendar here.](http://codepen.io/simeg/pen/YppLmO)\n\n#### Method Parameters\n* `props` is the object that the datepicker has calculated for this object. It is convenient to use this object as the `props` for your custom component, since it knows how to handle the click event and its `className` attribute is used by the default styles.\n* `selectedDate` and `currentDate` are [moment objects](http://momentjs.com) and can be used to change the output depending on the selected date, or the date for the current day.\n* `month` and `year` are the numeric representation of the current month and year to be displayed. Notice that the possible `month` values range from `0` to `11`.\n\n## Specify Available Units\nYou can filter out what you want the user to be able to pick by using `dateFormat` and `timeFormat`, e.g. to create a timepicker, yearpicker etc.\n\nIn this example the component is being used as a *timepicker* and can *only be used for selecting a time*.\n```js\n<Datetime dateFormat={false} />\n```\n[Working example of a timepicker here.](http://codepen.io/simeg/pen/mRQBrp)\n\nIn this example you can *only select a year and month*.\n```js\n<Datetime dateFormat=\"YYYY-MM\" timeFormat={false} />\n```\n[Working example of only selecting year and month here.](http://codepen.io/simeg/pen/apQLdd)\n\n## Selectable Dates\nIt is possible to disable dates in the calendar if the user are not allowed to select them, e.g. dates in the past. This is done using the prop `isValidDate`, which admits a function in the form `function(currentDate, selectedDate)` where both arguments are [moment objects](http://momentjs.com). The function shall return `true` for selectable dates, and `false` for disabled ones.\n\nIn the example below are *all dates before today* disabled.\n\n```js\n// Let's use the static moment reference in the Datetime component\nvar yesterday = Datetime.moment().subtract( 1, 'day' );\nvar valid = function( current ){\n    return current.isAfter( yesterday );\n};\n<Datetime isValidDate={ valid } />\n```\n[Working example of disabled days here.](http://codepen.io/simeg/pen/XNNYJg)\n\nIt's also possible to disable *the weekends*, as shown in the example below.\n```js\nvar valid = function( current ){\n    return current.day() !== 0 && current.day() !== 6;\n};\n<Datetime isValidDate={ valid } />\n```\n[Working example of disabled weekends here.](http://codepen.io/simeg/pen/jVVKWq)\n\n## Usage with TypeScript\n\nThis project includes typings for TypeScript versions 1.8 and 2.0. Additional typings are not\nrequired.\n\nTypings for 1.8 are found in `react-datetime.d.ts` and typings for 2.0 are found in `typings/index.d.ts`.\n\n```js\nimport * as Datetime from 'react-datetime';\n\nclass MyDTPicker extends React.Component<MyDTPickerProps, MyDTPickerState> {\n    render() JSX.Element {\n        return <Datetime />;\n    }\n}\n```\n\n## Contributions\nFor information about how to contribute, see the [CONTRIBUTING](.github/CONTRIBUTING.md) file.\n\n## Development\n```sh\nnpm run dev\n```\nThis will start a local `webpack-dev-server` based on `example/example.js` where most development can be done.\n\nIf you want to develop using the component inside a React application, we recommend that you use [react-datetime-playground](https://github.com/arqex/react-datetime-playground).\n\n### [Changelog](CHANGELOG.md)\n\n### [MIT Licensed](LICENSE.md)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@3.0.0-beta.2","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"dist":{"integrity":"sha512-wBIz+qaKM015KSyySdbRoiFq2/3/ZEzzDyFoGL5y7FTBKvpJrxvSu3FqnOuyHQKzEMfvt3/zGO96iCNbIP5cug==","shasum":"0984d287ffa62bc63e426268a24a293a900154ac","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-3.0.0-beta.2.tgz","fileCount":15,"unpackedSize":559513,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcHMlbCRA9TVsSAnZWagAA8gwP/iIrU0EulPS4AoNVB4mg\nxkZ7e/lFnfTVztMN0ZkH6zoPuCSJ1MoxA1xUKRVfB74fdce68t0r/UENpL2g\nGLWfBU2yKZptt1o00bMyGNV8pCqUQwtkw0+TAfsfeEySJR97/0zflZaMrTmF\n49B+TvZxkNqMcoCjZBQ/MJDkJy8DwAAD052wPUMbO/v4+BNDeYk6IBtXLq1/\nNExtr31KCjniYnUW0M1jwFVuR60tidH72nNML1AdZgpjDRgcUD031orWxhyL\nyhXSLhwups3LdC9F/f8Pi14ABEMmIE0naYZq56x2IcCTLnA2wMCXRt3cw7fJ\nuBfkuMSdvfOhnjN9jIWXR3uRO/7ETCQ5yNwcsN1/31yejVgSqONZtZmFh7kK\nOF+wlTfz0WqVFHuRhNaZFyyx6HNJc4k/+Fi3b7sA80TuRzIvG8i8DJ1es8ny\nxSgsMxD7ZeSUN8FLIz60LgOO2jlZ1iLWwcN42GaLuvwmvwCUk7HTsx9C8xIP\n8ERhd0lVWK6Pu+tVDQAi3bpP/gIyR0XHQFPIhoEqO3YkGWFXwjA2lAa21jKZ\nLRiQKGXgiRtI5jjWX9QTl5XHEqrH3H5DZajk2LoA9k8XhcS7zcpEHFul9okY\n90PTz5RVVNiL7ndIRvMhAxPAVGomywfac6mqaQ8CYA2j3+L/Ill3UIHoVEQE\nCk7s\r\n=4kvP\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCvuwxzDt2qAdBIHlK80jD93FMGnByYTM5TLdVHlhqyzgIhAPKQ6aKlHL1d3OKAlBB/lQeKdyeWJx8IDDiyKEIzHIlI"}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"layneanderson","email":"layneand@gmail.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime_3.0.0-beta.2_1545390427209_0.6806549541805607"},"_hasShrinkwrap":false},"3.0.0-beta.3":{"name":"react-datetime","version":"3.0.0-beta.3","description":"A lightweight but complete datetime picker React.js component","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","typings":"./DateTime.d.ts","scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"node ./node_modules/eslint/bin/eslint.js src/ DateTime.js test/ && echo 'Linting OK! ?'","notify-pre-commit-hook":"echo '### Starting pre-commit hook ?'","test":"node ./node_modules/jest/bin/jest.js","test:typings":"node ./node_modules/typescript/bin/tsc -p ./typings","test:snapshot":"node ./node_modules/jest/bin/jest.js snapshot","test:snapshot:update":"node ./node_modules/jest/bin/jest.js snapshot --updateSnapshot","test:all":"echo 'Running tests...' && npm run test:typings && npm run test && echo 'All tests passed! ?'","test:watch":"node ./node_modules/jest/bin/jest.js --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":">=15","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^3.0.0","enzyme-adapter-react-15":"^1.0.5","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^5.2.0","moment":">=2.16.0","moment-timezone":"^0.5.13","pre-commit":"^1.1.3","react":"^15.5.0","react-addons-test-utils":">=0.13","react-dom":"^15.5.0","react-test-renderer":"^15.5.0","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-stream":"^3.2.0"},"dependencies":{"create-react-class":"^15.6.3","object-assign":"^3.0.0","prop-types":"^15.5.7","react-onclickoutside":"^6.7.1"},"pre-commit":["notify-pre-commit-hook","lint","test:all"],"readme":"# react-datetime\n\n[![Build Status](https://secure.travis-ci.org/YouCanBookMe/react-datetime.svg)](https://travis-ci.org/YouCanBookMe/react-datetime.svg?branch=master)\n[![npm version](https://badge.fury.io/js/react-datetime.svg)](http://badge.fury.io/js/react-datetime)\n\nA date and time picker in the same React.js component. It can be used as a datepicker, timepicker or both at the same time. It is **highly customizable** and it even allows to edit date's milliseconds.\n\nThis project started as a fork of https://github.com/quri/react-bootstrap-datetimepicker but the code and the API has changed a lot.\n\n## Installation\n\nInstall using npm:\n```sh\nnpm install --save react-datetime\n```\n\nInstall using yarn:\n```sh\nyarn add react-datetime\n```\n\n## Usage\n\n[React.js](http://facebook.github.io/react/) and [Moment.js](http://momentjs.com/) are peer dependencies for react-datetime (as well as [Moment.js timezones](https://momentjs.com/timezone/) if you want to use the `displayTimeZone` prop). These dependencies are not installed along with react-datetime automatically, but your project needs to have them installed in order to make the datepicker work. You can then use the datepicker like in the example below.\n\n\n```js\nrequire('react-datetime');\n\n...\n\nrender: function() {\n    return <Datetime />;\n}\n```\n[See this example working](http://codepen.io/simeg/pen/mEmQmP).\n\n**Don't forget to add the [CSS stylesheet](https://github.com/YouCanBookMe/react-datetime/blob/master/css/react-datetime.css) to make it work out of the box.**\n\n## API\n\nBelow we have all the props that we can use with the `<DateTime>` component. There are also some methods that can be used imperatively.\n\n| Name         | Type    | Default | Description |\n| ------------ | ------- | ------- | ----------- |\n| **value** | `Date` | `new Date()` | Represents the selected date by the component, in order to use it as a [controlled component](https://facebook.github.io/react/docs/forms.html#controlled-components). This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. |\n| **initialValue** | `Date` | `new Date()` | Represents the selected date for the component to use it as a [uncontrolled component](https://facebook.github.io/react/docs/uncontrolled-components.html). This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. If you need to set the selected date programmatically after the picker is initialized, please use the `value` prop instead. |\n| **initialViewDate** | `Date` | `new Date()` | Define the month/year/decade/time which is viewed on opening the calendar. This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. If you want to set the view date after the component has been initialize [see the imperative API](#imperative-api). |\n| **initialViewMode** | `string` or `number` | `'days'` | The default view to display when the picker is shown for the first time (`'years'`, `'months'`, `'days'`, `'time'`). If you want to set the view mode after the component has been initialize [see the imperative API](#imperative-api). |\n| **updateOnView** | `string` | Intelligent guess | In the calendar we can navigate through years and months without actualling updating the selected view. Only when we get to one view called the \"updating view\", we make a selection there and the value gets updated, triggering an `onChange` event. By default the updating view will get guessed by using the `dateFormat` so if our dates only show months and never days, the update is done in the `months` view. If we set `updateOnView=\"time\"` selecting a day will navigate to the time view. The time view always updates the selected date, never navigates. If `closeOnSelect={ true }`, making a selection in the view defined by `updateOnView` will close the calendar. |\n| **dateFormat**   | `boolean` or `string`  | `true` | Defines the format for the date. It accepts any [Moment.js date format](http://momentjs.com/docs/#/displaying/format/) (not in localized format). If `true` the date will be displayed using the defaults for the current locale. If `false` the datepicker is disabled and the component can be used as timepicker, see [available units docs](#specify-available-units). |\n| **timeFormat**   | `boolean` or `string`  | `true` | Defines the format for the time. It accepts any [Moment.js time format](http://momentjs.com/docs/#/displaying/format/) (not in localized format). If `true` the time will be displayed using the defaults for the current locale. If `false` the timepicker is disabled and the component can be used as datepicker, see [available units docs](#specify-available-units). |\n| **input** | `boolean` | `true` | Whether to show an input field to edit the date manually. |\n| **open** | `boolean` | `null` | Whether to open or close the picker. If not set react-datetime will open the datepicker on input focus and close it on click outside. |\n| **locale** | `string` | `null` | Manually set the locale for the react-datetime instance. Moment.js locale needs to be loaded to be used, see [i18n docs](#i18n).\n| **utc** | `boolean` | `false` | When true, input time values will be interpreted as UTC (Zulu time) by Moment.js. Otherwise they will default to the user's local timezone.\n| **displayTimeZone** | `string` | `null` | **Needs [moment's timezone](https://momentjs.com/timezone/) available in your project.** When specified, input time values will be displayed in the given time zone. Otherwise they will default to the user's local timezone (unless `utc` specified).\n| **onChange** | `function` | empty function | Callback trigger when the date changes. The callback receives the selected `moment` object as only parameter, if the date in the input is valid. If the date in the input is not valid, the callback receives the value of the input (a string). |\n| **onFocus** | `function` | empty function | Callback trigger for when the user opens the datepicker. The callback receives an event of type SyntheticEvent. |\n| **onBlur** | `function` | empty function | Callback trigger for when the user clicks outside of the input, simulating a regular onBlur. The callback receives the selected `moment` object as only parameter, if the date in the input is valid. If the date in the input is not valid, the callback returned. |\n| **onNavigate** | `function` | empty function | Callback trigger when the view mode changes. The callback receives the selected view mode string (`years`, `months`, `days` or `time`) as only parameter.|\n| **onBeforeNavigate** | `function` | ( nextView, currentView, viewDate ) => nextView | Allows to intercept a change of the calendar view. The accepted function receives the view that it's supposed to navigate to, the view that is showing currently and the date currently shown in the view. Return a viewMode ( default ones are `years`, `months`, `days` or `time`) to navigate to it. If the function returns a \"falsy\" value, the navigation is stopped and we will remain in the current view. |\n| **onNavigateBack** | `function` | empty function | Callback trigger when the user navigates to the previous month, year or decade. The callback receives the amount and type ('month', 'year') as parameters. |\n| **onNavigateForward** | `function` | empty function | Callback trigger when the user navigates to the next month, year or decade. The callback receives the amount and type ('month', 'year') as parameters. |\n| **className** | `string` or `string array` | `''` | Extra class name for the outermost markup element. |\n| **inputProps** | `object` | `undefined` | Defines additional attributes for the input element of the component. For example: `onClick`, `placeholder`, `disabled`, `required`, `name` and `className` (`className` *sets* the class attribute for the input element). See [Customize the Input Appearance](#customize-the-input-appearance). |\n| **isValidDate** | `function` | `() => true` | Define the dates that can be selected. The function receives `(currentDate, selectedDate)` and shall return a `true` or `false` whether the `currentDate` is valid or not. See [selectable dates](#selectable-dates).|\n| **renderInput** | `function` | `undefined` | Replace the rendering of the input element. The function has the following arguments: the default calculated `props` for the input, `openCalendar` (a function which opens the calendar) and `closeCalendar` (a function which closes the calendar). Must return a React component or `null`. See [Customize the Input Appearance](#customize-the-input-appearance). |\n| **renderView** | `function` | `(viewMode, renderDefault) => renderDefault()` | Customize the way the calendar is rendered. The accepted function receives the type of the view it's going to be rendered `'years', 'months', 'days', 'time'` and a function to render the default view of react-datetime, this way it's possible to wrap the original view adding our own markup or override it completely with our own code. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderDay** | `function` | `DOM.td(day)` | Customize the way that the days are shown in the daypicker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderMonth** | `function` | `DOM.td(month)` | Customize the way that the months are shown in the monthpicker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, the `month` and the `year` to be shown, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderYear** | `function` | `DOM.td(year)` | Customize the way that the years are shown in the year picker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, the `year` to be shown, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **strictParsing** | `boolean` | `true` | Whether to use Moment.js's [strict parsing](http://momentjs.com/docs/#/parsing/string-format/) when parsing input.\n| **closeOnSelect** | `boolean` | `false` | When `true`, once the day has been selected, the datepicker will be automatically closed.\n| **closeOnTab** | `boolean` | `true` | When `true` and the input is focused, pressing the `tab` key will close the datepicker.\n| **timeConstraints** | `object` | `null` | Add some constraints to the timepicker. It accepts an `object` with the format `{ hours: { min: 9, max: 15, step: 2 }}`, this example means the hours can't be lower than `9` and higher than `15`, and it will change adding or subtracting `2` hours everytime the buttons are clicked. The constraints can be added to the `hours`, `minutes`, `seconds` and `milliseconds`.\n| **closeOnClickOutside** | `boolean` | `false` | When `true`, keep the datepicker open when click event is triggered outside of component. When `false`, close it.\n\n## Imperative API\nBesides controlling the selected date, there is a navigation through months, years, decades that react-datetime handles for us. We can interfere in it, stopping view transtions by using the prop `onBeforeNavigate`, but we can also navigate to a specific view and date by using some imperative methods.\n\nTo do so, we need to create our component with a `ref` prop amd use the reference.\n```js\n// This would be the code to render the picker\n<DateTime ref=\"datetime\" />\n\n// ... once rendered we can use the imperative API\n// let's show the years view\nthis.refs.datetime.setViewMode('years')\n```\n\nAvailable methods are:\n* **setViewMode( viewMode )**: Set the view currently shown by the calendar. View modes shipped with react-datetime are `years`, `months`, `days` and `time`.\n* **setViewDate( date )**: Set the date that is currently shown in the calendar. This is independent from the selected date and it's the one used to navigate through months or days in the calendar. It accepts a string in the format of the current locale, a `Date` or a `Moment` object as parameter.\n\n## i18n\nDifferent language and date formats are supported by react-datetime. React uses [Moment.js](http://momentjs.com/) to format the dates, and the easiest way of changing the language of the calendar is [changing the Moment.js locale](http://momentjs.com/docs/#/i18n/changing-locale/).\n\n```js\nvar moment = require('moment');\nrequire('moment/locale/fr');\n// Now react-datetime will be in french\n```\n\nIf there are multiple locales loaded, you can use the prop `locale` to define what language shall be used by the instance.\n```js\n<Datetime locale=\"fr-ca\" />\n<Datetime locale=\"de\" />\n```\n[Here you can see the i18n example working](http://codepen.io/simeg/pen/yVVjdJ).\n\n## Customize the Input Appearance\nIt is possible to customize the way that the input is displayed. The simplest is to supply `inputProps` which get assigned to the default `<input />` element within the component.\n\n```js\n<Datetime inputProps={{ placeholder: 'N/A', disabled: true }}>\n```\n\nAlternatively, if you need to render different content than an `<input />` element, you may supply a `renderInput` function which is called instead.\n\n```js\nvar MyDTPicker = React.createClass({\n    render: function(){\n        return <Datetime renderInput={ this.renderInput } />;\n    },\n    renderInput: function( props, openCalendar, closeCalendar ){\n        function clear(){\n            props.onChange({target: {value: ''}});\n        }\n        return (\n            <div>\n                <input {...props} />\n                <button onClick={openCalendar}>open calendar</button>\n                <button onClick={closeCalendar}>close calendar</button>\n                <button onClick={clear}>clear</button>\n            </div>\n        );\n    },\n});\n```\n\n## Customize the Datepicker Appearance\nIt is possible to customize the way that the datepicker display the days, months and years in the calendar. To adapt the calendar for every need it is possible to use the props `renderDay(props, currentDate, selectedDate)`, `renderMonth(props, month, year, selectedDate)` and `renderYear(props, year, selectedDate)` to customize the output of each rendering method.\n\n```js\nvar MyDTPicker = React.createClass({\n    render: function(){\n        return <Datetime\n            renderDay={ this.renderDay }\n            renderMonth={ this.renderMonth }\n            renderYear={ this.renderYear }\n        />;\n    },\n    renderDay: function( props, currentDate, selectedDate ){\n        return <td {...props}>{ '0' + currentDate.date() }</td>;\n    },\n    renderMonth: function( props, month, year, selectedDate ){\n        return <td {...props}>{ month }</td>;\n    },\n    renderYear: function( props, year, selectedDate ){\n        return <td {...props}>{ year % 100 }</td>;\n    }\n});\n```\n[You can see a customized calendar here.](http://codepen.io/simeg/pen/YppLmO)\n\nIt's also possible to override some view in the calendar completelly. Let's say that we want to add a today button in our calendars, when we click it we display the `days` view with the current month:\n```js\nclass MyDTPicker extends React.Component {\n    render() {\n        return (\n            <Datetime ref=\"datetime\"\n                renderView={ (mode, renderDefault) => this.renderView( mode, renderDefault) }\n            />\n        );\n    }\n\n    renderView( mode, renderDefault ) {\n        // Only for years, months and days view\n        if( mode === 'time' ) return renderDefault();\n\n        return (\n            <div className=\"wrapper\">\n                { renderDefault() }\n                <div className=\"controls\">\n                    <button onClick={ () => this.goToToday() }>Today</button>\n                </div>\n            </div>\n        )\n    }\n\n    goToToday() {\n        // Reset\n        this.refs.datetime.setViewDate( new Date() );\n        this.refs.datetime.setViewMode( 'days' );\n    }\n});\n```\n\n#### Method Parameters\n* `props` is the object that the datepicker has calculated for this object. It is convenient to use this object as the `props` for your custom component, since it knows how to handle the click event and its `className` attribute is used by the default styles.\n* `selectedDate` and `currentDate` are [moment objects](http://momentjs.com) and can be used to change the output depending on the selected date, or the date for the current day.\n* `month` and `year` are the numeric representation of the current month and year to be displayed. Notice that the possible `month` values range from `0` to `11`.\n\n## Specify Available Units\nYou can filter out what you want the user to be able to pick by using `dateFormat` and `timeFormat`, e.g. to create a timepicker, yearpicker etc.\n\nIn this example the component is being used as a *timepicker* and can *only be used for selecting a time*.\n```js\n<Datetime dateFormat={false} />\n```\n[Working example of a timepicker here.](http://codepen.io/simeg/pen/mRQBrp)\n\nIn this example you can *only select a year and month*.\n```js\n<Datetime dateFormat=\"YYYY-MM\" timeFormat={false} />\n```\n[Working example of only selecting year and month here.](http://codepen.io/simeg/pen/apQLdd)\n\n## Selectable Dates\nIt is possible to disable dates in the calendar if the user are not allowed to select them, e.g. dates in the past. This is done using the prop `isValidDate`, which admits a function in the form `function(currentDate, selectedDate)` where both arguments are [moment objects](http://momentjs.com). The function shall return `true` for selectable dates, and `false` for disabled ones.\n\nIn the example below are *all dates before today* disabled.\n\n```js\n// Let's use the static moment reference in the Datetime component\nvar yesterday = Datetime.moment().subtract( 1, 'day' );\nvar valid = function( current ){\n    return current.isAfter( yesterday );\n};\n<Datetime isValidDate={ valid } />\n```\n[Working example of disabled days here.](http://codepen.io/simeg/pen/XNNYJg)\n\nIt's also possible to disable *the weekends*, as shown in the example below.\n```js\nvar valid = function( current ){\n    return current.day() !== 0 && current.day() !== 6;\n};\n<Datetime isValidDate={ valid } />\n```\n[Working example of disabled weekends here.](http://codepen.io/simeg/pen/jVVKWq)\n\n## Usage with TypeScript\n\nThis project includes typings for TypeScript versions 1.8 and 2.0. Additional typings are not\nrequired.\n\nTypings for 1.8 are found in `react-datetime.d.ts` and typings for 2.0 are found in `typings/index.d.ts`.\n\n```js\nimport * as Datetime from 'react-datetime';\n\nclass MyDTPicker extends React.Component<MyDTPickerProps, MyDTPickerState> {\n    render() JSX.Element {\n        return <Datetime />;\n    }\n}\n```\n\n## Contributions\nFor information about how to contribute, see the [CONTRIBUTING](.github/CONTRIBUTING.md) file.\n\n## Development\n```sh\nnpm run dev\n```\nThis will start a local `webpack-dev-server` based on `example/example.js` where most development can be done.\n\nIf you want to develop using the component inside a React application, we recommend that you use [react-datetime-playground](https://github.com/arqex/react-datetime-playground).\n\n### [Changelog](CHANGELOG.md)\n\n### [MIT Licensed](LICENSE.md)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@3.0.0-beta.3","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"dist":{"integrity":"sha512-EFNztgNs+05PLdT1+4YE4CpYGsyGaHZ2ryiW/wsaNRPyP//C5OLdNm1K0OU69RAVrvh42eGxFMz1gqxDuiUW9A==","shasum":"8611d10dd6391aee2902fa6fdd69eee4b423d6cd","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-3.0.0-beta.3.tgz","fileCount":15,"unpackedSize":570191,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcj2w2CRA9TVsSAnZWagAAKTMP+wUV1CI0UoeS+3euJBg5\n9Q+bu2c6dZjTQO/mzH4hveppGFm1a2zX2QcsdPHnVJoUp8kFibB4JDwyby/U\nO2OqMMGFfSHL4/aYNOHcclv+kT8kHLziy9+MGrnK+DZ4I7X2gQXzGfK7hD9r\nOROKpsJLewFJx0nO/jLbgkVU02u2rJl9fNDsq1lWnFoJGUB2W6qF+8v561hF\njQr8gjhWEf2X26oZ2lXA5/xxW7/gaJ+lLQcNttdKm8pcdDnN+eNytnXvqH4j\nLqPZddnSCzJKezH6Ibi2eRBtNfop3rZ+hSRM+d52dN9hA+RjBferQ7AEK0q+\n42XRw0vUGTbirIcuGmIAJyQQDFmppKjPFT22Y38XWgubDx+klUJPzkaIbZjl\nhjy4ftZNmCkcPQKcYYo8luti7Gji2WtmvCfWY5swjsHngcHZyeU6cv4A8vgH\nqxd1GQdit7Fw+n1ZkFV1LkokPL/4+Sezs8KGB9xQL6zE/3C5bSfu7ahmF3po\n7tdIPMkhV4Dhdctwbyqj6oK0RFl6afnrOI9B630fSjSy41mmroXx5RAWIYXc\nP01wBSwRfeqyndviIaYh1k3zXuEpW+XLv6euv4PoAKvC4uwsU3WRCaQFTDcT\nm/V4N4sydcM9RpclbMWPcOIDrJ/tGMCXc0Qz2UwXofLjqKXNFG9thcorkUJK\nzDZt\r\n=kLu/\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCZp7VXc66D1186p+LQ0twAgVsOW6oQYfM/GxTtaerMWgIhAP30uqHnm3eaJ9aZMiLKh/c+zyAncPVUXLWtjvVVOTtX"}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"layneanderson","email":"layneand@gmail.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime_3.0.0-beta.3_1552903221759_0.17542368063640623"},"_hasShrinkwrap":false},"3.0.0-beta.4":{"name":"react-datetime","version":"3.0.0-beta.4","description":"A lightweight but complete datetime picker React.js component","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./DateTime.js","typings":"./DateTime.d.ts","scripts":{"build:mac":"gulp","build:win":"gulp.cmd","dev":"webpack-dev-server --config example/webpack.config.js --devtool eval --progress --colors --hot --content-base example","lint":"node ./node_modules/eslint/bin/eslint.js src/ DateTime.js test/ && echo 'Linting OK! ?'","notify-pre-commit-hook":"echo '### Starting pre-commit hook ?'","test":"node ./node_modules/jest/bin/jest.js","test:typings":"node ./node_modules/typescript/bin/tsc -p ./typings","test:snapshot":"node ./node_modules/jest/bin/jest.js snapshot","test:snapshot:update":"node ./node_modules/jest/bin/jest.js snapshot --updateSnapshot","test:all":"echo 'Running tests...' && npm run test:typings && npm run test && echo 'All tests passed! ?'","test:watch":"node ./node_modules/jest/bin/jest.js --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":">=2.16.0","react":">=0.13","react-dom":">=0.13"},"devDependencies":{"@types/react":">=15","babel-core":"^6.22.1","babel-jest":"^18.0.0","babel-loader":"^6.2.1","babel-plugin-transform-remove-strict-mode":"0.0.2","babel-preset-es2015":"^6.22.0","babel-preset-react":"^6.22.0","enzyme":"^3.0.0","enzyme-adapter-react-15":"^1.0.5","eslint":"^3.1.0","gulp":"^3.9.0","gulp-babel":"^6.1","gulp-insert":"^0.4.0","gulp-plumber":"^1.1.0","gulp-rename":"^1.2.2","gulp-sourcemaps":"^2.4.0","gulp-uglify":"^1.2.0","jest":"^18.1.0","jest-cli":"^18.1.0","jsdom":"^7.0.2","mocha":"^5.2.0","moment":">=2.16.0","moment-timezone":"^0.5.13","pre-commit":"^1.1.3","react":"^15.5.0","react-addons-test-utils":">=0.13","react-dom":"^15.5.0","react-test-renderer":"^15.5.0","through2":"^2.0.3","typescript":"^2.0.10","webpack":"^2.2.1","webpack-stream":"^3.2.0"},"dependencies":{"create-react-class":"^15.6.3","object-assign":"^3.0.0","prop-types":"^15.5.7","react-onclickoutside":"^6.7.1"},"pre-commit":["notify-pre-commit-hook","lint","test:all"],"readme":"# react-datetime\n\n[![Build Status](https://secure.travis-ci.org/YouCanBookMe/react-datetime.svg)](https://travis-ci.org/YouCanBookMe/react-datetime)\n[![npm version](https://badge.fury.io/js/react-datetime.svg)](http://badge.fury.io/js/react-datetime)\n\nA date and time picker in the same React.js component. It can be used as a datepicker, timepicker or both at the same time. It is **highly customizable** and it even allows to edit date's milliseconds.\n\nThis project started as a fork of https://github.com/quri/react-bootstrap-datetimepicker but the code and the API has changed a lot.\n\n## Installation\n\nInstall using npm:\n```sh\nnpm install --save react-datetime\n```\n\nInstall using yarn:\n```sh\nyarn add react-datetime\n```\n\n## Usage\n\n[React.js](http://facebook.github.io/react/) and [Moment.js](http://momentjs.com/) are peer dependencies for react-datetime (as well as [Moment.js timezones](https://momentjs.com/timezone/) if you want to use the `displayTimeZone` prop). These dependencies are not installed along with react-datetime automatically, but your project needs to have them installed in order to make the datepicker work. You can then use the datepicker like in the example below.\n\n\n```js\nrequire('react-datetime');\n\n...\n\nrender: function() {\n    return <Datetime />;\n}\n```\n[See this example working](http://codepen.io/simeg/pen/mEmQmP).\n\n**Don't forget to add the [CSS stylesheet](https://github.com/YouCanBookMe/react-datetime/blob/master/css/react-datetime.css) to make it work out of the box.**\n\n## API\n\nBelow we have all the props that we can use with the `<DateTime>` component. There are also some methods that can be used imperatively.\n\n| Name         | Type    | Default | Description |\n| ------------ | ------- | ------- | ----------- |\n| **value** | `Date` | `new Date()` | Represents the selected date by the component, in order to use it as a [controlled component](https://facebook.github.io/react/docs/forms.html#controlled-components). This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. |\n| **initialValue** | `Date` | `new Date()` | Represents the selected date for the component to use it as a [uncontrolled component](https://facebook.github.io/react/docs/uncontrolled-components.html). This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. If you need to set the selected date programmatically after the picker is initialized, please use the `value` prop instead. |\n| **initialViewDate** | `Date` | `new Date()` | Define the month/year/decade/time which is viewed on opening the calendar. This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. If you want to set the view date after the component has been initialize [see the imperative API](#imperative-api). |\n| **initialViewMode** | `string` or `number` | `'days'` | The default view to display when the picker is shown for the first time (`'years'`, `'months'`, `'days'`, `'time'`). If you want to set the view mode after the component has been initialize [see the imperative API](#imperative-api). |\n| **updateOnView** | `string` | Intelligent guess | In the calendar we can navigate through years and months without actualling updating the selected view. Only when we get to one view called the \"updating view\", we make a selection there and the value gets updated, triggering an `onChange` event. By default the updating view will get guessed by using the `dateFormat` so if our dates only show months and never days, the update is done in the `months` view. If we set `updateOnView=\"time\"` selecting a day will navigate to the time view. The time view always updates the selected date, never navigates. If `closeOnSelect={ true }`, making a selection in the view defined by `updateOnView` will close the calendar. |\n| **dateFormat**   | `boolean` or `string`  | `true` | Defines the format for the date. It accepts any [Moment.js date format](http://momentjs.com/docs/#/displaying/format/) (not in localized format). If `true` the date will be displayed using the defaults for the current locale. If `false` the datepicker is disabled and the component can be used as timepicker, see [available units docs](#specify-available-units). |\n| **timeFormat**   | `boolean` or `string`  | `true` | Defines the format for the time. It accepts any [Moment.js time format](http://momentjs.com/docs/#/displaying/format/) (not in localized format). If `true` the time will be displayed using the defaults for the current locale. If `false` the timepicker is disabled and the component can be used as datepicker, see [available units docs](#specify-available-units). |\n| **input** | `boolean` | `true` | Whether to show an input field to edit the date manually. |\n| **open** | `boolean` | `null` | Whether to open or close the picker. If not set react-datetime will open the datepicker on input focus and close it on click outside. |\n| **locale** | `string` | `null` | Manually set the locale for the react-datetime instance. Moment.js locale needs to be loaded to be used, see [i18n docs](#i18n).\n| **utc** | `boolean` | `false` | When true, input time values will be interpreted as UTC (Zulu time) by Moment.js. Otherwise they will default to the user's local timezone.\n| **displayTimeZone** | `string` | `null` | **Needs [moment's timezone](https://momentjs.com/timezone/) available in your project.** When specified, input time values will be displayed in the given time zone. Otherwise they will default to the user's local timezone (unless `utc` specified).\n| **onChange** | `function` | empty function | Callback trigger when the date changes. The callback receives the selected `moment` object as only parameter, if the date in the input is valid. If the date in the input is not valid, the callback receives the value of the input (a string). |\n| **onFocus** | `function` | empty function | Callback trigger for when the user opens the datepicker. The callback receives an event of type SyntheticEvent. |\n| **onBlur** | `function` | empty function | Callback trigger for when the user clicks outside of the input, simulating a regular onBlur. The callback receives the selected `moment` object as only parameter, if the date in the input is valid. If the date in the input is not valid, the callback returned. |\n| **onNavigate** | `function` | empty function | Callback trigger when the view mode changes. The callback receives the selected view mode string (`years`, `months`, `days` or `time`) as only parameter.|\n| **onBeforeNavigate** | `function` | ( nextView, currentView, viewDate ) => nextView | Allows to intercept a change of the calendar view. The accepted function receives the view that it's supposed to navigate to, the view that is showing currently and the date currently shown in the view. Return a viewMode ( default ones are `years`, `months`, `days` or `time`) to navigate to it. If the function returns a \"falsy\" value, the navigation is stopped and we will remain in the current view. |\n| **onNavigateBack** | `function` | empty function | Callback trigger when the user navigates to the previous month, year or decade. The callback receives the amount and type ('month', 'year') as parameters. |\n| **onNavigateForward** | `function` | empty function | Callback trigger when the user navigates to the next month, year or decade. The callback receives the amount and type ('month', 'year') as parameters. |\n| **className** | `string` or `string array` | `''` | Extra class name for the outermost markup element. |\n| **inputProps** | `object` | `undefined` | Defines additional attributes for the input element of the component. For example: `onClick`, `placeholder`, `disabled`, `required`, `name` and `className` (`className` *sets* the class attribute for the input element). See [Customize the Input Appearance](#customize-the-input-appearance). |\n| **isValidDate** | `function` | `() => true` | Define the dates that can be selected. The function receives `(currentDate, selectedDate)` and shall return a `true` or `false` whether the `currentDate` is valid or not. See [selectable dates](#selectable-dates).|\n| **renderInput** | `function` | `undefined` | Replace the rendering of the input element. The function has the following arguments: the default calculated `props` for the input, `openCalendar` (a function which opens the calendar) and `closeCalendar` (a function which closes the calendar). Must return a React component or `null`. See [Customize the Input Appearance](#customize-the-input-appearance). |\n| **renderView** | `function` | `(viewMode, renderDefault) => renderDefault()` | Customize the way the calendar is rendered. The accepted function receives the type of the view it's going to be rendered `'years', 'months', 'days', 'time'` and a function to render the default view of react-datetime, this way it's possible to wrap the original view adding our own markup or override it completely with our own code. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderDay** | `function` | `DOM.td(day)` | Customize the way that the days are shown in the daypicker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderMonth** | `function` | `DOM.td(month)` | Customize the way that the months are shown in the monthpicker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, the `month` and the `year` to be shown, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderYear** | `function` | `DOM.td(year)` | Customize the way that the years are shown in the year picker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, the `year` to be shown, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **strictParsing** | `boolean` | `true` | Whether to use Moment.js's [strict parsing](http://momentjs.com/docs/#/parsing/string-format/) when parsing input.\n| **closeOnSelect** | `boolean` | `false` | When `true`, once the day has been selected, the datepicker will be automatically closed.\n| **closeOnTab** | `boolean` | `true` | When `true` and the input is focused, pressing the `tab` key will close the datepicker.\n| **timeConstraints** | `object` | `null` | Add some constraints to the timepicker. It accepts an `object` with the format `{ hours: { min: 9, max: 15, step: 2 }}`, this example means the hours can't be lower than `9` and higher than `15`, and it will change adding or subtracting `2` hours everytime the buttons are clicked. The constraints can be added to the `hours`, `minutes`, `seconds` and `milliseconds`.\n| **closeOnClickOutside** | `boolean` | `false` | When `true`, keep the datepicker open when click event is triggered outside of component. When `false`, close it.\n\n## Imperative API\nBesides controlling the selected date, there is a navigation through months, years, decades that react-datetime handles for us. We can interfere in it, stopping view transtions by using the prop `onBeforeNavigate`, but we can also navigate to a specific view and date by using some imperative methods.\n\nTo do so, we need to create our component with a `ref` prop amd use the reference.\n```js\n// This would be the code to render the picker\n<DateTime ref=\"datetime\" />\n\n// ... once rendered we can use the imperative API\n// let's show the years view\nthis.refs.datetime.setViewMode('years')\n```\n\nAvailable methods are:\n* **setViewMode( viewMode )**: Set the view currently shown by the calendar. View modes shipped with react-datetime are `years`, `months`, `days` and `time`.\n* **setViewDate( date )**: Set the date that is currently shown in the calendar. This is independent from the selected date and it's the one used to navigate through months or days in the calendar. It accepts a string in the format of the current locale, a `Date` or a `Moment` object as parameter.\n\n## i18n\nDifferent language and date formats are supported by react-datetime. React uses [Moment.js](http://momentjs.com/) to format the dates, and the easiest way of changing the language of the calendar is [changing the Moment.js locale](http://momentjs.com/docs/#/i18n/changing-locale/).\n\n```js\nvar moment = require('moment');\nrequire('moment/locale/fr');\n// Now react-datetime will be in french\n```\n\nIf there are multiple locales loaded, you can use the prop `locale` to define what language shall be used by the instance.\n```js\n<Datetime locale=\"fr-ca\" />\n<Datetime locale=\"de\" />\n```\n[Here you can see the i18n example working](http://codepen.io/simeg/pen/yVVjdJ).\n\n## Customize the Input Appearance\nIt is possible to customize the way that the input is displayed. The simplest is to supply `inputProps` which get assigned to the default `<input />` element within the component.\n\n```js\n<Datetime inputProps={{ placeholder: 'N/A', disabled: true }}>\n```\n\nAlternatively, if you need to render different content than an `<input />` element, you may supply a `renderInput` function which is called instead.\n\n```js\nvar MyDTPicker = React.createClass({\n    render: function(){\n        return <Datetime renderInput={ this.renderInput } />;\n    },\n    renderInput: function( props, openCalendar, closeCalendar ){\n        function clear(){\n            props.onChange({target: {value: ''}});\n        }\n        return (\n            <div>\n                <input {...props} />\n                <button onClick={openCalendar}>open calendar</button>\n                <button onClick={closeCalendar}>close calendar</button>\n                <button onClick={clear}>clear</button>\n            </div>\n        );\n    },\n});\n```\n\n## Customize the Datepicker Appearance\nIt is possible to customize the way that the datepicker display the days, months and years in the calendar. To adapt the calendar for every need it is possible to use the props `renderDay(props, currentDate, selectedDate)`, `renderMonth(props, month, year, selectedDate)` and `renderYear(props, year, selectedDate)` to customize the output of each rendering method.\n\n```js\nvar MyDTPicker = React.createClass({\n    render: function(){\n        return <Datetime\n            renderDay={ this.renderDay }\n            renderMonth={ this.renderMonth }\n            renderYear={ this.renderYear }\n        />;\n    },\n    renderDay: function( props, currentDate, selectedDate ){\n        return <td {...props}>{ '0' + currentDate.date() }</td>;\n    },\n    renderMonth: function( props, month, year, selectedDate ){\n        return <td {...props}>{ month }</td>;\n    },\n    renderYear: function( props, year, selectedDate ){\n        return <td {...props}>{ year % 100 }</td>;\n    }\n});\n```\n[You can see a customized calendar here.](http://codepen.io/simeg/pen/YppLmO)\n\nIt's also possible to override some view in the calendar completelly. Let's say that we want to add a today button in our calendars, when we click it we display the `days` view with the current month:\n```js\nclass MyDTPicker extends React.Component {\n    render() {\n        return (\n            <Datetime ref=\"datetime\"\n                renderView={ (mode, renderDefault) => this.renderView( mode, renderDefault) }\n            />\n        );\n    }\n\n    renderView( mode, renderDefault ) {\n        // Only for years, months and days view\n        if( mode === 'time' ) return renderDefault();\n\n        return (\n            <div className=\"wrapper\">\n                { renderDefault() }\n                <div className=\"controls\">\n                    <button onClick={ () => this.goToToday() }>Today</button>\n                </div>\n            </div>\n        )\n    }\n\n    goToToday() {\n        // Reset\n        this.refs.datetime.setViewDate( new Date() );\n        this.refs.datetime.setViewMode( 'days' );\n    }\n});\n```\n\n#### Method Parameters\n* `props` is the object that the datepicker has calculated for this object. It is convenient to use this object as the `props` for your custom component, since it knows how to handle the click event and its `className` attribute is used by the default styles.\n* `selectedDate` and `currentDate` are [moment objects](http://momentjs.com) and can be used to change the output depending on the selected date, or the date for the current day.\n* `month` and `year` are the numeric representation of the current month and year to be displayed. Notice that the possible `month` values range from `0` to `11`.\n\n## Specify Available Units\nYou can filter out what you want the user to be able to pick by using `dateFormat` and `timeFormat`, e.g. to create a timepicker, yearpicker etc.\n\nIn this example the component is being used as a *timepicker* and can *only be used for selecting a time*.\n```js\n<Datetime dateFormat={false} />\n```\n[Working example of a timepicker here.](http://codepen.io/simeg/pen/mRQBrp)\n\nIn this example you can *only select a year and month*.\n```js\n<Datetime dateFormat=\"YYYY-MM\" timeFormat={false} />\n```\n[Working example of only selecting year and month here.](http://codepen.io/simeg/pen/apQLdd)\n\n## Selectable Dates\nIt is possible to disable dates in the calendar if the user are not allowed to select them, e.g. dates in the past. This is done using the prop `isValidDate`, which admits a function in the form `function(currentDate, selectedDate)` where both arguments are [moment objects](http://momentjs.com). The function shall return `true` for selectable dates, and `false` for disabled ones.\n\nIn the example below are *all dates before today* disabled.\n\n```js\n// Let's use the static moment reference in the Datetime component\nvar yesterday = Datetime.moment().subtract( 1, 'day' );\nvar valid = function( current ){\n    return current.isAfter( yesterday );\n};\n<Datetime isValidDate={ valid } />\n```\n[Working example of disabled days here.](http://codepen.io/simeg/pen/XNNYJg)\n\nIt's also possible to disable *the weekends*, as shown in the example below.\n```js\nvar valid = function( current ){\n    return current.day() !== 0 && current.day() !== 6;\n};\n<Datetime isValidDate={ valid } />\n```\n[Working example of disabled weekends here.](http://codepen.io/simeg/pen/jVVKWq)\n\n## Usage with TypeScript\n\nThis project includes typings for TypeScript versions 1.8 and 2.0. Additional typings are not\nrequired.\n\nTypings for 1.8 are found in `react-datetime.d.ts` and typings for 2.0 are found in `typings/index.d.ts`.\n\n```js\nimport * as Datetime from 'react-datetime';\n\nclass MyDTPicker extends React.Component<MyDTPickerProps, MyDTPickerState> {\n    render() JSX.Element {\n        return <Datetime />;\n    }\n}\n```\n\n## Contributions\nFor information about how to contribute, see the [CONTRIBUTING](.github/CONTRIBUTING.md) file.\n\n## Development\n```sh\nnpm run dev\n```\nThis will start a local `webpack-dev-server` based on `example/example.js` where most development can be done.\n\nIf you want to develop using the component inside a React application, we recommend that you use [react-datetime-playground](https://github.com/arqex/react-datetime-playground).\n\n### [Changelog](CHANGELOG.md)\n\n### [MIT Licensed](LICENSE.md)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@3.0.0-beta.4","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"dist":{"integrity":"sha512-gmM1VyTYL+Gs9a7awvXElNpQO6D4kkRStq4Lv6HXwbwok2wDadHQks+DXkbLzbj8hzsGLHJ//Fk45Pk/4Vxr+w==","shasum":"d79e91cbcfc41db3acfd86da0caa6bc92c369a2f","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-3.0.0-beta.4.tgz","fileCount":15,"unpackedSize":570645,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJckQNOCRA9TVsSAnZWagAAVUUQAJ4H9Zt9a1RceVJpKhp+\nnqW5Gpm06P/Y6lSy3bXOd1LfLxDp2IcPfbKChn9rV6YbkOaqSEIZq+kJi2qG\nNc2sqLKQaXCYYnKZDgKAtg4uDUAcUOdb7uLdL1xOgUceVDHyMb/uqX27eF4Z\nryOwL6RDQKh2/Lc9UK8eFd4ykx8dRdh7hH8mM7IITlI4guJSPg60g9pF11tT\nmnzGc9vURoYJeAXYEimmruqVkSAXLZA+xAW5jH9QYCyv2CkLNlBDBRptNujt\nuMryhaRd8eh2WhXgNauCine8cMfi1w5nhq4mJ6Otca5pWUJ2ydA7A8W0OXrU\nW32YdCSeRWJ6YFuS/momQrGz9zHpAQJjfvdakKUPx1yuFvR4Y99NhhYcViEN\npHdOo4JR1X+lieE4TocZGCdLq+/0Sz5REJkXlerMs+IhlvyOPqFtjL5Sx+cf\n5cjY0Scb5QQPZgIphnq+ouPesRL8KWzVdo3/IHahOJoeAkYEb3Bww8+GOdFW\n0SYqKHsQ3gJDt2ayE0cw0oE/VTg95IeWYX8t7SrxliASTrzCve2bSceMta2N\nwgHQFJav8rH7CgJTM5RYRS3fwLT/GiKG4vIVWAOGR4hvgVRuJ0dmfMQp1oLT\n+dRSEJHfZ57bK3OIfSj61GQHP2mglAZXQBS47HG8YvAz97zjKpYcQZMkRaxH\nQhiw\r\n=crwx\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICwcwOzrPJlyT+w+mcmvWa7KRyNESAp1aeYcgJVpM9CnAiBcvh0cUqQNOptCFBrZDYvtRLSnBty7cHyPqTrgrQqo3g=="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"layneanderson","email":"layneand@gmail.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime_3.0.0-beta.4_1553007438141_0.28714536653732914"},"_hasShrinkwrap":false},"3.0.0-beta.6":{"name":"react-datetime","version":"3.0.0-beta.6","description":"A lightweight but complete datetime picker React.js component","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./dist/react-datetime.cjs.js","typings":"./src/datetime/DateTime.d.ts","scripts":{"build":"webpack --config config/webpack.config.build.js","lint":"eslint src/datetime/Datetime.js test/ && echo 'Linting OK! ?'","notify-pre-commit-hook":"echo '### Starting pre-commit hook ?'","playground":"node scripts/start.js","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"echo 'Running tests...' && npm run test:typings && npm run test && echo 'All tests passed! ?'","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":"^2.16.0","react":"^16.5.0"},"devDependencies":{"@babel/core":"7.7.4","@babel/plugin-proposal-class-properties":"^7.7.4","@babel/preset-env":"^7.7.7","@babel/preset-react":"^7.7.4","@svgr/webpack":"4.3.3","@testing-library/jest-dom":"^4.2.4","@testing-library/react":"^9.3.2","@testing-library/user-event":"^7.1.2","@types/react":"^16.5.0","@typescript-eslint/eslint-plugin":"^2.8.0","@typescript-eslint/parser":"^2.8.0","babel-eslint":"10.0.3","babel-jest":"^24.9.0","babel-loader":"8.0.6","babel-plugin-named-asset-import":"^0.3.5","camelcase":"^5.3.1","case-sensitive-paths-webpack-plugin":"2.2.0","css-loader":"3.2.0","dotenv":"8.2.0","dotenv-expand":"5.1.0","enzyme":"^3.0.0","enzyme-adapter-react-16":"^1.15.2","eslint":"^6.6.0","eslint-config-react-app":"^5.1.0","eslint-loader":"3.0.2","eslint-plugin-flowtype":"3.13.0","eslint-plugin-import":"2.18.2","eslint-plugin-jsx-a11y":"6.2.3","eslint-plugin-react":"7.16.0","eslint-plugin-react-hooks":"^1.6.1","file-loader":"4.3.0","fs-extra":"^8.1.0","html-webpack-plugin":"4.0.0-beta.5","identity-obj-proxy":"3.0.0","jest":"24.9.0","jest-environment-jsdom-fourteen":"0.1.0","jest-resolve":"24.9.0","jest-watch-typeahead":"0.4.2","jsdom":"^7.0.2","mini-css-extract-plugin":"0.8.0","moment":"^2.16.0","moment-timezone":"^0.5.13","optimize-css-assets-webpack-plugin":"5.0.3","pnp-webpack-plugin":"1.5.0","postcss-flexbugs-fixes":"4.1.0","postcss-loader":"3.0.0","postcss-normalize":"8.0.1","postcss-preset-env":"6.7.0","postcss-safe-parser":"4.0.1","pre-commit":"^1.1.3","react":"^16.5.0","react-addons-test-utils":">=0.13","react-app-polyfill":"^1.0.5","react-dev-utils":"^10.0.0","react-dom":"^16.5.0","react-onclickoutside":"^6.9.0","react-test-renderer":"^16.5.0","resolve":"1.12.2","resolve-url-loader":"3.1.1","sass-loader":"8.0.0","semver":"6.3.0","style-loader":"1.0.0","terser-webpack-plugin":"2.2.1","through2":"^2.0.3","ts-pnp":"1.1.5","typescript":"^3.7.4","url-loader":"2.3.0","webpack":"4.41.2","webpack-cli":"^3.3.10","webpack-dev-server":"3.9.0","webpack-manifest-plugin":"2.2.0","workbox-webpack-plugin":"4.3.1"},"dependencies":{"prop-types":"^15.5.7"},"pre-commit":["notify-pre-commit-hook","lint","test:all"],"jest":{"roots":["<rootDir>/test"],"collectCoverageFrom":["src/datetime/**/*.{js,jsx,ts,tsx}","!src/datetime/**/*.d.ts"],"setupFiles":["react-app-polyfill/jsdom"],"setupFilesAfterEnv":[],"testMatch":["<rootDir>/test/**/__tests__/**/*.{js,jsx,ts,tsx}","<rootDir>/test/**/*.{spec,test}.{js,jsx,ts,tsx}"],"testEnvironment":"jest-environment-jsdom-fourteen","transform":{"^.+\\.(js|jsx|ts|tsx)$":"<rootDir>/node_modules/babel-jest","^.+\\.css$":"<rootDir>/config/jest/cssTransform.js","^(?!.*\\.(js|jsx|ts|tsx|css|json)$)":"<rootDir>/config/jest/fileTransform.js"},"transformIgnorePatterns":["[/\\\\]node_modules[/\\\\].+\\.(js|jsx|ts|tsx)$","^.+\\.module\\.(css|sass|scss)$"],"modulePaths":[],"moduleNameMapper":{"^react-native$":"react-native-web","^.+\\.module\\.(css|sass|scss)$":"identity-obj-proxy"},"moduleFileExtensions":["web.js","js","web.ts","ts","web.tsx","tsx","json","web.jsx","jsx","node"],"watchPlugins":["jest-watch-typeahead/filename","jest-watch-typeahead/testname"]},"browserslist":{"production":[">0.2%","not dead","not op_mini all"],"development":["last 1 chrome version","last 1 firefox version","last 1 safari version"]},"gitHead":"56298b88e069f5a058dea89c6846db18b37e58b4","readme":"# react-datetime\n\n[![Build Status](https://secure.travis-ci.org/YouCanBookMe/react-datetime.svg)](https://travis-ci.org/YouCanBookMe/react-datetime)\n[![npm version](https://badge.fury.io/js/react-datetime.svg)](http://badge.fury.io/js/react-datetime)\n\nA date and time picker in the same React.js component. It can be used as a datepicker, timepicker or both at the same time. It is **highly customizable** and it even allows to edit date's milliseconds.\n\nThese are the docs for version 3 of the library. If you are still using the deprecated v2, here it is its documentation, but we strongly recommend to migrate to version 3 in order to keep receiving updates. Please check migrating react-datetime to version 3 to safely update your app.\n\n## Installation\n\nInstall using npm:\n```sh\nnpm install --save react-datetime\n```\n\nInstall using yarn:\n```sh\nyarn add react-datetime\n```\n\n## Usage\n\n[React.js](http://facebook.github.io/react/) and [Moment.js](http://momentjs.com/) are peer dependencies for react-datetime (as well as [Moment.js timezones](https://momentjs.com/timezone/) if you want to use the `displayTimeZone` prop). These dependencies are not installed along with react-datetime automatically, but your project needs to have them installed in order to make the datepicker work. You can then use the datepicker like in the example below.\n\n\n```js\nrequire('react-datetime');\n\n...\n\nrender: function() {\n    return <Datetime />;\n}\n```\n[See this example working](http://codepen.io/simeg/pen/mEmQmP).\n\n**Don't forget to add the [CSS stylesheet](https://github.com/YouCanBookMe/react-datetime/blob/master/css/react-datetime.css) to make it work out of the box.**\n\n## API\n\nBelow we have all the props that we can use with the `<DateTime>` component. There are also some methods that can be used imperatively.\n\n| Name         | Type    | Default | Description |\n| ------------ | ------- | ------- | ----------- |\n| **value** | `Date` | `new Date()` | Represents the selected date by the component, in order to use it as a [controlled component](https://facebook.github.io/react/docs/forms.html#controlled-components). This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. |\n| **initialValue** | `Date` | `new Date()` | Represents the selected date for the component to use it as a [uncontrolled component](https://facebook.github.io/react/docs/uncontrolled-components.html). This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. If you need to set the selected date programmatically after the picker is initialized, please use the `value` prop instead. |\n| **initialViewDate** | `Date` | `new Date()` | Define the month/year/decade/time which is viewed on opening the calendar. This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. If you want to set the view date after the component has been initialize [see the imperative API](#imperative-api). |\n| **initialViewMode** | `string` or `number` | `'days'` | The default view to display when the picker is shown for the first time (`'years'`, `'months'`, `'days'`, `'time'`). If you want to set the view mode after the component has been initialize [see the imperative API](#imperative-api). |\n| **updateOnView** | `string` | Intelligent guess | In the calendar we can navigate through years and months without actualling updating the selected view. Only when we get to one view called the \"updating view\", we make a selection there and the value gets updated, triggering an `onChange` event. By default the updating view will get guessed by using the `dateFormat` so if our dates only show months and never days, the update is done in the `months` view. If we set `updateOnView=\"time\"` selecting a day will navigate to the time view. The time view always updates the selected date, never navigates. If `closeOnSelect={ true }`, making a selection in the view defined by `updateOnView` will close the calendar. |\n| **dateFormat**   | `boolean` or `string`  | `true` | Defines the format for the date. It accepts any [Moment.js date format](http://momentjs.com/docs/#/displaying/format/) (not in localized format). If `true` the date will be displayed using the defaults for the current locale. If `false` the datepicker is disabled and the component can be used as timepicker, see [available units docs](#specify-available-units). |\n| **timeFormat**   | `boolean` or `string`  | `true` | Defines the format for the time. It accepts any [Moment.js time format](http://momentjs.com/docs/#/displaying/format/) (not in localized format). If `true` the time will be displayed using the defaults for the current locale. If `false` the timepicker is disabled and the component can be used as datepicker, see [available units docs](#specify-available-units). |\n| **input** | `boolean` | `true` | Whether to show an input field to edit the date manually. |\n| **open** | `boolean` | `null` | Whether to open or close the picker. If not set react-datetime will open the datepicker on input focus and close it on click outside. |\n| **locale** | `string` | `null` | Manually set the locale for the react-datetime instance. Moment.js locale needs to be loaded to be used, see [i18n docs](#i18n).\n| **utc** | `boolean` | `false` | When true, input time values will be interpreted as UTC (Zulu time) by Moment.js. Otherwise they will default to the user's local timezone.\n| **displayTimeZone** | `string` | `null` | **Needs [moment's timezone](https://momentjs.com/timezone/) available in your project.** When specified, input time values will be displayed in the given time zone. Otherwise they will default to the user's local timezone (unless `utc` specified).\n| **onChange** | `function` | empty function | Callback trigger when the date changes. The callback receives the selected `moment` object as only parameter, if the date in the input is valid. If the date in the input is not valid, the callback receives the value of the input (a string). |\n| **onFocus** | `function` | empty function | Callback trigger for when the user opens the datepicker. The callback receives an event of type SyntheticEvent. |\n| **onBlur** | `function` | empty function | Callback trigger for when the user clicks outside of the input, simulating a regular onBlur. The callback receives the selected `moment` object as only parameter, if the date in the input is valid. If the date in the input is not valid, the callback returned. |\n| **onNavigate** | `function` | empty function | Callback trigger when the view mode changes. The callback receives the selected view mode string (`years`, `months`, `days` or `time`) as only parameter.|\n| **onBeforeNavigate** | `function` | ( nextView, currentView, viewDate ) => nextView | Allows to intercept a change of the calendar view. The accepted function receives the view that it's supposed to navigate to, the view that is showing currently and the date currently shown in the view. Return a viewMode ( default ones are `years`, `months`, `days` or `time`) to navigate to it. If the function returns a \"falsy\" value, the navigation is stopped and we will remain in the current view. |\n| **onNavigateBack** | `function` | empty function | Callback trigger when the user navigates to the previous month, year or decade. The callback receives the amount and type ('month', 'year') as parameters. |\n| **onNavigateForward** | `function` | empty function | Callback trigger when the user navigates to the next month, year or decade. The callback receives the amount and type ('month', 'year') as parameters. |\n| **className** | `string` or `string array` | `''` | Extra class name for the outermost markup element. |\n| **inputProps** | `object` | `undefined` | Defines additional attributes for the input element of the component. For example: `onClick`, `placeholder`, `disabled`, `required`, `name` and `className` (`className` *sets* the class attribute for the input element). See [Customize the Input Appearance](#customize-the-input-appearance). |\n| **isValidDate** | `function` | `() => true` | Define the dates that can be selected. The function receives `(currentDate, selectedDate)` and shall return a `true` or `false` whether the `currentDate` is valid or not. See [selectable dates](#selectable-dates).|\n| **renderInput** | `function` | `undefined` | Replace the rendering of the input element. The function has the following arguments: the default calculated `props` for the input, `openCalendar` (a function which opens the calendar) and `closeCalendar` (a function which closes the calendar). Must return a React component or `null`. See [Customize the Input Appearance](#customize-the-input-appearance). |\n| **renderView** | `function` | `(viewMode, renderDefault) => renderDefault()` | Customize the way the calendar is rendered. The accepted function receives the type of the view it's going to be rendered `'years', 'months', 'days', 'time'` and a function to render the default view of react-datetime, this way it's possible to wrap the original view adding our own markup or override it completely with our own code. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderDay** | `function` | `DOM.td(day)` | Customize the way that the days are shown in the daypicker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderMonth** | `function` | `DOM.td(month)` | Customize the way that the months are shown in the monthpicker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, the `month` and the `year` to be shown, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderYear** | `function` | `DOM.td(year)` | Customize the way that the years are shown in the year picker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, the `year` to be shown, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **strictParsing** | `boolean` | `true` | Whether to use Moment.js's [strict parsing](http://momentjs.com/docs/#/parsing/string-format/) when parsing input.\n| **closeOnSelect** | `boolean` | `false` | When `true`, once the day has been selected, the datepicker will be automatically closed.\n| **closeOnTab** | `boolean` | `true` | When `true` and the input is focused, pressing the `tab` key will close the datepicker.\n| **timeConstraints** | `object` | `null` | Add some constraints to the timepicker. It accepts an `object` with the format `{ hours: { min: 9, max: 15, step: 2 }}`, this example means the hours can't be lower than `9` and higher than `15`, and it will change adding or subtracting `2` hours everytime the buttons are clicked. The constraints can be added to the `hours`, `minutes`, `seconds` and `milliseconds`.\n| **closeOnClickOutside** | `boolean` | `false` | When `true`, keep the datepicker open when click event is triggered outside of component. When `false`, close it.\n\n## Imperative API\nBesides controlling the selected date, there is a navigation through months, years, decades that react-datetime handles for us. We can interfere in it, stopping view transtions by using the prop `onBeforeNavigate`, but we can also navigate to a specific view and date by using some imperative methods.\n\nTo do so, we need to create our component with a `ref` prop amd use the reference.\n```js\n// This would be the code to render the picker\n<DateTime ref=\"datetime\" />\n\n// ... once rendered we can use the imperative API\n// let's show the years view\nthis.refs.datetime.setViewMode('years')\n```\n\nAvailable methods are:\n* **setViewMode( viewMode )**: Set the view currently shown by the calendar. View modes shipped with react-datetime are `years`, `months`, `days` and `time`.\n* **setViewDate( date )**: Set the date that is currently shown in the calendar. This is independent from the selected date and it's the one used to navigate through months or days in the calendar. It accepts a string in the format of the current locale, a `Date` or a `Moment` object as parameter.\n\n## i18n\nDifferent language and date formats are supported by react-datetime. React uses [Moment.js](http://momentjs.com/) to format the dates, and the easiest way of changing the language of the calendar is [changing the Moment.js locale](http://momentjs.com/docs/#/i18n/changing-locale/).\n\n```js\nvar moment = require('moment');\nrequire('moment/locale/fr');\n// Now react-datetime will be in french\n```\n\nIf there are multiple locales loaded, you can use the prop `locale` to define what language shall be used by the instance.\n```js\n<Datetime locale=\"fr-ca\" />\n<Datetime locale=\"de\" />\n```\n[Here you can see the i18n example working](http://codepen.io/simeg/pen/yVVjdJ).\n\n## Customize the Input Appearance\nIt is possible to customize the way that the input is displayed. The simplest is to supply `inputProps` which get assigned to the default `<input />` element within the component.\n\n```js\n<Datetime inputProps={{ placeholder: 'N/A', disabled: true }}>\n```\n\nAlternatively, if you need to render different content than an `<input />` element, you may supply a `renderInput` function which is called instead.\n\n```js\nvar MyDTPicker = React.createClass({\n    render: function(){\n        return <Datetime renderInput={ this.renderInput } />;\n    },\n    renderInput: function( props, openCalendar, closeCalendar ){\n        function clear(){\n            props.onChange({target: {value: ''}});\n        }\n        return (\n            <div>\n                <input {...props} />\n                <button onClick={openCalendar}>open calendar</button>\n                <button onClick={closeCalendar}>close calendar</button>\n                <button onClick={clear}>clear</button>\n            </div>\n        );\n    },\n});\n```\n\n## Customize the Datepicker Appearance\nIt is possible to customize the way that the datepicker display the days, months and years in the calendar. To adapt the calendar for every need it is possible to use the props `renderDay(props, currentDate, selectedDate)`, `renderMonth(props, month, year, selectedDate)` and `renderYear(props, year, selectedDate)` to customize the output of each rendering method.\n\n```js\nvar MyDTPicker = React.createClass({\n    render: function(){\n        return <Datetime\n            renderDay={ this.renderDay }\n            renderMonth={ this.renderMonth }\n            renderYear={ this.renderYear }\n        />;\n    },\n    renderDay: function( props, currentDate, selectedDate ){\n        return <td {...props}>{ '0' + currentDate.date() }</td>;\n    },\n    renderMonth: function( props, month, year, selectedDate ){\n        return <td {...props}>{ month }</td>;\n    },\n    renderYear: function( props, year, selectedDate ){\n        return <td {...props}>{ year % 100 }</td>;\n    }\n});\n```\n[You can see a customized calendar here.](http://codepen.io/simeg/pen/YppLmO)\n\nIt's also possible to override some view in the calendar completelly. Let's say that we want to add a today button in our calendars, when we click it we display the `days` view with the current month:\n```js\nclass MyDTPicker extends React.Component {\n    render() {\n        return (\n            <Datetime ref=\"datetime\"\n                renderView={ (mode, renderDefault) => this.renderView( mode, renderDefault) }\n            />\n        );\n    }\n\n    renderView( mode, renderDefault ) {\n        // Only for years, months and days view\n        if( mode === 'time' ) return renderDefault();\n\n        return (\n            <div className=\"wrapper\">\n                { renderDefault() }\n                <div className=\"controls\">\n                    <button onClick={ () => this.goToToday() }>Today</button>\n                </div>\n            </div>\n        )\n    }\n\n    goToToday() {\n        // Reset\n        this.refs.datetime.setViewDate( new Date() );\n        this.refs.datetime.setViewMode( 'days' );\n    }\n});\n```\n\n#### Method Parameters\n* `props` is the object that the datepicker has calculated for this object. It is convenient to use this object as the `props` for your custom component, since it knows how to handle the click event and its `className` attribute is used by the default styles.\n* `selectedDate` and `currentDate` are [moment objects](http://momentjs.com) and can be used to change the output depending on the selected date, or the date for the current day.\n* `month` and `year` are the numeric representation of the current month and year to be displayed. Notice that the possible `month` values range from `0` to `11`.\n\n## Specify Available Units\nYou can filter out what you want the user to be able to pick by using `dateFormat` and `timeFormat`, e.g. to create a timepicker, yearpicker etc.\n\nIn this example the component is being used as a *timepicker* and can *only be used for selecting a time*.\n```js\n<Datetime dateFormat={false} />\n```\n[Working example of a timepicker here.](http://codepen.io/simeg/pen/mRQBrp)\n\nIn this example you can *only select a year and month*.\n```js\n<Datetime dateFormat=\"YYYY-MM\" timeFormat={false} />\n```\n[Working example of only selecting year and month here.](http://codepen.io/simeg/pen/apQLdd)\n\n## Selectable Dates\nIt is possible to disable dates in the calendar if the user are not allowed to select them, e.g. dates in the past. This is done using the prop `isValidDate`, which admits a function in the form `function(currentDate, selectedDate)` where both arguments are [moment objects](http://momentjs.com). The function shall return `true` for selectable dates, and `false` for disabled ones.\n\nIn the example below are *all dates before today* disabled.\n\n```js\n// Let's use the static moment reference in the Datetime component\nvar yesterday = Datetime.moment().subtract( 1, 'day' );\nvar valid = function( current ){\n    return current.isAfter( yesterday );\n};\n<Datetime isValidDate={ valid } />\n```\n[Working example of disabled days here.](http://codepen.io/simeg/pen/XNNYJg)\n\nIt's also possible to disable *the weekends*, as shown in the example below.\n```js\nvar valid = function( current ){\n    return current.day() !== 0 && current.day() !== 6;\n};\n<Datetime isValidDate={ valid } />\n```\n[Working example of disabled weekends here.](http://codepen.io/simeg/pen/jVVKWq)\n\n## Usage with TypeScript\n\nThis project includes typings for TypeScript versions 1.8 and 2.0. Additional typings are not\nrequired.\n\nTypings for 1.8 are found in `react-datetime.d.ts` and typings for 2.0 are found in `typings/index.d.ts`.\n\n```js\nimport * as Datetime from 'react-datetime';\n\nclass MyDTPicker extends React.Component<MyDTPickerProps, MyDTPickerState> {\n    render() JSX.Element {\n        return <Datetime />;\n    }\n}\n```\n\n## Contributions\nFor information about how to contribute, see the [CONTRIBUTING](.github/CONTRIBUTING.md) file.\n\n## Development\n```sh\nnpm run playground\n```\nThis will start a local development server building `src/index.js` where most development can be done.\n\n### [Changelog](CHANGELOG.md)\n\n### [MIT Licensed](LICENSE.md)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@3.0.0-beta.6","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"dist":{"integrity":"sha512-MTJIdmkt8peHg/DyatJXuU6pf0QaFIek4XarFdn6q6uHJrLR3KLJb1sq7c0EKF2vLsZsRSBOIfAdfOMvi9z/8Q==","shasum":"5e95a8f81e2838fd8de7892d6a8e3d58fdb0e282","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-3.0.0-beta.6.tgz","fileCount":7,"unpackedSize":266479,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeKCkBCRA9TVsSAnZWagAAlc4P/2XlOdF9HetrqF6ptf0B\nsS8rFRc6YT9w1hv3b6NKpq/MHluEtsFewMpqIxybOcYYP9kCFG1K6hHG4Rfu\n2m1aApnwjedvLVEhBFC42E2r41R39im3ftDqMfP3W3t81HdM0ALP0/YLC9in\noBP4lSxOv2e+Po6N/t6jklXSqUlU22Z3Dd/see5EoxK56sUxEzaP+d29zsIJ\nzAKy9gCLIqNWl7PHM4c0Tskhu2D17vlBbW83YMu5h5rX6S9UXBfhQZDD8m+x\no1RJJrDXsPfqhThj8EOkHMsLwOXbDSpAi0kBf4pNk99NwB9pj0cVrV5206NL\n1iV4eEXuP60msrZlK9OUXdaKrGUkROQUKqQmRKsOIu1SMrv2q+WKgjVvzknS\nXzvlReI/YsBdSrUHaLoLL41lBrUPaPj4X12bK4nIfhqm+3ESbaWszSO0dPh6\nkdHvung5MmaGhsYwU0QslErDBTDxPedItkpgA/LuMY1pcqMyYWeJg2LTU/KA\nhOhhgIX08Ui4SmaXFDvhquhARVrBB2vsxNXFU30Y/6PE8T43vq2iY7pZbQEm\nqRrk/d56XHo6zUpzv2JwWI2eeAWStfj/OWQJlPtiFgu/O3ddUkKgw4ozSPav\njZELlxjxY3gXxM72bdGbeF4u+gwSoG2BVOltDx/ofGUJf3/4g+q0RK586dGG\nMa62\r\n=j5ae\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD/DeU5Nk+DBJ6yY1NvMqRhb71wRABlb/AjylfPB4rOkwIhAK0jNaJ8mvAT3u9eJuO6awnDVBiIQ4HCHqfZ8JCBkIYs"}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"layneanderson","email":"layneand@gmail.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime_3.0.0-beta.6_1579690240691_0.593591654079455"},"_hasShrinkwrap":false},"3.0.0-beta.7":{"name":"react-datetime","version":"3.0.0-beta.7","description":"A lightweight but complete datetime picker React.js component","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./dist/react-datetime.cjs.js","typings":"./src/datetime/DateTime.d.ts","scripts":{"build":"webpack --config config/webpack.config.build.js","lint":"eslint src/datetime/Datetime.js test/ && echo 'Linting OK! ?'","notify-pre-commit-hook":"echo '### Starting pre-commit hook ?'","playground":"node scripts/start.js","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"echo 'Running tests...' && npm run test:typings && npm run test && echo 'All tests passed! ?'","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":"^2.16.0","react":"^16.5.0"},"devDependencies":{"@babel/core":"7.7.4","@babel/plugin-proposal-class-properties":"^7.7.4","@babel/preset-env":"^7.7.7","@babel/preset-react":"^7.7.4","@svgr/webpack":"4.3.3","@testing-library/jest-dom":"^4.2.4","@testing-library/react":"^9.3.2","@testing-library/user-event":"^7.1.2","@types/react":"^16.5.0","@typescript-eslint/eslint-plugin":"^2.8.0","@typescript-eslint/parser":"^2.8.0","babel-eslint":"10.0.3","babel-jest":"^24.9.0","babel-loader":"8.0.6","babel-plugin-named-asset-import":"^0.3.5","camelcase":"^5.3.1","case-sensitive-paths-webpack-plugin":"2.2.0","css-loader":"3.2.0","dotenv":"8.2.0","dotenv-expand":"5.1.0","enzyme":"^3.0.0","enzyme-adapter-react-16":"^1.15.2","eslint":"^6.6.0","eslint-config-react-app":"^5.1.0","eslint-loader":"3.0.2","eslint-plugin-flowtype":"3.13.0","eslint-plugin-import":"2.18.2","eslint-plugin-jsx-a11y":"6.2.3","eslint-plugin-react":"7.16.0","eslint-plugin-react-hooks":"^1.6.1","file-loader":"4.3.0","fs-extra":"^8.1.0","html-webpack-plugin":"4.0.0-beta.5","identity-obj-proxy":"3.0.0","jest":"24.9.0","jest-environment-jsdom-fourteen":"0.1.0","jest-resolve":"24.9.0","jest-watch-typeahead":"0.4.2","jsdom":"^7.0.2","mini-css-extract-plugin":"0.8.0","moment":"^2.16.0","moment-timezone":"^0.5.13","optimize-css-assets-webpack-plugin":"5.0.3","pnp-webpack-plugin":"1.5.0","postcss-flexbugs-fixes":"4.1.0","postcss-loader":"3.0.0","postcss-normalize":"8.0.1","postcss-preset-env":"6.7.0","postcss-safe-parser":"4.0.1","pre-commit":"^1.1.3","react":"^16.5.0","react-addons-test-utils":">=0.13","react-app-polyfill":"^1.0.5","react-dev-utils":"^10.0.0","react-dom":"^16.5.0","react-onclickoutside":"^6.9.0","react-test-renderer":"^16.5.0","resolve":"1.12.2","resolve-url-loader":"3.1.1","sass-loader":"8.0.0","semver":"6.3.0","style-loader":"1.0.0","terser-webpack-plugin":"2.2.1","through2":"^2.0.3","ts-pnp":"1.1.5","typescript":"^3.7.4","url-loader":"2.3.0","webpack":"4.41.2","webpack-cli":"^3.3.10","webpack-dev-server":"3.9.0","webpack-manifest-plugin":"2.2.0","workbox-webpack-plugin":"4.3.1"},"dependencies":{"prop-types":"^15.5.7"},"pre-commit":["notify-pre-commit-hook","lint","test:all"],"jest":{"roots":["<rootDir>/test"],"collectCoverageFrom":["src/datetime/**/*.{js,jsx,ts,tsx}","!src/datetime/**/*.d.ts"],"setupFiles":["react-app-polyfill/jsdom"],"setupFilesAfterEnv":[],"testMatch":["<rootDir>/test/**/__tests__/**/*.{js,jsx,ts,tsx}","<rootDir>/test/**/*.{spec,test}.{js,jsx,ts,tsx}"],"testEnvironment":"jest-environment-jsdom-fourteen","transform":{"^.+\\.(js|jsx|ts|tsx)$":"<rootDir>/node_modules/babel-jest","^.+\\.css$":"<rootDir>/config/jest/cssTransform.js","^(?!.*\\.(js|jsx|ts|tsx|css|json)$)":"<rootDir>/config/jest/fileTransform.js"},"transformIgnorePatterns":["[/\\\\]node_modules[/\\\\].+\\.(js|jsx|ts|tsx)$","^.+\\.module\\.(css|sass|scss)$"],"modulePaths":[],"moduleNameMapper":{"^react-native$":"react-native-web","^.+\\.module\\.(css|sass|scss)$":"identity-obj-proxy"},"moduleFileExtensions":["web.js","js","web.ts","ts","web.tsx","tsx","json","web.jsx","jsx","node"],"watchPlugins":["jest-watch-typeahead/filename","jest-watch-typeahead/testname"]},"browserslist":{"production":[">0.2%","not dead","not op_mini all"],"development":["last 1 chrome version","last 1 firefox version","last 1 safari version"]},"gitHead":"992a06eb8f08dc18f61922cda599c3820dd062a4","readme":"# react-datetime\n\n[![Build Status](https://secure.travis-ci.org/YouCanBookMe/react-datetime.svg)](https://travis-ci.org/YouCanBookMe/react-datetime)\n[![npm version](https://badge.fury.io/js/react-datetime.svg)](http://badge.fury.io/js/react-datetime)\n\nA date and time picker in the same React.js component. It can be used as a datepicker, timepicker or both at the same time. It is **highly customizable** and it even allows to edit date's milliseconds.\n\nThese are the docs for version 3 of the library. If you are still using the deprecated v2, here it is its documentation, but we strongly recommend to migrate to version 3 in order to keep receiving updates. Please check migrating react-datetime to version 3 to safely update your app.\n\n## Installation\n\nInstall using npm:\n```sh\nnpm install --save react-datetime\n```\n\nInstall using yarn:\n```sh\nyarn add react-datetime\n```\n\n## Usage\n\n[React.js](http://facebook.github.io/react/) and [Moment.js](http://momentjs.com/) are peer dependencies for react-datetime (as well as [Moment.js timezones](https://momentjs.com/timezone/) if you want to use the `displayTimeZone` prop). These dependencies are not installed along with react-datetime automatically, but your project needs to have them installed in order to make the datepicker work. You can then use the datepicker like in the example below.\n\n\n```js\nrequire('react-datetime');\n\n...\n\nrender: function() {\n    return <Datetime />;\n}\n```\n[See this example working](http://codepen.io/simeg/pen/mEmQmP).\n\n**Don't forget to add the [CSS stylesheet](https://github.com/YouCanBookMe/react-datetime/blob/master/css/react-datetime.css) to make it work out of the box.**\n\n## API\n\nBelow we have all the props that we can use with the `<DateTime>` component. There are also some methods that can be used imperatively.\n\n| Name         | Type    | Default | Description |\n| ------------ | ------- | ------- | ----------- |\n| **value** | `Date` | `new Date()` | Represents the selected date by the component, in order to use it as a [controlled component](https://facebook.github.io/react/docs/forms.html#controlled-components). This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. |\n| **initialValue** | `Date` | `new Date()` | Represents the selected date for the component to use it as a [uncontrolled component](https://facebook.github.io/react/docs/uncontrolled-components.html). This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. If you need to set the selected date programmatically after the picker is initialized, please use the `value` prop instead. |\n| **initialViewDate** | `Date` | `new Date()` | Define the month/year/decade/time which is viewed on opening the calendar. This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. If you want to set the view date after the component has been initialize [see the imperative API](#imperative-api). |\n| **initialViewMode** | `string` or `number` | `'days'` | The default view to display when the picker is shown for the first time (`'years'`, `'months'`, `'days'`, `'time'`). If you want to set the view mode after the component has been initialize [see the imperative API](#imperative-api). |\n| **updateOnView** | `string` | Intelligent guess | In the calendar we can navigate through years and months without actualling updating the selected view. Only when we get to one view called the \"updating view\", we make a selection there and the value gets updated, triggering an `onChange` event. By default the updating view will get guessed by using the `dateFormat` so if our dates only show months and never days, the update is done in the `months` view. If we set `updateOnView=\"time\"` selecting a day will navigate to the time view. The time view always updates the selected date, never navigates. If `closeOnSelect={ true }`, making a selection in the view defined by `updateOnView` will close the calendar. |\n| **dateFormat**   | `boolean` or `string`  | `true` | Defines the format for the date. It accepts any [Moment.js date format](http://momentjs.com/docs/#/displaying/format/) (not in localized format). If `true` the date will be displayed using the defaults for the current locale. If `false` the datepicker is disabled and the component can be used as timepicker, see [available units docs](#specify-available-units). |\n| **timeFormat**   | `boolean` or `string`  | `true` | Defines the format for the time. It accepts any [Moment.js time format](http://momentjs.com/docs/#/displaying/format/) (not in localized format). If `true` the time will be displayed using the defaults for the current locale. If `false` the timepicker is disabled and the component can be used as datepicker, see [available units docs](#specify-available-units). |\n| **input** | `boolean` | `true` | Whether to show an input field to edit the date manually. |\n| **open** | `boolean` | `null` | Whether to open or close the picker. If not set react-datetime will open the datepicker on input focus and close it on click outside. |\n| **locale** | `string` | `null` | Manually set the locale for the react-datetime instance. Moment.js locale needs to be loaded to be used, see [i18n docs](#i18n).\n| **utc** | `boolean` | `false` | When true, input time values will be interpreted as UTC (Zulu time) by Moment.js. Otherwise they will default to the user's local timezone.\n| **displayTimeZone** | `string` | `null` | **Needs [moment's timezone](https://momentjs.com/timezone/) available in your project.** When specified, input time values will be displayed in the given time zone. Otherwise they will default to the user's local timezone (unless `utc` specified).\n| **onChange** | `function` | empty function | Callback trigger when the date changes. The callback receives the selected `moment` object as only parameter, if the date in the input is valid. If the date in the input is not valid, the callback receives the value of the input (a string). |\n| **onFocus** | `function` | empty function | Callback trigger for when the user opens the datepicker. The callback receives an event of type SyntheticEvent. |\n| **onBlur** | `function` | empty function | Callback trigger for when the user clicks outside of the input, simulating a regular onBlur. The callback receives the selected `moment` object as only parameter, if the date in the input is valid. If the date in the input is not valid, the callback returned. |\n| **onNavigate** | `function` | empty function | Callback trigger when the view mode changes. The callback receives the selected view mode string (`years`, `months`, `days` or `time`) as only parameter.|\n| **onBeforeNavigate** | `function` | ( nextView, currentView, viewDate ) => nextView | Allows to intercept a change of the calendar view. The accepted function receives the view that it's supposed to navigate to, the view that is showing currently and the date currently shown in the view. Return a viewMode ( default ones are `years`, `months`, `days` or `time`) to navigate to it. If the function returns a \"falsy\" value, the navigation is stopped and we will remain in the current view. |\n| **onNavigateBack** | `function` | empty function | Callback trigger when the user navigates to the previous month, year or decade. The callback receives the amount and type ('month', 'year') as parameters. |\n| **onNavigateForward** | `function` | empty function | Callback trigger when the user navigates to the next month, year or decade. The callback receives the amount and type ('month', 'year') as parameters. |\n| **className** | `string` or `string array` | `''` | Extra class name for the outermost markup element. |\n| **inputProps** | `object` | `undefined` | Defines additional attributes for the input element of the component. For example: `onClick`, `placeholder`, `disabled`, `required`, `name` and `className` (`className` *sets* the class attribute for the input element). See [Customize the Input Appearance](#customize-the-input-appearance). |\n| **isValidDate** | `function` | `() => true` | Define the dates that can be selected. The function receives `(currentDate, selectedDate)` and shall return a `true` or `false` whether the `currentDate` is valid or not. See [selectable dates](#selectable-dates).|\n| **renderInput** | `function` | `undefined` | Replace the rendering of the input element. The function has the following arguments: the default calculated `props` for the input, `openCalendar` (a function which opens the calendar) and `closeCalendar` (a function which closes the calendar). Must return a React component or `null`. See [Customize the Input Appearance](#customize-the-input-appearance). |\n| **renderView** | `function` | `(viewMode, renderDefault) => renderDefault()` | Customize the way the calendar is rendered. The accepted function receives the type of the view it's going to be rendered `'years', 'months', 'days', 'time'` and a function to render the default view of react-datetime, this way it's possible to wrap the original view adding our own markup or override it completely with our own code. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderDay** | `function` | `DOM.td(day)` | Customize the way that the days are shown in the daypicker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderMonth** | `function` | `DOM.td(month)` | Customize the way that the months are shown in the monthpicker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, the `month` and the `year` to be shown, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderYear** | `function` | `DOM.td(year)` | Customize the way that the years are shown in the year picker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, the `year` to be shown, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **strictParsing** | `boolean` | `true` | Whether to use Moment.js's [strict parsing](http://momentjs.com/docs/#/parsing/string-format/) when parsing input.\n| **closeOnSelect** | `boolean` | `false` | When `true`, once the day has been selected, the datepicker will be automatically closed.\n| **closeOnTab** | `boolean` | `true` | When `true` and the input is focused, pressing the `tab` key will close the datepicker.\n| **timeConstraints** | `object` | `null` | Add some constraints to the timepicker. It accepts an `object` with the format `{ hours: { min: 9, max: 15, step: 2 }}`, this example means the hours can't be lower than `9` and higher than `15`, and it will change adding or subtracting `2` hours everytime the buttons are clicked. The constraints can be added to the `hours`, `minutes`, `seconds` and `milliseconds`.\n| **closeOnClickOutside** | `boolean` | `false` | When `true`, keep the datepicker open when click event is triggered outside of component. When `false`, close it.\n\n## Imperative API\nBesides controlling the selected date, there is a navigation through months, years, decades that react-datetime handles for us. We can interfere in it, stopping view transtions by using the prop `onBeforeNavigate`, but we can also navigate to a specific view and date by using some imperative methods.\n\nTo do so, we need to create our component with a `ref` prop amd use the reference.\n```js\n// This would be the code to render the picker\n<DateTime ref=\"datetime\" />\n\n// ... once rendered we can use the imperative API\n// let's show the years view\nthis.refs.datetime.setViewMode('years')\n```\n\nAvailable methods are:\n* **setViewMode( viewMode )**: Set the view currently shown by the calendar. View modes shipped with react-datetime are `years`, `months`, `days` and `time`.\n* **setViewDate( date )**: Set the date that is currently shown in the calendar. This is independent from the selected date and it's the one used to navigate through months or days in the calendar. It accepts a string in the format of the current locale, a `Date` or a `Moment` object as parameter.\n\n## i18n\nDifferent language and date formats are supported by react-datetime. React uses [Moment.js](http://momentjs.com/) to format the dates, and the easiest way of changing the language of the calendar is [changing the Moment.js locale](http://momentjs.com/docs/#/i18n/changing-locale/).\n\n```js\nvar moment = require('moment');\nrequire('moment/locale/fr');\n// Now react-datetime will be in french\n```\n\nIf there are multiple locales loaded, you can use the prop `locale` to define what language shall be used by the instance.\n```js\n<Datetime locale=\"fr-ca\" />\n<Datetime locale=\"de\" />\n```\n[Here you can see the i18n example working](http://codepen.io/simeg/pen/yVVjdJ).\n\n## Customize the Input Appearance\nIt is possible to customize the way that the input is displayed. The simplest is to supply `inputProps` which get assigned to the default `<input />` element within the component.\n\n```js\n<Datetime inputProps={{ placeholder: 'N/A', disabled: true }}>\n```\n\nAlternatively, if you need to render different content than an `<input />` element, you may supply a `renderInput` function which is called instead.\n\n```js\nvar MyDTPicker = React.createClass({\n    render: function(){\n        return <Datetime renderInput={ this.renderInput } />;\n    },\n    renderInput: function( props, openCalendar, closeCalendar ){\n        function clear(){\n            props.onChange({target: {value: ''}});\n        }\n        return (\n            <div>\n                <input {...props} />\n                <button onClick={openCalendar}>open calendar</button>\n                <button onClick={closeCalendar}>close calendar</button>\n                <button onClick={clear}>clear</button>\n            </div>\n        );\n    },\n});\n```\n\n## Customize the Datepicker Appearance\nIt is possible to customize the way that the datepicker display the days, months and years in the calendar. To adapt the calendar for every need it is possible to use the props `renderDay(props, currentDate, selectedDate)`, `renderMonth(props, month, year, selectedDate)` and `renderYear(props, year, selectedDate)` to customize the output of each rendering method.\n\n```js\nvar MyDTPicker = React.createClass({\n    render: function(){\n        return <Datetime\n            renderDay={ this.renderDay }\n            renderMonth={ this.renderMonth }\n            renderYear={ this.renderYear }\n        />;\n    },\n    renderDay: function( props, currentDate, selectedDate ){\n        return <td {...props}>{ '0' + currentDate.date() }</td>;\n    },\n    renderMonth: function( props, month, year, selectedDate ){\n        return <td {...props}>{ month }</td>;\n    },\n    renderYear: function( props, year, selectedDate ){\n        return <td {...props}>{ year % 100 }</td>;\n    }\n});\n```\n[You can see a customized calendar here.](http://codepen.io/simeg/pen/YppLmO)\n\nIt's also possible to override some view in the calendar completelly. Let's say that we want to add a today button in our calendars, when we click it we display the `days` view with the current month:\n```js\nclass MyDTPicker extends React.Component {\n    render() {\n        return (\n            <Datetime ref=\"datetime\"\n                renderView={ (mode, renderDefault) => this.renderView( mode, renderDefault) }\n            />\n        );\n    }\n\n    renderView( mode, renderDefault ) {\n        // Only for years, months and days view\n        if( mode === 'time' ) return renderDefault();\n\n        return (\n            <div className=\"wrapper\">\n                { renderDefault() }\n                <div className=\"controls\">\n                    <button onClick={ () => this.goToToday() }>Today</button>\n                </div>\n            </div>\n        )\n    }\n\n    goToToday() {\n        // Reset\n        this.refs.datetime.setViewDate( new Date() );\n        this.refs.datetime.setViewMode( 'days' );\n    }\n});\n```\n\n#### Method Parameters\n* `props` is the object that the datepicker has calculated for this object. It is convenient to use this object as the `props` for your custom component, since it knows how to handle the click event and its `className` attribute is used by the default styles.\n* `selectedDate` and `currentDate` are [moment objects](http://momentjs.com) and can be used to change the output depending on the selected date, or the date for the current day.\n* `month` and `year` are the numeric representation of the current month and year to be displayed. Notice that the possible `month` values range from `0` to `11`.\n\n## Specify Available Units\nYou can filter out what you want the user to be able to pick by using `dateFormat` and `timeFormat`, e.g. to create a timepicker, yearpicker etc.\n\nIn this example the component is being used as a *timepicker* and can *only be used for selecting a time*.\n```js\n<Datetime dateFormat={false} />\n```\n[Working example of a timepicker here.](http://codepen.io/simeg/pen/mRQBrp)\n\nIn this example you can *only select a year and month*.\n```js\n<Datetime dateFormat=\"YYYY-MM\" timeFormat={false} />\n```\n[Working example of only selecting year and month here.](http://codepen.io/simeg/pen/apQLdd)\n\n## Selectable Dates\nIt is possible to disable dates in the calendar if the user are not allowed to select them, e.g. dates in the past. This is done using the prop `isValidDate`, which admits a function in the form `function(currentDate, selectedDate)` where both arguments are [moment objects](http://momentjs.com). The function shall return `true` for selectable dates, and `false` for disabled ones.\n\nIn the example below are *all dates before today* disabled.\n\n```js\n// Let's use the static moment reference in the Datetime component\nvar yesterday = Datetime.moment().subtract( 1, 'day' );\nvar valid = function( current ){\n    return current.isAfter( yesterday );\n};\n<Datetime isValidDate={ valid } />\n```\n[Working example of disabled days here.](http://codepen.io/simeg/pen/XNNYJg)\n\nIt's also possible to disable *the weekends*, as shown in the example below.\n```js\nvar valid = function( current ){\n    return current.day() !== 0 && current.day() !== 6;\n};\n<Datetime isValidDate={ valid } />\n```\n[Working example of disabled weekends here.](http://codepen.io/simeg/pen/jVVKWq)\n\n## Usage with TypeScript\n\nThis project includes typings for TypeScript versions 1.8 and 2.0. Additional typings are not\nrequired.\n\nTypings for 1.8 are found in `react-datetime.d.ts` and typings for 2.0 are found in `typings/index.d.ts`.\n\n```js\nimport * as Datetime from 'react-datetime';\n\nclass MyDTPicker extends React.Component<MyDTPickerProps, MyDTPickerState> {\n    render() JSX.Element {\n        return <Datetime />;\n    }\n}\n```\n\n## Contributions\nFor information about how to contribute, see the [CONTRIBUTING](.github/CONTRIBUTING.md) file.\n\n## Development\n```sh\nnpm run playground\n```\nThis will start a local development server building `src/index.js` where most development can be done.\n\n### [Changelog](CHANGELOG.md)\n\n### [MIT Licensed](LICENSE.md)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@3.0.0-beta.7","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"dist":{"integrity":"sha512-D/F7NI3CH9tKQ9iVFBSAttW/tXXwZw7zyCGvEmdaqAaQujKgt3yAy6wrsnBn67if3neMpzFn1wYn2mEqI76Tvg==","shasum":"f7b8b009125fa27c606437f6ff5afb2aa39e8ddf","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-3.0.0-beta.7.tgz","fileCount":7,"unpackedSize":266489,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeKWROCRA9TVsSAnZWagAAFNEP/RtIeNHQP4xImI8GyDnE\ns+JejyodHLWs3eS7fsnM0PnPMBm7wQ6uBu8lzikhsnANZ/XMz4LPpE32JIMH\nBxjS7AxEvjIXfHQeZFuqqKBR5bmT3s1nf91LUXSiFO+Er2TYO20ObtfkzQ+Y\ni3r6QxM38mpEAVBJXfeE6gAg3U0CccJwkaxg0l55JJ/CGQV47gnM5FkWZW/W\ns7FzEl3hVXq1i45bG9bVBjwnjfvDc/1H10CAOoff8+ATyXOWmBgvc0il5+2+\nKfX4fjbCaBvpvPQ3vsWZRvHcK03hd+47TLIIBxD9REavFLYQ5MCfo/NvX69V\nkJaZTSmbH+y8cc/XahsX0v2e1dLAEtGgl6kRfnOGS0q33FOCJzKRHBRB8HR0\nsOtP9qvwa7LDOLvB7TBKDqHxxHIc+TX0IF8Gw6oUrwuOP52yv4+aeS0/98uY\nSszp69Y9aWjP5GtKswgho0xngnqZnwdPlSAqlD1qUD6Z4shtoy3u90+WO4q/\nXaUtCOF3eXyc8NJmu5glSmNhk5HtLjEoHCxA+IRuiwxr40Xfrl4tqJeZli7r\nBkJ8tLJwWEC+YhIvT62kwf6/loGXRJvApDzEfHZFm+P+wXxOuxDSxGPwoM94\nW7VedgcBYFTww0mjL/LO9IJthgd/zzQas2ZE5JTPt/mjHsTgs6wLgITMiHuj\n6Ugg\r\n=WoE5\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCvmuRldMSnOxeQoTA8dkSPvkesPNvDvwEJ9uZ1xtU6LQIhAJqbZcT3PXMDt1NP4NGs29vnerASpgXH2UfvpT5w055x"}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"layneanderson","email":"layneand@gmail.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime_3.0.0-beta.7_1579770958126_0.2572372136728436"},"_hasShrinkwrap":false},"3.0.0-beta.8":{"name":"react-datetime","version":"3.0.0-beta.8","description":"A lightweight but complete datetime picker React.js component","homepage":"https://github.com/YouCanBookMe/react-datetime","repository":{"type":"git","url":"git+https://github.com/YouCanBookMe/react-datetime.git"},"main":"./dist/react-datetime.cjs.js","typings":"./src/datetime/DateTime.d.ts","scripts":{"build":"webpack --config config/webpack.config.build.js","lint":"eslint src/datetime/DateTime.js test/ && echo 'Linting OK! ?'","notify-pre-commit-hook":"echo '### Starting pre-commit hook ?'","playground":"node scripts/start.js","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"echo 'Running tests...' && npm run test:typings && npm run test && echo 'All tests passed! ?'","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":"^2.16.0","react":"^16.5.0"},"devDependencies":{"@babel/core":"7.7.4","@babel/plugin-proposal-class-properties":"^7.7.4","@babel/preset-env":"^7.7.7","@babel/preset-react":"^7.7.4","@svgr/webpack":"4.3.3","@testing-library/jest-dom":"^4.2.4","@testing-library/react":"^9.3.2","@testing-library/user-event":"^7.1.2","@types/react":"^16.5.0","@typescript-eslint/eslint-plugin":"^2.8.0","@typescript-eslint/parser":"^2.8.0","babel-eslint":"10.0.3","babel-jest":"^24.9.0","babel-loader":"8.0.6","babel-plugin-named-asset-import":"^0.3.5","camelcase":"^5.3.1","case-sensitive-paths-webpack-plugin":"2.2.0","css-loader":"3.2.0","dotenv":"8.2.0","dotenv-expand":"5.1.0","enzyme":"^3.0.0","enzyme-adapter-react-16":"^1.15.2","eslint":"^6.6.0","eslint-config-react-app":"^5.1.0","eslint-loader":"3.0.2","eslint-plugin-flowtype":"3.13.0","eslint-plugin-import":"2.18.2","eslint-plugin-jsx-a11y":"6.2.3","eslint-plugin-react":"7.16.0","eslint-plugin-react-hooks":"^1.6.1","file-loader":"4.3.0","fs-extra":"^8.1.0","html-webpack-plugin":"4.0.0-beta.5","identity-obj-proxy":"3.0.0","jest":"24.9.0","jest-environment-jsdom-fourteen":"0.1.0","jest-resolve":"24.9.0","jest-watch-typeahead":"0.4.2","jsdom":"^7.0.2","mini-css-extract-plugin":"0.8.0","moment":"^2.16.0","moment-timezone":"^0.5.13","optimize-css-assets-webpack-plugin":"5.0.3","pnp-webpack-plugin":"1.5.0","postcss-flexbugs-fixes":"4.1.0","postcss-loader":"3.0.0","postcss-normalize":"8.0.1","postcss-preset-env":"6.7.0","postcss-safe-parser":"4.0.1","pre-commit":"^1.1.3","react":"^16.5.0","react-addons-test-utils":">=0.13","react-app-polyfill":"^1.0.5","react-dev-utils":"10.1.0","react-dom":"^16.5.0","react-onclickoutside":"^6.9.0","react-test-renderer":"^16.5.0","resolve":"1.12.2","resolve-url-loader":"3.1.1","sass-loader":"8.0.0","semver":"6.3.0","style-loader":"1.0.0","terser-webpack-plugin":"2.2.1","through2":"^2.0.3","ts-pnp":"1.1.5","typescript":"^3.7.4","url-loader":"2.3.0","webpack":"4.41.2","webpack-cli":"^3.3.10","webpack-dev-server":"3.9.0","webpack-manifest-plugin":"2.2.0","workbox-webpack-plugin":"4.3.1"},"dependencies":{"prop-types":"^15.5.7"},"pre-commit":["notify-pre-commit-hook","lint","test:all"],"jest":{"roots":["<rootDir>/test"],"collectCoverageFrom":["src/datetime/**/*.{js,jsx,ts,tsx}","!src/datetime/**/*.d.ts"],"setupFiles":["react-app-polyfill/jsdom"],"setupFilesAfterEnv":[],"testMatch":["<rootDir>/test/**/__tests__/**/*.{js,jsx,ts,tsx}","<rootDir>/test/**/*.{spec,test}.{js,jsx,ts,tsx}"],"testEnvironment":"jest-environment-jsdom-fourteen","transform":{"^.+\\.(js|jsx|ts|tsx)$":"<rootDir>/node_modules/babel-jest","^.+\\.css$":"<rootDir>/config/jest/cssTransform.js","^(?!.*\\.(js|jsx|ts|tsx|css|json)$)":"<rootDir>/config/jest/fileTransform.js"},"transformIgnorePatterns":["[/\\\\]node_modules[/\\\\].+\\.(js|jsx|ts|tsx)$","^.+\\.module\\.(css|sass|scss)$"],"modulePaths":[],"moduleNameMapper":{"^react-native$":"react-native-web","^.+\\.module\\.(css|sass|scss)$":"identity-obj-proxy"},"moduleFileExtensions":["web.js","js","web.ts","ts","web.tsx","tsx","json","web.jsx","jsx","node"],"watchPlugins":["jest-watch-typeahead/filename","jest-watch-typeahead/testname"]},"browserslist":{"production":[">0.2%","not dead","not op_mini all"],"development":["last 1 chrome version","last 1 firefox version","last 1 safari version"]},"gitHead":"9a8f97ae942e7fb46cca0354deb7ad949127d158","readme":"# react-datetime\n\n[![Build Status](https://secure.travis-ci.org/YouCanBookMe/react-datetime.svg)](https://travis-ci.org/YouCanBookMe/react-datetime)\n[![npm version](https://badge.fury.io/js/react-datetime.svg)](http://badge.fury.io/js/react-datetime)\n\nA date and time picker in the same React.js component. It can be used as a datepicker, timepicker or both at the same time. It is **highly customizable** and it even allows to edit date's milliseconds.\n\nThese are the docs for version 3 of the library. If you are still using the deprecated v2, here it is its documentation, but we strongly recommend to migrate to version 3 in order to keep receiving updates. Please check migrating react-datetime to version 3 to safely update your app.\n\n## Installation\n\nInstall using npm:\n```sh\nnpm install --save react-datetime\n```\n\nInstall using yarn:\n```sh\nyarn add react-datetime\n```\n\n## Usage\n\n[React.js](http://facebook.github.io/react/) and [Moment.js](http://momentjs.com/) are peer dependencies for react-datetime (as well as [Moment.js timezones](https://momentjs.com/timezone/) if you want to use the `displayTimeZone` prop). These dependencies are not installed along with react-datetime automatically, but your project needs to have them installed in order to make the datepicker work. You can then use the datepicker like in the example below.\n\n\n```js\nrequire('react-datetime');\n\n...\n\nrender: function() {\n    return <Datetime />;\n}\n```\n[See this example working](http://codepen.io/simeg/pen/mEmQmP).\n\n**Don't forget to add the [CSS stylesheet](https://github.com/YouCanBookMe/react-datetime/blob/master/css/react-datetime.css) to make it work out of the box.**\n\n## API\n\nBelow we have all the props that we can use with the `<DateTime>` component. There are also some methods that can be used imperatively.\n\n| Name         | Type    | Default | Description |\n| ------------ | ------- | ------- | ----------- |\n| **value** | `Date` | `new Date()` | Represents the selected date by the component, in order to use it as a [controlled component](https://facebook.github.io/react/docs/forms.html#controlled-components). This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. |\n| **initialValue** | `Date` | `new Date()` | Represents the selected date for the component to use it as a [uncontrolled component](https://facebook.github.io/react/docs/uncontrolled-components.html). This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. If you need to set the selected date programmatically after the picker is initialized, please use the `value` prop instead. |\n| **initialViewDate** | `Date` | `new Date()` | Define the month/year/decade/time which is viewed on opening the calendar. This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. If you want to set the view date after the component has been initialize [see the imperative API](#imperative-api). |\n| **initialViewMode** | `string` or `number` | `'days'` | The default view to display when the picker is shown for the first time (`'years'`, `'months'`, `'days'`, `'time'`). If you want to set the view mode after the component has been initialize [see the imperative API](#imperative-api). |\n| **updateOnView** | `string` | Intelligent guess | In the calendar we can navigate through years and months without actualling updating the selected view. Only when we get to one view called the \"updating view\", we make a selection there and the value gets updated, triggering an `onChange` event. By default the updating view will get guessed by using the `dateFormat` so if our dates only show months and never days, the update is done in the `months` view. If we set `updateOnView=\"time\"` selecting a day will navigate to the time view. The time view always updates the selected date, never navigates. If `closeOnSelect={ true }`, making a selection in the view defined by `updateOnView` will close the calendar. |\n| **dateFormat**   | `boolean` or `string`  | `true` | Defines the format for the date. It accepts any [Moment.js date format](http://momentjs.com/docs/#/displaying/format/) (not in localized format). If `true` the date will be displayed using the defaults for the current locale. If `false` the datepicker is disabled and the component can be used as timepicker, see [available units docs](#specify-available-units). |\n| **timeFormat**   | `boolean` or `string`  | `true` | Defines the format for the time. It accepts any [Moment.js time format](http://momentjs.com/docs/#/displaying/format/) (not in localized format). If `true` the time will be displayed using the defaults for the current locale. If `false` the timepicker is disabled and the component can be used as datepicker, see [available units docs](#specify-available-units). |\n| **input** | `boolean` | `true` | Whether to show an input field to edit the date manually. |\n| **open** | `boolean` | `null` | Whether to open or close the picker. If not set react-datetime will open the datepicker on input focus and close it on click outside. |\n| **locale** | `string` | `null` | Manually set the locale for the react-datetime instance. Moment.js locale needs to be loaded to be used, see [i18n docs](#i18n).\n| **utc** | `boolean` | `false` | When true, input time values will be interpreted as UTC (Zulu time) by Moment.js. Otherwise they will default to the user's local timezone.\n| **displayTimeZone** | `string` | `null` | **Needs [moment's timezone](https://momentjs.com/timezone/) available in your project.** When specified, input time values will be displayed in the given time zone. Otherwise they will default to the user's local timezone (unless `utc` specified).\n| **onChange** | `function` | empty function | Callback trigger when the date changes. The callback receives the selected `moment` object as only parameter, if the date in the input is valid. If the date in the input is not valid, the callback receives the value of the input (a string). |\n| **onOpen** | `function` | empty function | Callback trigger for when the user opens the datepicker. The callback receives an event of type SyntheticEvent. |\n| **onClose** | `function` | empty function | Callback trigger for when the user clicks outside of the input. The callback receives the selected `moment` object as only parameter, if the date in the input is valid. If the date in the input is not valid, the callback returned. |\n| **onNavigate** | `function` | empty function | Callback trigger when the view mode changes. The callback receives the selected view mode string (`years`, `months`, `days` or `time`) as only parameter.|\n| **onBeforeNavigate** | `function` | ( nextView, currentView, viewDate ) => nextView | Allows to intercept a change of the calendar view. The accepted function receives the view that it's supposed to navigate to, the view that is showing currently and the date currently shown in the view. Return a viewMode ( default ones are `years`, `months`, `days` or `time`) to navigate to it. If the function returns a \"falsy\" value, the navigation is stopped and we will remain in the current view. |\n| **onNavigateBack** | `function` | empty function | Callback trigger when the user navigates to the previous month, year or decade. The callback receives the amount and type ('month', 'year') as parameters. |\n| **onNavigateForward** | `function` | empty function | Callback trigger when the user navigates to the next month, year or decade. The callback receives the amount and type ('month', 'year') as parameters. |\n| **className** | `string` or `string array` | `''` | Extra class name for the outermost markup element. |\n| **inputProps** | `object` | `undefined` | Defines additional attributes for the input element of the component. For example: `onClick`, `placeholder`, `disabled`, `required`, `name` and `className` (`className` *sets* the class attribute for the input element). See [Customize the Input Appearance](#customize-the-input-appearance). |\n| **isValidDate** | `function` | `() => true` | Define the dates that can be selected. The function receives `(currentDate, selectedDate)` and shall return a `true` or `false` whether the `currentDate` is valid or not. See [selectable dates](#selectable-dates).|\n| **renderInput** | `function` | `undefined` | Replace the rendering of the input element. The function has the following arguments: the default calculated `props` for the input, `openCalendar` (a function which opens the calendar) and `closeCalendar` (a function which closes the calendar). Must return a React component or `null`. See [Customize the Input Appearance](#customize-the-input-appearance). |\n| **renderView** | `function` | `(viewMode, renderDefault) => renderDefault()` | Customize the way the calendar is rendered. The accepted function receives the type of the view it's going to be rendered `'years', 'months', 'days', 'time'` and a function to render the default view of react-datetime, this way it's possible to wrap the original view adding our own markup or override it completely with our own code. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderDay** | `function` | `DOM.td(day)` | Customize the way that the days are shown in the daypicker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderMonth** | `function` | `DOM.td(month)` | Customize the way that the months are shown in the monthpicker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, the `month` and the `year` to be shown, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderYear** | `function` | `DOM.td(year)` | Customize the way that the years are shown in the year picker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, the `year` to be shown, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **strictParsing** | `boolean` | `true` | Whether to use Moment.js's [strict parsing](http://momentjs.com/docs/#/parsing/string-format/) when parsing input.\n| **closeOnSelect** | `boolean` | `false` | When `true`, once the day has been selected, the datepicker will be automatically closed.\n| **closeOnTab** | `boolean` | `true` | When `true` and the input is focused, pressing the `tab` key will close the datepicker.\n| **timeConstraints** | `object` | `null` | Add some constraints to the timepicker. It accepts an `object` with the format `{ hours: { min: 9, max: 15, step: 2 }}`, this example means the hours can't be lower than `9` and higher than `15`, and it will change adding or subtracting `2` hours everytime the buttons are clicked. The constraints can be added to the `hours`, `minutes`, `seconds` and `milliseconds`.\n| **closeOnClickOutside** | `boolean` | `false` | When `true`, keep the datepicker open when click event is triggered outside of component. When `false`, close it.\n\n## Imperative API\nBesides controlling the selected date, there is a navigation through months, years, decades that react-datetime handles for us. We can interfere in it, stopping view transtions by using the prop `onBeforeNavigate`, but we can also navigate to a specific view and date by using some imperative methods.\n\nTo do so, we need to create our component with a `ref` prop amd use the reference.\n```js\n// This would be the code to render the picker\n<DateTime ref=\"datetime\" />\n\n// ... once rendered we can use the imperative API\n// let's show the years view\nthis.refs.datetime.setViewMode('years')\n```\n\nAvailable methods are:\n* **setViewMode( viewMode )**: Set the view currently shown by the calendar. View modes shipped with react-datetime are `years`, `months`, `days` and `time`.\n* **setViewDate( date )**: Set the date that is currently shown in the calendar. This is independent from the selected date and it's the one used to navigate through months or days in the calendar. It accepts a string in the format of the current locale, a `Date` or a `Moment` object as parameter.\n\n## i18n\nDifferent language and date formats are supported by react-datetime. React uses [Moment.js](http://momentjs.com/) to format the dates, and the easiest way of changing the language of the calendar is [changing the Moment.js locale](http://momentjs.com/docs/#/i18n/changing-locale/).\n\n```js\nvar moment = require('moment');\nrequire('moment/locale/fr');\n// Now react-datetime will be in french\n```\n\nIf there are multiple locales loaded, you can use the prop `locale` to define what language shall be used by the instance.\n```js\n<Datetime locale=\"fr-ca\" />\n<Datetime locale=\"de\" />\n```\n[Here you can see the i18n example working](http://codepen.io/simeg/pen/yVVjdJ).\n\n## Customize the Input Appearance\nIt is possible to customize the way that the input is displayed. The simplest is to supply `inputProps` which get assigned to the default `<input />` element within the component.\n\n```js\n<Datetime inputProps={{ placeholder: 'N/A', disabled: true }}>\n```\n\nAlternatively, if you need to render different content than an `<input />` element, you may supply a `renderInput` function which is called instead.\n\n```js\nvar MyDTPicker = React.createClass({\n    render: function(){\n        return <Datetime renderInput={ this.renderInput } />;\n    },\n    renderInput: function( props, openCalendar, closeCalendar ){\n        function clear(){\n            props.onChange({target: {value: ''}});\n        }\n        return (\n            <div>\n                <input {...props} />\n                <button onClick={openCalendar}>open calendar</button>\n                <button onClick={closeCalendar}>close calendar</button>\n                <button onClick={clear}>clear</button>\n            </div>\n        );\n    },\n});\n```\n\n## Customize the Datepicker Appearance\nIt is possible to customize the way that the datepicker display the days, months and years in the calendar. To adapt the calendar for every need it is possible to use the props `renderDay(props, currentDate, selectedDate)`, `renderMonth(props, month, year, selectedDate)` and `renderYear(props, year, selectedDate)` to customize the output of each rendering method.\n\n```js\nvar MyDTPicker = React.createClass({\n    render: function(){\n        return <Datetime\n            renderDay={ this.renderDay }\n            renderMonth={ this.renderMonth }\n            renderYear={ this.renderYear }\n        />;\n    },\n    renderDay: function( props, currentDate, selectedDate ){\n        return <td {...props}>{ '0' + currentDate.date() }</td>;\n    },\n    renderMonth: function( props, month, year, selectedDate ){\n        return <td {...props}>{ month }</td>;\n    },\n    renderYear: function( props, year, selectedDate ){\n        return <td {...props}>{ year % 100 }</td>;\n    }\n});\n```\n[You can see a customized calendar here.](http://codepen.io/simeg/pen/YppLmO)\n\nIt's also possible to override some view in the calendar completelly. Let's say that we want to add a today button in our calendars, when we click it we display the `days` view with the current month:\n```js\nclass MyDTPicker extends React.Component {\n    render() {\n        return (\n            <Datetime ref=\"datetime\"\n                renderView={ (mode, renderDefault) => this.renderView( mode, renderDefault) }\n            />\n        );\n    }\n\n    renderView( mode, renderDefault ) {\n        // Only for years, months and days view\n        if( mode === 'time' ) return renderDefault();\n\n        return (\n            <div className=\"wrapper\">\n                { renderDefault() }\n                <div className=\"controls\">\n                    <button onClick={ () => this.goToToday() }>Today</button>\n                </div>\n            </div>\n        )\n    }\n\n    goToToday() {\n        // Reset\n        this.refs.datetime.setViewDate( new Date() );\n        this.refs.datetime.setViewMode( 'days' );\n    }\n});\n```\n\n#### Method Parameters\n* `props` is the object that the datepicker has calculated for this object. It is convenient to use this object as the `props` for your custom component, since it knows how to handle the click event and its `className` attribute is used by the default styles.\n* `selectedDate` and `currentDate` are [moment objects](http://momentjs.com) and can be used to change the output depending on the selected date, or the date for the current day.\n* `month` and `year` are the numeric representation of the current month and year to be displayed. Notice that the possible `month` values range from `0` to `11`.\n\n## Specify Available Units\nYou can filter out what you want the user to be able to pick by using `dateFormat` and `timeFormat`, e.g. to create a timepicker, yearpicker etc.\n\nIn this example the component is being used as a *timepicker* and can *only be used for selecting a time*.\n```js\n<Datetime dateFormat={false} />\n```\n[Working example of a timepicker here.](http://codepen.io/simeg/pen/mRQBrp)\n\nIn this example you can *only select a year and month*.\n```js\n<Datetime dateFormat=\"YYYY-MM\" timeFormat={false} />\n```\n[Working example of only selecting year and month here.](http://codepen.io/simeg/pen/apQLdd)\n\n## Selectable Dates\nIt is possible to disable dates in the calendar if the user are not allowed to select them, e.g. dates in the past. This is done using the prop `isValidDate`, which admits a function in the form `function(currentDate, selectedDate)` where both arguments are [moment objects](http://momentjs.com). The function shall return `true` for selectable dates, and `false` for disabled ones.\n\nIn the example below are *all dates before today* disabled.\n\n```js\n// Let's use the static moment reference in the Datetime component\nvar yesterday = Datetime.moment().subtract( 1, 'day' );\nvar valid = function( current ){\n    return current.isAfter( yesterday );\n};\n<Datetime isValidDate={ valid } />\n```\n[Working example of disabled days here.](http://codepen.io/simeg/pen/XNNYJg)\n\nIt's also possible to disable *the weekends*, as shown in the example below.\n```js\nvar valid = function( current ){\n    return current.day() !== 0 && current.day() !== 6;\n};\n<Datetime isValidDate={ valid } />\n```\n[Working example of disabled weekends here.](http://codepen.io/simeg/pen/jVVKWq)\n\n## Usage with TypeScript\n\nThis project includes typings for TypeScript versions 1.8 and 2.0. Additional typings are not\nrequired.\n\nTypings for 1.8 are found in `react-datetime.d.ts` and typings for 2.0 are found in `typings/index.d.ts`.\n\n```js\nimport * as Datetime from 'react-datetime';\n\nclass MyDTPicker extends React.Component<MyDTPickerProps, MyDTPickerState> {\n    render() JSX.Element {\n        return <Datetime />;\n    }\n}\n```\n\n## Contributions\nFor information about how to contribute, see the [CONTRIBUTING](.github/CONTRIBUTING.md) file.\n\n## Development\n```sh\nnpm run playground\n```\nThis will start a local development server building `src/index.js` where most development can be done.\n\n### [Changelog](CHANGELOG.md)\n\n### [MIT Licensed](LICENSE.md)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/YouCanBookMe/react-datetime/issues"},"_id":"react-datetime@3.0.0-beta.8","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"dist":{"integrity":"sha512-2SqTMzxLmYwpHLKN8PSD50H839VDH9MGdoqDS2YKMa1UJg8IxqIT0qrZ/GtsEGwv6IEuxqYPCTFjDpQAPiGVmg==","shasum":"6c6b51f4b839bc0621bc1ab7a405081571bedb40","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-3.0.0-beta.8.tgz","fileCount":8,"unpackedSize":279510,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeTRM3CRA9TVsSAnZWagAABc4P/irudWqElXpmWfVZDyLY\n7jPAWwv/omRqrsVHkry7iYOgDyVpcGNldG73kz431CskSqhxYioXyjrGToFU\nayHgg3KKsDAzLsk5WBVSZ49IP/uVmOYiAo+ovo8jvaqtcS9Qkq4eE24fyO3B\nhtjK7rCWWijsCKtQlj0E9HIXIfKXaDvcqi/VgTlrx1CZ74KmKbTR/eGggQFg\nuThAnMKAKldZUuUCiH+4kxorlBHHyCG0PsB+Q9jzu/RuBYV7900OgG71l0M0\nKGt4Q2fay64FZJ9sTsmoe+RhnDHA+XqrYrHDlVMTt2+GWhPZjv3mrmeO4wz/\nRoXEImILhYOQNcu+/3K5l2qPA84f3G7Z6nlfsijM4fdIAe5yrXdvo0WD4b29\nAdPI3FQzHiAjSz9ciFE+N5VZLzskk/AitNN6gQyyRcS9ozFkD6gfVm4GNOfU\nUqib8bLxJZRwfwCYTcz65rYS+JzagLqmfzHAW7MBya9SB5JKO5BQ5+adw3TB\nWepOfaE3w12zocJt6SXSvaOytYd6W4066Zu4GHAOR9lhWz9k9O05k7pHGeED\nn6iiE+j0XCPbIYy6OYxelL4DNhA92ARkpM9eOfcMd2n39OAqooddvhvp5VsS\nl2ncad1KyYUifjTVaDW0zZDUTLbPhcpajaduznnyLUIYZ2MuSJcnib/CSVK5\nBFf3\r\n=226q\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC/1CsdaYCyDkgPKsiOJ8mzpbgjGtD/Qt9EWQC5f0LohwIgUGzI0XLlyvwPSQNC4kySSAifuMzLTU0FXMGNlzrkLr4="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"layneanderson","email":"layneand@gmail.com"},{"name":"simeg","email":"s.egersand@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime_3.0.0-beta.8_1582109494488_0.4689120551097452"},"_hasShrinkwrap":false},"3.0.1":{"name":"react-datetime","version":"3.0.1","description":"A lightweight but complete datetime picker React.js component","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./dist/react-datetime.cjs.js","typings":"./src/datetime/DateTime.d.ts","scripts":{"build":"webpack --config config/webpack.config.build.js","lint":"eslint src/datetime/DateTime.js test/ && echo 'Linting OK! ?'","notify-pre-commit-hook":"echo '### Starting pre-commit hook ?'","playground":"node scripts/start.js","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"echo 'Running tests...' && npm run test:typings && npm run test && echo 'All tests passed! ?'","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":"^2.16.0","react":"^16.5.0"},"devDependencies":{"@babel/core":"7.7.4","@babel/plugin-proposal-class-properties":"^7.7.4","@babel/preset-env":"^7.7.7","@babel/preset-react":"^7.7.4","@svgr/webpack":"4.3.3","@testing-library/jest-dom":"^4.2.4","@testing-library/react":"^9.3.2","@testing-library/user-event":"^7.1.2","@types/react":"^16.5.0","@typescript-eslint/eslint-plugin":"^2.8.0","@typescript-eslint/parser":"^2.8.0","babel-eslint":"10.0.3","babel-jest":"^24.9.0","babel-loader":"8.0.6","babel-plugin-named-asset-import":"^0.3.5","camelcase":"^5.3.1","case-sensitive-paths-webpack-plugin":"2.2.0","css-loader":"3.2.0","dotenv":"8.2.0","dotenv-expand":"5.1.0","enzyme":"^3.0.0","enzyme-adapter-react-16":"^1.15.2","eslint":"^6.6.0","eslint-config-react-app":"^5.1.0","eslint-loader":"3.0.2","eslint-plugin-flowtype":"3.13.0","eslint-plugin-import":"2.18.2","eslint-plugin-jsx-a11y":"6.2.3","eslint-plugin-react":"7.16.0","eslint-plugin-react-hooks":"^1.6.1","file-loader":"4.3.0","fs-extra":"^8.1.0","html-webpack-plugin":"4.0.0-beta.5","identity-obj-proxy":"3.0.0","jest":"24.9.0","jest-environment-jsdom-fourteen":"0.1.0","jest-resolve":"24.9.0","jest-watch-typeahead":"0.4.2","jsdom":"^7.0.2","mini-css-extract-plugin":"0.8.0","moment":"^2.16.0","moment-timezone":"^0.5.13","optimize-css-assets-webpack-plugin":"5.0.3","pnp-webpack-plugin":"1.5.0","postcss-flexbugs-fixes":"4.1.0","postcss-loader":"3.0.0","postcss-normalize":"8.0.1","postcss-preset-env":"6.7.0","postcss-safe-parser":"4.0.1","pre-commit":"^1.1.3","react":"^16.5.0","react-addons-test-utils":">=0.13","react-app-polyfill":"^1.0.5","react-dev-utils":"10.1.0","react-dom":"^16.5.0","react-onclickoutside":"^6.9.0","react-test-renderer":"^16.5.0","resolve":"1.12.2","resolve-url-loader":"3.1.1","sass-loader":"8.0.0","semver":"6.3.0","style-loader":"1.0.0","terser-webpack-plugin":"4.2.1","through2":"^2.0.3","ts-pnp":"1.1.5","typescript":"^3.7.4","url-loader":"2.3.0","webpack":"4.41.2","webpack-cli":"^3.3.10","webpack-dev-server":"3.11.0","webpack-manifest-plugin":"2.2.0","workbox-webpack-plugin":"4.3.1"},"dependencies":{"prop-types":"^15.5.7"},"pre-commit":["notify-pre-commit-hook","lint","test:all"],"jest":{"roots":["<rootDir>/test"],"collectCoverageFrom":["src/datetime/**/*.{js,jsx,ts,tsx}","!src/datetime/**/*.d.ts"],"setupFiles":["react-app-polyfill/jsdom"],"setupFilesAfterEnv":[],"testMatch":["<rootDir>/test/**/__tests__/**/*.{js,jsx,ts,tsx}","<rootDir>/test/**/*.{spec,test}.{js,jsx,ts,tsx}"],"testEnvironment":"jest-environment-jsdom-fourteen","transform":{"^.+\\.(js|jsx|ts|tsx)$":"<rootDir>/node_modules/babel-jest","^.+\\.css$":"<rootDir>/config/jest/cssTransform.js","^(?!.*\\.(js|jsx|ts|tsx|css|json)$)":"<rootDir>/config/jest/fileTransform.js"},"transformIgnorePatterns":["[/\\\\]node_modules[/\\\\].+\\.(js|jsx|ts|tsx)$","^.+\\.module\\.(css|sass|scss)$"],"modulePaths":[],"moduleNameMapper":{"^react-native$":"react-native-web","^.+\\.module\\.(css|sass|scss)$":"identity-obj-proxy"},"moduleFileExtensions":["web.js","js","web.ts","ts","web.tsx","tsx","json","web.jsx","jsx","node"],"watchPlugins":["jest-watch-typeahead/filename","jest-watch-typeahead/testname"]},"browserslist":{"production":[">0.2%","not dead","not op_mini all"],"development":["last 1 chrome version","last 1 firefox version","last 1 safari version"]},"gitHead":"fe501450fe93f744e2571769414b3dd0658dc491","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@3.0.1","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"dist":{"integrity":"sha512-yKzvknVULxjKp7LBzLXiH7lntW+nNcBrREZQWNq6obcK1eG/10svXF6HfETxk2pg0qrwLdvC+dgRR/F+G4kIIw==","shasum":"17d69b37bfa4fa2dc0eaa44f3393dc6f0893b86b","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-3.0.1.tgz","fileCount":8,"unpackedSize":276462,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfZiCCCRA9TVsSAnZWagAA9DsQAJMlpie8PnIQxfGfwCkS\npaFtJz2fN1wntC3o2agazGajeUxb8puz4SB9+ZYSl0wlkljyqOIjND4DNnyt\nqZug6alk0G+uNQx+Lysj02i0mwfx376HsO7q15EoNzIuYKI+2pMOscfrAPG/\nIwgKx12tyz7FU8eVUNsFYRBGrsd7KrGqDnicBlpTM+ktiLQ/LL9WqAyRgsjG\n20SOIQN1aWLqDobxG39tdeAQTAMoCZm/Q8avoS5fwHKRtRmNaa80mTi2OvKJ\nhea2NBsfFnj7nZskcg9pZZYIguytwMSiNsLv9aCyFjlwmuEUoJsrlHtUZmAg\n3tF+k8FSkCRBN4o2fyzAQSA3ajIK2XjNS9t3AhUSiaqImzlO/0nbd8sZTaBi\ncEB4fQOlVEV7sOmIwLkBNbfUfyvfe2f5gKYPvho5ac6PHMxIWsolF3MWgvYH\nQX+E7KoVTtTYxt6Q4ajaIexxNV3bhA0wfXrktI6SPmMDS7BeO7UpokacF9jR\nLLjLEmOxPjLrqdqeriYGOqcJsJCKw5SAxKn2iPfijejJj23NS7bd8j060sCe\npcQSbK5DoYDNXXxD8/9Qq/QblFSs/LCIOH4VUMXC2cVKkJHPcgEAb1Pez1Zu\nQnIX0S0hVBq9NgHeod56/eP9gWSHcRXKFtfRNdxqJG2KahA7xUGlozNC1Fzw\nq2rA\r\n=CCWx\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIE93TRGpFo8NZXz4z+z3z/ZAgYwuqMXIM3TJc7bSBpIFAiAMf96UTkijF2SBc9ILPy892acGUvIq1hov9r+YeS6PXQ=="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"},{"name":"layneanderson","email":"layneand@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime_3.0.1_1600528513739_0.6829753624726826"},"_hasShrinkwrap":false},"3.0.2":{"name":"react-datetime","version":"3.0.2","description":"A lightweight but complete datetime picker React.js component","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./dist/react-datetime.cjs.js","typings":"./typings/DateTime.d.ts","scripts":{"build":"webpack --config config/webpack.config.build.js","lint":"eslint src/datetime/DateTime.js test/ && echo 'Linting OK! ?'","notify-pre-commit-hook":"echo '### Starting pre-commit hook ?'","playground":"node scripts/start.js","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"echo 'Running tests...' && npm run test:typings && npm run test && echo 'All tests passed! ?'","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":"^2.16.0","react":"^16.5.0"},"devDependencies":{"@babel/core":"7.7.4","@babel/plugin-proposal-class-properties":"^7.7.4","@babel/preset-env":"^7.7.7","@babel/preset-react":"^7.7.4","@svgr/webpack":"4.3.3","@testing-library/jest-dom":"^4.2.4","@testing-library/react":"^9.3.2","@testing-library/user-event":"^7.1.2","@types/react":"^16.5.0","@typescript-eslint/eslint-plugin":"^2.8.0","@typescript-eslint/parser":"^2.8.0","babel-eslint":"10.0.3","babel-jest":"^24.9.0","babel-loader":"8.0.6","babel-plugin-named-asset-import":"^0.3.5","camelcase":"^5.3.1","case-sensitive-paths-webpack-plugin":"2.2.0","css-loader":"3.2.0","dotenv":"8.2.0","dotenv-expand":"5.1.0","enzyme":"^3.0.0","enzyme-adapter-react-16":"^1.15.2","eslint":"^6.6.0","eslint-config-react-app":"^5.1.0","eslint-loader":"3.0.2","eslint-plugin-flowtype":"3.13.0","eslint-plugin-import":"2.18.2","eslint-plugin-jsx-a11y":"6.2.3","eslint-plugin-react":"7.16.0","eslint-plugin-react-hooks":"^1.6.1","file-loader":"4.3.0","fs-extra":"^8.1.0","html-webpack-plugin":"4.0.0-beta.5","identity-obj-proxy":"3.0.0","jest":"24.9.0","jest-environment-jsdom-fourteen":"0.1.0","jest-resolve":"24.9.0","jest-watch-typeahead":"0.4.2","jsdom":"^7.0.2","mini-css-extract-plugin":"0.8.0","moment":"^2.16.0","moment-timezone":"^0.5.13","optimize-css-assets-webpack-plugin":"5.0.3","pnp-webpack-plugin":"1.5.0","postcss-flexbugs-fixes":"4.1.0","postcss-loader":"3.0.0","postcss-normalize":"8.0.1","postcss-preset-env":"6.7.0","postcss-safe-parser":"4.0.1","pre-commit":"^1.1.3","react":"^16.5.0","react-addons-test-utils":">=0.13","react-app-polyfill":"^1.0.5","react-dev-utils":"10.1.0","react-dom":"^16.5.0","react-onclickoutside":"^6.9.0","react-test-renderer":"^16.5.0","resolve":"1.12.2","resolve-url-loader":"3.1.1","sass-loader":"8.0.0","semver":"6.3.0","style-loader":"1.0.0","terser-webpack-plugin":"4.2.1","through2":"^2.0.3","ts-pnp":"1.1.5","typescript":"^3.7.4","url-loader":"2.3.0","webpack":"4.41.2","webpack-cli":"^3.3.10","webpack-dev-server":"3.11.0","webpack-manifest-plugin":"2.2.0","workbox-webpack-plugin":"4.3.1"},"dependencies":{"prop-types":"^15.5.7"},"pre-commit":["notify-pre-commit-hook","lint","test:all"],"jest":{"roots":["<rootDir>/test"],"collectCoverageFrom":["src/datetime/**/*.{js,jsx,ts,tsx}","!src/datetime/**/*.d.ts"],"setupFiles":["react-app-polyfill/jsdom"],"setupFilesAfterEnv":[],"testMatch":["<rootDir>/test/**/__tests__/**/*.{js,jsx,ts,tsx}","<rootDir>/test/**/*.{spec,test}.{js,jsx,ts,tsx}"],"testEnvironment":"jest-environment-jsdom-fourteen","transform":{"^.+\\.(js|jsx|ts|tsx)$":"<rootDir>/node_modules/babel-jest","^.+\\.css$":"<rootDir>/config/jest/cssTransform.js","^(?!.*\\.(js|jsx|ts|tsx|css|json)$)":"<rootDir>/config/jest/fileTransform.js"},"transformIgnorePatterns":["[/\\\\]node_modules[/\\\\].+\\.(js|jsx|ts|tsx)$","^.+\\.module\\.(css|sass|scss)$"],"modulePaths":[],"moduleNameMapper":{"^react-native$":"react-native-web","^.+\\.module\\.(css|sass|scss)$":"identity-obj-proxy"},"moduleFileExtensions":["web.js","js","web.ts","ts","web.tsx","tsx","json","web.jsx","jsx","node"],"watchPlugins":["jest-watch-typeahead/filename","jest-watch-typeahead/testname"]},"browserslist":{"production":[">0.2%","not dead","not op_mini all"],"development":["last 1 chrome version","last 1 firefox version","last 1 safari version"]},"gitHead":"d214d6588c564202d2cc244ddd6ed2efe494b5be","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@3.0.2","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"dist":{"integrity":"sha512-9r16cdSq8q7bcuhA456ZIz5/UKokl12qeun06+1OnvYIWOxdG2i3CzIVAtMf1xPxrpLMTeObJRiEUmJeq3SsYQ==","shasum":"f3b0ca8d5b439afb51ccd1efc586d28b32fe13da","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-3.0.2.tgz","fileCount":11,"unpackedSize":292637,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfZz0hCRA9TVsSAnZWagAAlTQP/1FMibGotCJ6N8tKZqZl\nzZ1XDIOgndzRikll3al1zQdLvQsEvGbGDQCbtMKd1YkYRF9ddqxzEAv/P4ns\nUchCGSk+A1f236OWYMPCuThCgDtXKBcJ2mMf5W8Bpja9Y/sIdjqnXIvQpwUs\nH5R+yQNaG/PEds4VaRHNBXdgtvCZ4dDMF9PkAW6jWhna7nbnSNm7gthWWeW+\nPrx+f4yoVOn+ngUx1CD5bcmxXGvhEYlHRVG5rZ+mdw3agGTeN1ozSE3fSbPZ\nfMcIOcsqj5Fl0wqe20azbwEBHtUsnsYY0CYK33sKxtoM2QL43vkRk6ingAen\nMGb/o9W0sK6JjnSkkPZZe4HCq5tcu1chxt4ZjhrBkaELSC6wQ9OH0SqtwonK\nvUeRoq1ni6nFbW9HG6xwzzk+QKgMRb71TgfeoVdvDc72OfR66O5m8f6UwAwk\nNtYXdRPfvjBuxY74/PJEfxduiVB9bVe3eM/NzZZ1tgnJLJWEKzKn/UswRlUj\nRX9Nb3I4yiKwmaeMBpZO7KfF/mJgxPecADPyy7TphEfjnFzKkaxik0/W7q19\n+adA7OB3xxpalmowv7lC15FmtrhjChV65DF6qh+Z4LxgzDTE846ZMCX9wvdO\nrOh1cfp+V8BWr2Mu7c9/GftIh/k3ERvsbVyummfhF5T2lbsOGPBZagOkHxOF\niJ0c\r\n=JqEs\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHMXiwaYDqEH9VvhcF6YHf3incXWMi3rjx9c2zlnS6ZBAiBQPwqoGZ+bJ9sP45lVRweMoX580iymUeH6WiQJP3K4eQ=="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"},{"name":"layneanderson","email":"layneand@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime_3.0.2_1600601377327_0.26829001443766165"},"_hasShrinkwrap":false},"3.0.3":{"name":"react-datetime","version":"3.0.3","description":"A lightweight but complete datetime picker React.js component","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./dist/react-datetime.cjs.js","typings":"./typings/DateTime.d.ts","scripts":{"build":"webpack --config config/webpack.config.build.js","lint":"eslint src/datetime/DateTime.js test/ && echo 'Linting OK! ?'","notify-pre-commit-hook":"echo '### Starting pre-commit hook ?'","playground":"node scripts/start.js","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"echo 'Running tests...' && npm run test:typings && npm run test && echo 'All tests passed! ?'","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":"^2.16.0","react":"^16.5.0"},"devDependencies":{"@babel/core":"7.7.4","@babel/plugin-proposal-class-properties":"^7.7.4","@babel/preset-env":"^7.7.7","@babel/preset-react":"^7.7.4","@svgr/webpack":"4.3.3","@testing-library/jest-dom":"^4.2.4","@testing-library/react":"^9.3.2","@testing-library/user-event":"^7.1.2","@types/react":"^16.5.0","@typescript-eslint/eslint-plugin":"^2.8.0","@typescript-eslint/parser":"^2.8.0","babel-eslint":"10.0.3","babel-jest":"^24.9.0","babel-loader":"8.0.6","babel-plugin-named-asset-import":"^0.3.5","camelcase":"^5.3.1","case-sensitive-paths-webpack-plugin":"2.2.0","css-loader":"3.2.0","dotenv":"8.2.0","dotenv-expand":"5.1.0","enzyme":"^3.0.0","enzyme-adapter-react-16":"^1.15.2","eslint":"^6.6.0","eslint-config-react-app":"^5.1.0","eslint-loader":"3.0.2","eslint-plugin-flowtype":"3.13.0","eslint-plugin-import":"2.18.2","eslint-plugin-jsx-a11y":"6.2.3","eslint-plugin-react":"7.16.0","eslint-plugin-react-hooks":"^1.6.1","file-loader":"4.3.0","fs-extra":"^8.1.0","html-webpack-plugin":"4.0.0-beta.5","identity-obj-proxy":"3.0.0","jest":"24.9.0","jest-environment-jsdom-fourteen":"0.1.0","jest-resolve":"24.9.0","jest-watch-typeahead":"0.4.2","jsdom":"^7.0.2","mini-css-extract-plugin":"0.8.0","moment":"^2.16.0","moment-timezone":"^0.5.13","optimize-css-assets-webpack-plugin":"5.0.3","pnp-webpack-plugin":"1.5.0","postcss-flexbugs-fixes":"4.1.0","postcss-loader":"3.0.0","postcss-normalize":"8.0.1","postcss-preset-env":"6.7.0","postcss-safe-parser":"4.0.1","pre-commit":"^1.1.3","react":"^16.5.0","react-addons-test-utils":">=0.13","react-app-polyfill":"^1.0.5","react-dev-utils":"10.1.0","react-dom":"^16.5.0","react-onclickoutside":"^6.9.0","react-test-renderer":"^16.5.0","resolve":"1.12.2","resolve-url-loader":"3.1.1","sass-loader":"8.0.0","semver":"6.3.0","style-loader":"1.0.0","terser-webpack-plugin":"4.2.1","through2":"^2.0.3","ts-pnp":"1.1.5","typescript":"^3.7.4","url-loader":"2.3.0","webpack":"4.41.2","webpack-cli":"^3.3.10","webpack-dev-server":"3.11.0","webpack-manifest-plugin":"2.2.0","workbox-webpack-plugin":"4.3.1"},"dependencies":{"prop-types":"^15.5.7"},"pre-commit":["notify-pre-commit-hook","lint","test:all"],"jest":{"roots":["<rootDir>/test"],"collectCoverageFrom":["src/datetime/**/*.{js,jsx,ts,tsx}","!src/datetime/**/*.d.ts"],"setupFiles":["react-app-polyfill/jsdom"],"setupFilesAfterEnv":[],"testMatch":["<rootDir>/test/**/__tests__/**/*.{js,jsx,ts,tsx}","<rootDir>/test/**/*.{spec,test}.{js,jsx,ts,tsx}"],"testEnvironment":"jest-environment-jsdom-fourteen","transform":{"^.+\\.(js|jsx|ts|tsx)$":"<rootDir>/node_modules/babel-jest","^.+\\.css$":"<rootDir>/config/jest/cssTransform.js","^(?!.*\\.(js|jsx|ts|tsx|css|json)$)":"<rootDir>/config/jest/fileTransform.js"},"transformIgnorePatterns":["[/\\\\]node_modules[/\\\\].+\\.(js|jsx|ts|tsx)$","^.+\\.module\\.(css|sass|scss)$"],"modulePaths":[],"moduleNameMapper":{"^react-native$":"react-native-web","^.+\\.module\\.(css|sass|scss)$":"identity-obj-proxy"},"moduleFileExtensions":["web.js","js","web.ts","ts","web.tsx","tsx","json","web.jsx","jsx","node"],"watchPlugins":["jest-watch-typeahead/filename","jest-watch-typeahead/testname"]},"browserslist":{"production":[">0.2%","not dead","not op_mini all"],"development":["last 1 chrome version","last 1 firefox version","last 1 safari version"]},"gitHead":"32581578525bd0ac5307cd05e55ce62eec171cb9","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@3.0.3","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"dist":{"integrity":"sha512-GghFMiegh5nT3SxrFpBblMTX7Xl4b+rG7SNBEsUmpnRkBPERHVqmmvd52P2sjn8Rt9pluMoiYRqZUbKzHOcK9Q==","shasum":"37ec8223e7ee06826ba0feac4c5d6af5b8e100b1","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-3.0.3.tgz","fileCount":11,"unpackedSize":294129,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfaNOXCRA9TVsSAnZWagAAIT8P+wee749uMH9vIMK4gibH\nvGAsab2cwqjwFyyEQEoeJiHROuWFMTSufszrlcDkC/Wvt/bJQFij0fEhkiVB\nXllHw9E8lSsMliJTAGNfdD13hkiyOdK8W6YvSGFJG55fx0yfxVbq6tepXH8J\n7Px7jRlEPinEzHvf4DPkvGMYC/mhkchSdTj1fbj46kqj7G5rFZ4uhfcVvVSz\n05a9tKijeqxI95PX2ReboHL0eZkZZOFqMsrUQ1gB7I8b1gjU6e45qDP3dGG9\ng5Hyn289sBGpw3lR7sqmlfdHZLSTmaGKh+u+5iz63WPdPCp59Z7wZjg9mH6w\nQHyGSw/OEpxOPvUahf1F7rRrbT3l1H2bKa2fa4FlZV51MKtpAc4kNBCytorO\nhYBykMFAdp7Ihv50V0w3dosF7sS8uDK9D2w5b/Iagoq+H+106GcVIWUE3VAe\n2Wcg+6UjkSTqN9zwaoCPT5Uw7VWlGuZLkGooesqllGvcB7cwo3/dyGfRBcdc\nW0NWeXuZHCz4jFTbi+eIKQKk7LecIinWevC8vsat1Nv/Caftv6tefoyM97fy\nk6IQa8N+qkCWCxxxYaXEphGhVDCrBeFbRQR1zZv7cCUnK0ch6QHtD4GUDcOj\nYqn9im/pFKdE5T0xws+SxGzvkcQQ8hNNprLr1NDxx9eKPhzVreNF3uH6WNm5\nCAI2\r\n=1eVT\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDa6sX0Te2AFrentKMgzHKH7HITgY2TcJem5lUC+mnp3wIhAKX8eueIEq3C8xAIC0pn4OsJPO09q0PNENCKQNGCAtwM"}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"},{"name":"layneanderson","email":"layneand@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime_3.0.3_1600705431127_0.3913769717971505"},"_hasShrinkwrap":false},"3.0.4":{"name":"react-datetime","version":"3.0.4","description":"A lightweight but complete datetime picker React.js component","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./dist/react-datetime.cjs.js","typings":"./typings/DateTime.d.ts","scripts":{"build":"webpack --config config/webpack.config.build.js","lint":"eslint src/datetime/DateTime.js test/ && echo 'Linting OK! ?'","notify-pre-commit-hook":"echo '### Starting pre-commit hook ?'","playground":"node scripts/start.js","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"echo 'Running tests...' && npm run test:typings && npm run test && echo 'All tests passed! ?'","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":"^2.16.0","react":"^16.5.0"},"devDependencies":{"@babel/core":"7.7.4","@babel/plugin-proposal-class-properties":"^7.7.4","@babel/preset-env":"^7.7.7","@babel/preset-react":"^7.7.4","@svgr/webpack":"4.3.3","@testing-library/jest-dom":"^4.2.4","@testing-library/react":"^9.3.2","@testing-library/user-event":"^7.1.2","@types/react":"^16.5.0","@typescript-eslint/eslint-plugin":"^2.8.0","@typescript-eslint/parser":"^2.8.0","babel-eslint":"10.0.3","babel-jest":"^24.9.0","babel-loader":"8.0.6","babel-plugin-named-asset-import":"^0.3.5","camelcase":"^5.3.1","case-sensitive-paths-webpack-plugin":"2.2.0","css-loader":"3.2.0","dotenv":"8.2.0","dotenv-expand":"5.1.0","enzyme":"^3.0.0","enzyme-adapter-react-16":"^1.15.2","eslint":"^6.6.0","eslint-config-react-app":"^5.1.0","eslint-loader":"3.0.2","eslint-plugin-flowtype":"3.13.0","eslint-plugin-import":"2.18.2","eslint-plugin-jsx-a11y":"6.2.3","eslint-plugin-react":"7.16.0","eslint-plugin-react-hooks":"^1.6.1","file-loader":"4.3.0","fs-extra":"^8.1.0","html-webpack-plugin":"4.0.0-beta.5","identity-obj-proxy":"3.0.0","jest":"24.9.0","jest-environment-jsdom-fourteen":"0.1.0","jest-resolve":"24.9.0","jest-watch-typeahead":"0.4.2","jsdom":"^7.0.2","mini-css-extract-plugin":"0.8.0","moment":"^2.16.0","moment-timezone":"^0.5.13","optimize-css-assets-webpack-plugin":"5.0.3","pnp-webpack-plugin":"1.5.0","postcss-flexbugs-fixes":"4.1.0","postcss-loader":"3.0.0","postcss-normalize":"8.0.1","postcss-preset-env":"6.7.0","postcss-safe-parser":"4.0.1","pre-commit":"^1.1.3","react":"^16.5.0","react-addons-test-utils":">=0.13","react-app-polyfill":"^1.0.5","react-dev-utils":"10.1.0","react-dom":"^16.5.0","react-onclickoutside":"^6.9.0","react-test-renderer":"^16.5.0","resolve":"1.12.2","resolve-url-loader":"3.1.1","sass-loader":"8.0.0","semver":"6.3.0","style-loader":"1.0.0","terser-webpack-plugin":"4.2.1","through2":"^2.0.3","ts-pnp":"1.1.5","typescript":"^3.7.4","url-loader":"2.3.0","webpack":"4.41.2","webpack-cli":"^3.3.10","webpack-dev-server":"3.11.0","webpack-manifest-plugin":"2.2.0","workbox-webpack-plugin":"4.3.1"},"dependencies":{"prop-types":"^15.5.7"},"pre-commit":["notify-pre-commit-hook","lint","test:all"],"jest":{"roots":["<rootDir>/test"],"collectCoverageFrom":["src/datetime/**/*.{js,jsx,ts,tsx}","!src/datetime/**/*.d.ts"],"setupFiles":["react-app-polyfill/jsdom"],"setupFilesAfterEnv":[],"testMatch":["<rootDir>/test/**/__tests__/**/*.{js,jsx,ts,tsx}","<rootDir>/test/**/*.{spec,test}.{js,jsx,ts,tsx}"],"testEnvironment":"jest-environment-jsdom-fourteen","transform":{"^.+\\.(js|jsx|ts|tsx)$":"<rootDir>/node_modules/babel-jest","^.+\\.css$":"<rootDir>/config/jest/cssTransform.js","^(?!.*\\.(js|jsx|ts|tsx|css|json)$)":"<rootDir>/config/jest/fileTransform.js"},"transformIgnorePatterns":["[/\\\\]node_modules[/\\\\].+\\.(js|jsx|ts|tsx)$","^.+\\.module\\.(css|sass|scss)$"],"modulePaths":[],"moduleNameMapper":{"^react-native$":"react-native-web","^.+\\.module\\.(css|sass|scss)$":"identity-obj-proxy"},"moduleFileExtensions":["web.js","js","web.ts","ts","web.tsx","tsx","json","web.jsx","jsx","node"],"watchPlugins":["jest-watch-typeahead/filename","jest-watch-typeahead/testname"]},"browserslist":{"production":[">0.2%","not dead","not op_mini all"],"development":["last 1 chrome version","last 1 firefox version","last 1 safari version"]},"gitHead":"d6e72d27042c0f9201b02348c0e1d76b828f65a1","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@3.0.4","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"dist":{"integrity":"sha512-v6MVwCve+DRaLN2f22LTO5TlrPpkUXumPkp1zfrbhaFtSYGl2grZ2JtwJfLxRj/T4ACyePAV4srCR6cMSiQ/Iw==","shasum":"176159d08d35c9e750f0be2f0b974e4f9532ffa5","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-3.0.4.tgz","fileCount":11,"unpackedSize":295521,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfa3ZeCRA9TVsSAnZWagAAEkgQAJYMk/JOumzfVPm+IuVA\nA2vwGakPEvNPi5sIsoMYYOFit79I5vUjqr9dcLewDXO5HhgRBfA36QyqnzpT\nRDyz//KJZHzHFuAl0DSJoxqfUGFFxpSlddY92RoB/SYBJkAxKYP/E+KbOOYP\nYab+xMx80AXmdYv4d2jPWjq1Eq+hNYdHHEvMYXm9CIfCngBD99//pNKOmoTC\n1RDuWAz7NphfweJJemtLuJf6Ny5hXZJw6IZ+G9XqcokifiEkx9vFZBk80cVn\n4ZBgWZnw/ZZFRGYmVayHG7wPvv019B4RzgYHs5h7mV6t1LU+Yzz+NqxWdmg1\nCaNoidJHo+6PFLhn2jGW4a/meXYgCjSU3C9OO0NR6m+e/RuZ0YVRJndhUlV3\nPboQ+bvoZcOH8blRKZzFYzmoK4kO9IBIoElUBQzHQHs1q3eXFdJn2gA2uUPZ\n0Lp/t0TuZprElvUlzmIbvIY9ZiJqB3QcPqmT7UNQrmDSm8b+mxVrcM4J5Spt\nODZJTnzJWJi1nDp+cORKtnEctuwr3nitdsVNo8BaY3Y+PsZNnwvTat5szhbW\nT8Y+Fo5ufKecTylWfJQ8tSdnnNwkXGW4oAr0qQ3rUvqBoSm+YTiDrd37kWVo\n9yRicOFm4y25bKM1Dv1uCLXTCX3wu8pr6O7+JE9DlMfIvQDwSfaQ4LmYfNv/\n7yUA\r\n=Ol8K\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCZfAncZppNXPGSEOHEKVX9DGwy8cN1B5PD6/ovOMkV7AIgC4Qz0HleBNIWgd9hxlQze5yjx08NUsFg+EGepcjcrPY="}]},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"},{"name":"layneanderson","email":"layneand@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime_3.0.4_1600878173839_0.6200681913204218"},"_hasShrinkwrap":false},"3.1.0":{"name":"react-datetime","version":"3.1.0","description":"A lightweight but complete datetime picker React.js component","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./dist/react-datetime.cjs.js","typings":"./typings/DateTime.d.ts","scripts":{"build":"webpack --config config/webpack.config.build.js","lint":"eslint src/DateTime.js test/ && echo 'Linting OK! ?'","notify-pre-commit-hook":"echo '### Starting pre-commit hook ?'","playground":"node scripts/start.js","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"echo 'Running tests...' && npm run test:typings && npm run test && echo 'All tests passed! ?'","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":"^2.16.0","react":"^16.5.0 || ^17.0.0"},"devDependencies":{"@babel/core":"7.7.4","@babel/plugin-proposal-class-properties":"^7.7.4","@babel/preset-env":"^7.7.7","@babel/preset-react":"^7.7.4","@svgr/webpack":"4.3.3","@testing-library/jest-dom":"^4.2.4","@testing-library/react":"^9.3.2","@testing-library/user-event":"^7.1.2","@types/react":"^16.5.0","@typescript-eslint/eslint-plugin":"^2.8.0","@typescript-eslint/parser":"^2.8.0","babel-eslint":"10.0.3","babel-jest":"^24.9.0","babel-loader":"8.0.6","babel-plugin-named-asset-import":"^0.3.5","camelcase":"^5.3.1","case-sensitive-paths-webpack-plugin":"2.2.0","css-loader":"3.2.0","dotenv":"8.2.0","dotenv-expand":"5.1.0","enzyme":"^3.0.0","enzyme-adapter-react-16":"^1.15.2","eslint":"^6.6.0","eslint-config-react-app":"^5.1.0","eslint-loader":"3.0.2","eslint-plugin-flowtype":"3.13.0","eslint-plugin-import":"2.18.2","eslint-plugin-jsx-a11y":"6.2.3","eslint-plugin-react":"7.16.0","eslint-plugin-react-hooks":"^1.6.1","file-loader":"4.3.0","fs-extra":"^8.1.0","html-webpack-plugin":"4.0.0-beta.5","identity-obj-proxy":"3.0.0","jest":"24.9.0","jest-environment-jsdom-fourteen":"0.1.0","jest-resolve":"24.9.0","jest-watch-typeahead":"0.4.2","jsdom":"^7.0.2","mini-css-extract-plugin":"0.8.0","moment":"^2.16.0","moment-timezone":"^0.5.13","optimize-css-assets-webpack-plugin":"5.0.3","pnp-webpack-plugin":"1.5.0","postcss-flexbugs-fixes":"4.1.0","postcss-loader":"3.0.0","postcss-normalize":"8.0.1","postcss-preset-env":"6.7.0","postcss-safe-parser":"4.0.1","pre-commit":"^1.1.3","react":"^16.5.0","react-app-polyfill":"^1.0.5","react-dev-utils":"10.1.0","react-dom":"^16.5.0","react-onclickoutside":"^6.9.0","react-test-renderer":"^16.5.0","resolve":"1.12.2","resolve-url-loader":"3.1.1","sass-loader":"8.0.0","semver":"6.3.0","style-loader":"1.0.0","terser-webpack-plugin":"4.2.1","through2":"^2.0.3","ts-pnp":"1.1.5","typescript":"^3.7.4","url-loader":"2.3.0","webpack":"4.41.2","webpack-cli":"^3.3.10","webpack-dev-server":"3.11.0","webpack-manifest-plugin":"2.2.0","workbox-webpack-plugin":"4.3.1"},"dependencies":{"prop-types":"^15.5.7"},"pre-commit":["notify-pre-commit-hook","lint","test:all"],"jest":{"roots":["<rootDir>/test"],"collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/playground/**","!src/**/*.d.ts"],"setupFiles":["react-app-polyfill/jsdom"],"setupFilesAfterEnv":[],"testMatch":["<rootDir>/test/**/__tests__/**/*.{js,jsx,ts,tsx}","<rootDir>/test/**/*.{spec,test}.{js,jsx,ts,tsx}"],"testEnvironment":"jest-environment-jsdom-fourteen","transform":{"^.+\\.(js|jsx|ts|tsx)$":"<rootDir>/node_modules/babel-jest","^.+\\.css$":"<rootDir>/config/jest/cssTransform.js","^(?!.*\\.(js|jsx|ts|tsx|css|json)$)":"<rootDir>/config/jest/fileTransform.js"},"transformIgnorePatterns":["[/\\\\]node_modules[/\\\\].+\\.(js|jsx|ts|tsx)$","^.+\\.module\\.(css|sass|scss)$"],"modulePaths":[],"moduleNameMapper":{"^react-native$":"react-native-web","^.+\\.module\\.(css|sass|scss)$":"identity-obj-proxy"},"moduleFileExtensions":["web.js","js","web.ts","ts","web.tsx","tsx","json","web.jsx","jsx","node"],"watchPlugins":["jest-watch-typeahead/filename","jest-watch-typeahead/testname"]},"browserslist":{"production":[">0.2%","not dead","not op_mini all"],"development":["last 1 chrome version","last 1 firefox version","last 1 safari version"]},"gitHead":"4e880f2167789867d6074a655c18c16717a92e49","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@3.1.0","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"dist":{"integrity":"sha512-Vx6/wr03r9+mDtXv6rHTwjqZ/Hbq889jgc8/pD2Y7Hx+pf+Kr7KcTWIEDNMWGE4ZGi2BiXn+fjqVMnwIjxWguA==","shasum":"fa10306287d50bf916ab525ce7d6d637ecfc71b0","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-3.1.0.tgz","fileCount":11,"unpackedSize":294634,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhMSwQCRA9TVsSAnZWagAAYSkP/1nu1cTyst1sVdjYUQHM\nFLUOiKzKri4Db7mm94BnwdtHsEWocpbJwC9iogrvuvsOU2KzzZRQZtWSDm/N\nbnKwtXrBmwt6B35GBCBtPUCrMzHyS83qnjbLdqwL4obwAij9Cm/Zu80rAo7E\nXEko4LOcau+2DFrkrKuRICoOjbU1LtZyT0mIYb4xXzBqJhz2NiZollQwsEmi\npcC+aF4TPewS8c7IyM+cbncbFUNZUl/svyvQXOU0mEV2fytepdnPmQJ39XAN\nellyM8rZiFVPswrV/ycat/aB1bv1HUbMbMXNRig8i51Q1cUtgnHKFgGNyqKz\nVWuaqQgsPjtp3h1CxMmx3/1Vj4wYS+Dg1hHf3/8rgiHOTF4VSkx5P1e4KtVh\nZV/mSpQ9m0JJ5Gd/VukZ2qbs+LMWuo2qxEaCXDeMcLNqWGrcOktEUF0D+IR+\n6yZ6RK1gZV+st5O8jlxsayv8Akq/VhWqSUOpkCFq0LwdNtwMLbzuMtZLYoNC\nf4laOOA2TqMDcPd/Ob2y98E6qtIkO7L4qylsCbK4kO+5aDxk8NC2pRAMSbFY\nhDHDKIEnBw9enT0hStf2sqXX1+uPrxBGgIvi88o3NB04DZePdUBHn9MXnKX3\nBr9ARaYJ2LGRljN61ONhG7pLvDrSdVWtL4SAACj8aUOhsD+2ocVgo8E7ZqC+\nLDAB\r\n=nuEF\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDwYcNj3vv1nTV5HednzR5mm5m/9yRVSIz7kYZpU1QksgIhAPhFp9NXwivcWuk1IjiIvX/+WD318VxBgcsq4AQY8Xtm"}]},"directories":{},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"},{"name":"layneanderson","email":"layneand@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime_3.1.0_1630612496420_0.3029428547484132"},"_hasShrinkwrap":false},"3.1.1":{"name":"react-datetime","version":"3.1.1","description":"A lightweight but complete datetime picker React.js component","homepage":"https://github.com/arqex/react-datetime","repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"main":"./dist/react-datetime.cjs.js","typings":"./typings/DateTime.d.ts","scripts":{"build":"webpack --config config/webpack.config.build.js","lint":"eslint src/DateTime.js test/ && echo 'Linting OK! ?'","notify-pre-commit-hook":"echo '### Starting pre-commit hook ?'","playground":"node scripts/start.js","test":"jest","test:typings":"tsc -p ./typings","test:snapshot":"jest snapshot","test:snapshot:update":"jest snapshot --updateSnapshot","test:all":"echo 'Running tests...' && npm run test:typings && npm run test && echo 'All tests passed! ?'","test:watch":"jest --watch"},"keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"author":{"name":"Javier Marquez"},"license":"MIT","peerDependencies":{"moment":"^2.16.0","react":"^16.5.0 || ^17.0.0"},"devDependencies":{"@babel/core":"7.7.4","@babel/plugin-proposal-class-properties":"^7.7.4","@babel/preset-env":"^7.7.7","@babel/preset-react":"^7.7.4","@svgr/webpack":"4.3.3","@testing-library/jest-dom":"^4.2.4","@testing-library/react":"^9.3.2","@testing-library/user-event":"^7.1.2","@types/react":"^16.5.0","@typescript-eslint/eslint-plugin":"^2.8.0","@typescript-eslint/parser":"^2.8.0","babel-eslint":"10.0.3","babel-jest":"^24.9.0","babel-loader":"8.0.6","babel-plugin-named-asset-import":"^0.3.5","camelcase":"^5.3.1","case-sensitive-paths-webpack-plugin":"2.2.0","css-loader":"3.2.0","dotenv":"8.2.0","dotenv-expand":"5.1.0","enzyme":"^3.0.0","enzyme-adapter-react-16":"^1.15.2","eslint":"^6.6.0","eslint-config-react-app":"^5.1.0","eslint-loader":"3.0.2","eslint-plugin-flowtype":"3.13.0","eslint-plugin-import":"2.18.2","eslint-plugin-jsx-a11y":"6.2.3","eslint-plugin-react":"7.16.0","eslint-plugin-react-hooks":"^1.6.1","file-loader":"4.3.0","fs-extra":"^8.1.0","html-webpack-plugin":"4.0.0-beta.5","identity-obj-proxy":"3.0.0","jest":"24.9.0","jest-environment-jsdom-fourteen":"0.1.0","jest-resolve":"24.9.0","jest-watch-typeahead":"0.4.2","jsdom":"^7.0.2","mini-css-extract-plugin":"0.8.0","moment":"^2.16.0","moment-timezone":"^0.5.13","optimize-css-assets-webpack-plugin":"5.0.3","pnp-webpack-plugin":"1.5.0","postcss-flexbugs-fixes":"4.1.0","postcss-loader":"3.0.0","postcss-normalize":"8.0.1","postcss-preset-env":"6.7.0","postcss-safe-parser":"4.0.1","pre-commit":"^1.1.3","react":"^16.5.0","react-app-polyfill":"^1.0.5","react-dev-utils":"10.1.0","react-dom":"^16.5.0","react-onclickoutside":"^6.9.0","react-test-renderer":"^16.5.0","resolve":"1.12.2","resolve-url-loader":"3.1.1","sass-loader":"8.0.0","semver":"6.3.0","style-loader":"1.0.0","terser-webpack-plugin":"4.2.1","through2":"^2.0.3","ts-pnp":"1.1.5","typescript":"^3.7.4","url-loader":"2.3.0","webpack":"4.41.2","webpack-cli":"^3.3.10","webpack-dev-server":"3.11.0","webpack-manifest-plugin":"2.2.0","workbox-webpack-plugin":"4.3.1"},"dependencies":{"prop-types":"^15.5.7"},"pre-commit":["notify-pre-commit-hook","lint","test:all"],"jest":{"roots":["<rootDir>/test"],"collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/playground/**","!src/**/*.d.ts"],"setupFiles":["react-app-polyfill/jsdom"],"setupFilesAfterEnv":[],"testMatch":["<rootDir>/test/**/__tests__/**/*.{js,jsx,ts,tsx}","<rootDir>/test/**/*.{spec,test}.{js,jsx,ts,tsx}"],"testEnvironment":"jest-environment-jsdom-fourteen","transform":{"^.+\\.(js|jsx|ts|tsx)$":"<rootDir>/node_modules/babel-jest","^.+\\.css$":"<rootDir>/config/jest/cssTransform.js","^(?!.*\\.(js|jsx|ts|tsx|css|json)$)":"<rootDir>/config/jest/fileTransform.js"},"transformIgnorePatterns":["[/\\\\]node_modules[/\\\\].+\\.(js|jsx|ts|tsx)$","^.+\\.module\\.(css|sass|scss)$"],"modulePaths":[],"moduleNameMapper":{"^react-native$":"react-native-web","^.+\\.module\\.(css|sass|scss)$":"identity-obj-proxy"},"moduleFileExtensions":["web.js","js","web.ts","ts","web.tsx","tsx","json","web.jsx","jsx","node"],"watchPlugins":["jest-watch-typeahead/filename","jest-watch-typeahead/testname"]},"browserslist":{"production":[">0.2%","not dead","not op_mini all"],"development":["last 1 chrome version","last 1 firefox version","last 1 safari version"]},"gitHead":"8071a7966c9dccea11574ff0c80bf5e93d0180d3","bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"_id":"react-datetime@3.1.1","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"arqex","email":"javi@arqex.com"},"dist":{"integrity":"sha512-gHCTjAniCcMb6jdXpz+MpVe/uCeaHNDOofg+l41nLlJI3uBLBMV40CQbGB2TCTUpCzGT1mCs4vQzKGMjXO/WWQ==","shasum":"adc346efda47653cfff9259c979f03f56106e48c","tarball":"https://registry.npmjs.org/react-datetime/-/react-datetime-3.1.1.tgz","fileCount":11,"unpackedSize":294593,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhNjTUCRA9TVsSAnZWagAAEQwQAKD3dK151P7loDoxyOCC\n5Nb/WorWJAYfvQkdLLBvNQYKmroUbP2poC9qHBDOaWKVu0jSBga0kq9wUFvK\nCNA3dvz/wtbUYgyklzXV2o5+LNtvGZETWqt9TiH64AJ5QOL+cb82bCF//uTY\nRJGL5dxH84mLTvh5Sm0OZqHmqdH5v937qsIDCqS3AIlUmKMykClWCI7UC21L\nxMvp5FQlq7RbkxV+D1LpQNPnP/fO/EcgK2K5Q3Bi2l0fg80cg4PlCXfVKPOb\niZ/mExJhrNel+bScpZRuRjTvkSl2RqW7bqUofP1W0mEhXqqkTPEJDt0P+gJO\nBiGIgpJRFXG/hHnvFAH44nDxqon3VrIQpwTtZU94VtliV3pBpkwXeDvsLmYG\neLTSzFPlprdXY3as2gnJr9McN4C9/TslwCVssJK4e+XT1zSpwYbmJQzIr2Lk\nc/bvbkYjO359xDfVmoD1X6wAa/EVI2/FIs8AHeBFuRbewmEtEA6FMtPwW95b\ncyg+A6z8Cssz0vGBlLBFq48qCI5E2QZNmS3VRTk0cxi5wawDpNAPgM2RPQfe\n6P/VgWfIN1kX0tM7v1aCgXj2GIlbRKxZqkrShgFjcwcR6dprUDjC8xxer1Ps\nw3o8cmZ6Qs3z8G41vp1nzfB7yx1wMoy1B653Wkm9zhyOxYu2+1sm/X+ZKxfy\nOKYp\r\n=53eM\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDreP9rAAxBH0OGFwTyQ19aUFEBEFK7izbiKstfgB3kpQIhAMm30TFVu/KlmvqGRUxNAeQy/jCzN3Trjb4sknY0ZdPv"}]},"directories":{},"maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"},{"name":"layneanderson","email":"layneand@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-datetime_3.1.1_1630942419985_0.7443886151314845"},"_hasShrinkwrap":false}},"readme":"# react-datetime\n\n[![Build Status](https://secure.travis-ci.org/arqex/react-datetime.svg)](https://travis-ci.org/arqex/react-datetime)\n[![npm version](https://badge.fury.io/js/react-datetime.svg)](http://badge.fury.io/js/react-datetime)\n\nA date and time picker in the same React.js component. It can be used as a datepicker, timepicker or both at the same time. It is **highly customizable** and it even allows to edit date's milliseconds.\n\n> **Back to the roots!** Thanks to the people of [YouCanBook.me (best scheduling tool)](https://youcanbook.me) for sponsoring react-datetime for so long. Now the project returns to the community and we are **looking for contributors** to continue improving react-datetime. [Would you like to give a hand?](contribute-home.md)\n\n**Version 3 is out!** These are the docs for version 3 of the library. If you are still using the deprecated v2, [here it is its documentation](https://github.com/arqex/react-datetime/blob/2a83208452ac5e41c43fea31ef47c65efba0bb56/README.md), but we strongly recommend to migrate to version 3 in order to keep receiving updates. Please check [migrating react-datetime to version 3](migrateToV3.md) to safely update your app.\n\n## Installation\n\nInstall using npm:\n```sh\nnpm install --save react-datetime\n```\n\nInstall using yarn:\n```sh\nyarn add react-datetime\n```\n\n## Usage\n\n[React.js](http://facebook.github.io/react/) and [Moment.js](http://momentjs.com/) are peer dependencies for react-datetime (as well as [Moment.js timezones](https://momentjs.com/timezone/) if you want to use the `displayTimeZone` prop). These dependencies are not installed along with react-datetime automatically, but your project needs to have them installed in order to make the datepicker work. You can then use the datepicker like in the example below.\n\n```js\n// Import the library\nimport Datetime from 'react-datetime';\n\n// return it from your components\nreturn <Datetime />;\n```\n[See this example working](https://codesandbox.io/s/boring-dew-uzln3).\n\nDo you want more examples? [Have a look at our resources gallery](resources.md).\n\n**Don't forget to add the [CSS stylesheet](https://github.com/arqex/react-datetime/blob/master/css/react-datetime.css) to make it work out of the box.**. You only need to do this once in your app:\n\n```js\nimport \"react-datetime/css/react-datetime.css\";\n```\n\n## API\n\nBelow we have all the props that we can use with the `<DateTime>` component. There are also some methods that can be used imperatively.\n\n| Name         | Type    | Default | Description |\n| ------------ | ------- | ------- | ----------- |\n| **value** | `Date` | `new Date()` | Represents the selected date by the component, in order to use it as a [controlled component](https://facebook.github.io/react/docs/forms.html#controlled-components). This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. |\n| **initialValue** | `Date` | `new Date()` | Represents the selected date for the component to use it as a [uncontrolled component](https://facebook.github.io/react/docs/uncontrolled-components.html). This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. If you need to set the selected date programmatically after the picker is initialized, please use the `value` prop instead. |\n| **initialViewDate** | `Date` | `new Date()` | Define the month/year/decade/time which is viewed on opening the calendar. This prop is parsed by Moment.js, so it is possible to use a date `string` or a `moment` object. If you want to set the view date after the component has been initialize [see the imperative API](#imperative-api). |\n| **initialViewMode** | `string` or `number` | `'days'` | The default view to display when the picker is shown for the first time (`'years'`, `'months'`, `'days'`, `'time'`). If you want to set the view mode after the component has been initialize [see the imperative API](#imperative-api). |\n| **updateOnView** | `string` | Intelligent guess | By default we can navigate through years and months without actualling updating the selected date. Only when we get to one view called the \"updating view\", we make a selection there and the value gets updated, triggering an `onChange` event. By default the updating view will get guessed by using the `dateFormat` so if our dates only show months and never days, the update is done in the `months` view. If we set `updateOnView=\"time\"` selecting a day will navigate to the time view. The time view always updates the selected date, never navigates. If `closeOnSelect={ true }`, making a selection in the view defined by `updateOnView` will close the calendar. |\n| **dateFormat**   | `boolean` or `string`  | `true` | Defines the format for the date. It accepts any [Moment.js date format](http://momentjs.com/docs/#/displaying/format/) (not in localized format). If `true` the date will be displayed using the defaults for the current locale. If `false` the datepicker is disabled and the component can be used as timepicker, see [available units docs](#specify-available-units). |\n| **timeFormat**   | `boolean` or `string`  | `true` | Defines the format for the time. It accepts any [Moment.js time format](http://momentjs.com/docs/#/displaying/format/) (not in localized format). If `true` the time will be displayed using the defaults for the current locale. If `false` the timepicker is disabled and the component can be used as datepicker, see [available units docs](#specify-available-units). |\n| **input** | `boolean` | `true` | Whether to show an input field to edit the date manually. |\n| **open** | `boolean` | `null` | Whether to open or close the picker. If not set react-datetime will open the datepicker on input focus and close it on click outside. |\n| **locale** | `string` | `null` | Manually set the locale for the react-datetime instance. Moment.js locale needs to be loaded to be used, see [i18n docs](#i18n).\n| **utc** | `boolean` | `false` | When true, input time values will be interpreted as UTC (Zulu time) by Moment.js. Otherwise they will default to the user's local timezone.\n| **displayTimeZone** | `string` | `null` | **Needs [moment's timezone](https://momentjs.com/timezone/) available in your project.** When specified, input time values will be displayed in the given time zone. Otherwise they will default to the user's local timezone (unless `utc` specified).\n| **onChange** | `function` | empty function | Callback trigger when the date changes. The callback receives the selected `moment` object as only parameter, if the date in the input is valid. If the date in the input is not valid, the callback receives the value of the input (a string). |\n| **onOpen** | `function` | empty function | Callback trigger for when the user opens the datepicker. |\n| **onClose** | `function` | empty function | Callback trigger for when the calendar get closed. The callback receives the selected `moment` object as only parameter, if the date in the input is valid. If the date in the input is not valid, the callback returns the value in the input. |\n| **onNavigate** | `function` | empty function | Callback trigger when the view mode changes. The callback receives the selected view mode string (`years`, `months`, `days` or `time`) as only parameter.|\n| **onBeforeNavigate** | `function` | ( nextView, currentView, viewDate ) => nextView | Allows to intercept a change of the calendar view. The accepted function receives the view that it's supposed to navigate to, the view that is showing currently and the date currently shown in the view. Return a viewMode ( default ones are `years`, `months`, `days` or `time`) to navigate to it. If the function returns a \"falsy\" value, the navigation is stopped and we will remain in the current view. |\n| **onNavigateBack** | `function` | empty function | Callback trigger when the user navigates to the previous month, year or decade. The callback receives the amount and type ('month', 'year') as parameters. |\n| **onNavigateForward** | `function` | empty function | Callback trigger when the user navigates to the next month, year or decade. The callback receives the amount and type ('month', 'year') as parameters. |\n| **className** | `string` or `string array` | `''` | Extra class name for the outermost markup element. |\n| **inputProps** | `object` | `undefined` | Defines additional attributes for the input element of the component. For example: `onClick`, `placeholder`, `disabled`, `required`, `name` and `className` (`className` *sets* the class attribute for the input element). See [Customize the Input Appearance](#customize-the-input-appearance). |\n| **isValidDate** | `function` | `() => true` | Define the dates that can be selected. The function receives `(currentDate, selectedDate)` and shall return a `true` or `false` whether the `currentDate` is valid or not. See [selectable dates](#selectable-dates).|\n| **renderInput** | `function` | `undefined` | Replace the rendering of the input element. The function has the following arguments: the default calculated `props` for the input, `openCalendar` (a function which opens the calendar) and `closeCalendar` (a function which closes the calendar). Must return a React component or `null`. See [Customize the Input Appearance](#customize-the-input-appearance). |\n| **renderView** | `function` | `(viewMode, renderDefault) => renderDefault()` | Customize the way the calendar is rendered. The accepted function receives the type of the view it's going to be rendered `'years', 'months', 'days', 'time'` and a function to render the default view of react-datetime, this way it's possible to wrap the original view adding our own markup or override it completely with our own code. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderDay** | `function` | `DOM.td(day)` | Customize the way that the days are shown in the daypicker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderMonth** | `function` | `DOM.td(month)` | Customize the way that the months are shown in the monthpicker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, the `month` and the `year` to be shown, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **renderYear** | `function` | `DOM.td(year)` | Customize the way that the years are shown in the year picker. The accepted function has the `selectedDate`, the current date and the default calculated `props` for the cell, the `year` to be shown, and must return a React component. See [Customize the Datepicker Appearance](#customize-the-datepicker-appearance). |\n| **strictParsing** | `boolean` | `true` | Whether to use Moment.js's [strict parsing](http://momentjs.com/docs/#/parsing/string-format/) when parsing input.\n| **closeOnSelect** | `boolean` | `false` | When `true`, once the day has been selected, the datepicker will be automatically closed.\n| **closeOnTab** | `boolean` | `true` | When `true` and the input is focused, pressing the `tab` key will close the datepicker.\n| **timeConstraints** | `object` | `null` | Add some constraints to the timepicker. It accepts an `object` with the format `{ hours: { min: 9, max: 15, step: 2 }}`, this example means the hours can't be lower than `9` and higher than `15`, and it will change adding or subtracting `2` hours everytime the buttons are clicked. The constraints can be added to the `hours`, `minutes`, `seconds` and `milliseconds`.\n| **closeOnClickOutside** | `boolean` | `true` | When the calendar is open and `closeOnClickOutside` is `true` (its default value), clickin outside of the calendar or input closes the calendar. If `false` the calendar stays open.\n\n## Imperative API\nBesides controlling the selected date, there is a navigation through months, years, decades that react-datetime handles for us. We can interfere in it, stopping view transtions by using the prop `onBeforeNavigate`, but we can also navigate to a specific view and date by using some imperative methods.\n\nTo do so, we need to create our component with a `ref` prop amd use the reference.\n```js\n// This would be the code to render the picker\n<DateTime ref=\"datetime\" />\n\n// ... once rendered we can use the imperative API\n// let's show the years view\nthis.refs.datetime.navigate('years')\n```\n\nAvailable methods are:\n* **navigate( viewMode )**: Set the view currently shown by the calendar. View modes shipped with react-datetime are `years`, `months`, `days` and `time`, but you can alse navigate to custom modes that can be defined by using the `renderView` prop.\n* **setViewDate( date )**: Set the date that is currently shown in the calendar. This is independent from the selected date and it's the one used to navigate through months or days in the calendar. It accepts a string in the format of the current locale, a `Date` or a `Moment` object as parameter.\n\n## i18n\nDifferent language and date formats are supported by react-datetime. React uses [Moment.js](http://momentjs.com/) to format the dates, and the easiest way of changing the language of the calendar is [changing the Moment.js locale](http://momentjs.com/docs/#/i18n/changing-locale/).\n\nDon't forget to import your locale file from the moment's `moment/locale` folder.\n\n```js\nimport moment from 'moment';\nimport 'moment/locale/fr';\n// Now react-datetime will be in french\n```\n\nIf there are multiple locales loaded, you can use the prop `locale` to define what language shall be used by the instance.\n```js\n<Datetime locale=\"fr-ca\" />\n<Datetime locale=\"de\" />\n```\n[Here you can see the i18n example working](https://codesandbox.io/s/interesting-kare-0707b).\n\n## Customize the Input Appearance\nIt is possible to customize the way that the input is displayed. The simplest is to supply `inputProps` which will get directly assigned to the `<input />` element within the component. We can tweak the inputs this way:\n\n```js\nlet inputProps = {\n    placeholder: 'N/A',\n    disabled: true,\n    onMouseLeave: () => alert('You went to the input but it was disabled')\n};\n\n<Datetime inputProps={ inputProps } />\n```\n[See the customized input working](https://codesandbox.io/s/clever-wildflower-81r26?file=/src/App.js)\n\n\nAlternatively, if you need to render different content than an `<input />` element, you may supply a `renderInput` function which is called instead.\n\n```js\nclass MyDTPicker extends React.Component {\n    render(){\n        return <Datetime renderInput={ this.renderInput } />;\n    }\n    renderInput( props, openCalendar, closeCalendar ){\n        function clear(){\n            props.onChange({target: {value: ''}});\n        }\n        return (\n            <div>\n                <input {...props} />\n                <button onClick={openCalendar}>open calendar</button>\n                <button onClick={closeCalendar}>close calendar</button>\n                <button onClick={clear}>clear</button>\n            </div>\n        );\n    }\n}\n```\n\n[See this example working](https://codesandbox.io/s/peaceful-water-3gb5m)\n\n\nOr maybe you just want to shown the calendar and don't need an input at all. In that case `input={ false }` will make the trick:\n\n```js\n    <Datetime input={ false } />;\n```\n[See react-datetime calendar working without an input](https://codesandbox.io/s/busy-vaughan-wh773)\n\n## Customize the Datepicker Appearance\nIt is possible to customize the way that the datepicker display the days, months and years in the calendar. To adapt the calendar for every need it is possible to use the props `renderDay(props, currentDate, selectedDate)`, `renderMonth(props, month, year, selectedDate)` and `renderYear(props, year, selectedDate)` to customize the output of each rendering method.\n\n```js\nclass MyDTPicker extends React.Component {\n  render() {\n    return (\n      <Datetime\n        renderDay={this.renderDay}\n        renderMonth={this.renderMonth}\n        renderYear={this.renderYear}\n      />\n    );\n  }\n  renderDay(props, currentDate, selectedDate) {\n    // Adds 0 to the days in the days view\n    return <td {...props}>{\"0\" + currentDate.date()}</td>;\n  }\n  renderMonth(props, month, year, selectedDate) {\n    // Display the month index in the months view\n    return <td {...props}>{month}</td>;\n  }\n  renderYear(props, year, selectedDate) {\n    // Just display the last 2 digits of the year in the years view\n    return <td {...props}>{year % 100}</td>;\n  }\n}\n```\n[See the customized calendar here.](https://codesandbox.io/s/peaceful-kirch-69e06)\n\nIt's also possible to override some view in the calendar completelly. Let's say that we want to add a today button in our calendars, when we click it we go to the today view:\n```js\nclass MyDTPicker extends React.Component {\n  render() {\n    return (\n      <Datetime\n        ref=\"datetime\"\n        renderView={(mode, renderDefault) =>\n          this.renderView(mode, renderDefault)\n        }\n      />\n    );\n  }\n\n  renderView(mode, renderDefault) {\n    // Only for years, months and days view\n    if (mode === \"time\") return renderDefault();\n\n    return (\n      <div className=\"wrapper\">\n        {renderDefault()}\n        <div className=\"controls\">\n          <button onClick={() => this.goToToday()}>Today</button>\n        </div>\n      </div>\n    );\n  }\n\n  goToToday() {\n    // Reset\n    this.refs.datetime.setViewDate(new Date());\n    this.refs.datetime.navigate(\"days\");\n  }\n}\n```\n[See it working](https://codesandbox.io/s/frosty-fog-nrwk2)\n\n#### Method Parameters\n* `props` is the object that the datepicker has calculated for this object. It is convenient to use this object as the `props` for your custom component, since it knows how to handle the click event and its `className` attribute is used by the default styles.\n* `selectedDate` and `currentDate` are [moment objects](http://momentjs.com) and can be used to change the output depending on the selected date, or the date for the current day.\n* `month` and `year` are the numeric representation of the current month and year to be displayed. Notice that the possible `month` values range from `0` to `11`.\n\n## Make it work as a year picker or a time picker\nYou can filter out what you want the user to be able to pick by using `dateFormat` and `timeFormat`, e.g. to create a timepicker, yearpicker etc.\n\nIn this example the component is being used as a *timepicker* and can *only be used for selecting a time*.\n```js\n<Datetime dateFormat={false} />\n```\n[Working example of a timepicker here.](https://codesandbox.io/s/loving-nobel-sbok2)\n\nIn this example you can *only select a year and month*.\n```js\n<Datetime dateFormat=\"YYYY-MM\" timeFormat={false} />\n```\n[Working example of only selecting year and month here.](https://codesandbox.io/s/recursing-pascal-xl643)\n\n## Blocking some dates to be selected\nIt is possible to disable dates in the calendar if the user are not allowed to select them, e.g. dates in the past. This is done using the prop `isValidDate`, which admits a function in the form `function(currentDate, selectedDate)` where both arguments are [moment objects](http://momentjs.com). The function shall return `true` for selectable dates, and `false` for disabled ones.\n\nIn the example below are *all dates before today* disabled.\n\n```js\nimport moment from 'moment';\nvar yesterday = moment().subtract( 1, 'day' );\nvar valid = function( current ){\n    return current.isAfter( yesterday );\n};\n<Datetime isValidDate={ valid } />\n```\n[Working example of disabled days here.](https://codesandbox.io/s/thirsty-shape-l4qg4)\n\nIt's also possible to disable *the weekends*, as shown in the example below.\n```js\nvar valid = function( current ){\n    return current.day() !== 0 && current.day() !== 6;\n};\n<Datetime isValidDate={ valid } />\n```\n[Working example of disabled weekends here.](https://codesandbox.io/s/laughing-keller-3wq1g)\n\n## Usage with TypeScript\n\nThis project includes typings for TypeScript versions 1.8 and 2.0. Additional typings are not\nrequired.\n\nTypings for 1.8 are found in `react-datetime.d.ts` and typings for 2.0 are found in `typings/index.d.ts`.\n\n```js\nimport * as Datetime from 'react-datetime';\n\nclass MyDTPicker extends React.Component<MyDTPickerProps, MyDTPickerState> {\n    render() JSX.Element {\n        return <Datetime />;\n    }\n}\n```\n\n## Contributions\nreact-datetime is made by the community for the community. People like you, interested in contribute, are the key of the project! ???\n\nHave a look at [our contribute page](contribute-home.md) to know how to get started.\n\n### [Changelog](CHANGELOG.md)\n\n### [MIT Licensed](LICENSE.md)\n","maintainers":[{"name":"arqex","email":"javi@arqex.com"},{"name":"simeg","email":"s.egersand@gmail.com"},{"name":"layneanderson","email":"layneand@gmail.com"}],"time":{"modified":"2022-06-25T19:49:49.838Z","created":"2015-06-20T18:10:09.870Z","0.1.0":"2015-06-20T18:10:09.870Z","0.3.1":"2015-06-22T18:09:23.259Z","0.4.0":"2015-07-06T18:12:47.882Z","0.4.1":"2015-07-09T07:34:49.972Z","0.4.2":"2015-07-09T07:48:03.048Z","0.4.3":"2015-07-09T15:44:13.670Z","0.5.0":"2015-07-14T13:48:57.886Z","1.0.0-rc.1":"2015-07-23T17:41:44.563Z","1.0.0":"2015-07-30T17:08:44.468Z","1.1.0":"2015-08-20T14:17:52.602Z","1.1.1":"2015-08-22T09:04:13.113Z","1.2.0":"2015-08-24T15:22:50.703Z","1.2.1":"2015-08-24T16:04:02.933Z","1.3.0":"2015-10-14T17:43:16.129Z","2.0.0":"2015-11-09T18:30:25.409Z","2.0.1":"2015-11-20T16:04:28.160Z","2.0.2":"2015-12-28T09:26:18.337Z","2.0.3":"2016-01-28T17:49:33.586Z","2.1.0":"2016-02-29T15:27:27.996Z","2.2.0":"2016-05-23T11:16:41.429Z","2.2.1":"2016-05-24T12:18:54.188Z","2.3.0":"2016-06-13T10:16:00.091Z","2.3.1":"2016-06-13T10:34:10.289Z","2.3.2":"2016-06-17T14:27:42.409Z","2.3.3":"2016-07-14T13:47:11.362Z","2.4.0":"2016-07-19T11:17:38.354Z","2.5.0":"2016-07-29T11:11:16.805Z","2.6.0":"2016-09-06T09:32:12.631Z","2.6.1":"2016-10-27T07:46:08.857Z","2.6.2":"2016-10-27T11:08:40.253Z","2.7.0":"2016-11-16T12:05:00.041Z","2.7.1":"2016-11-16T22:26:07.684Z","2.7.2":"2016-11-17T22:40:02.517Z","2.7.3":"2016-11-17T23:46:12.792Z","2.7.4":"2016-11-18T00:08:02.196Z","2.7.5":"2016-11-18T09:35:37.918Z","2.8.0":"2016-12-20T20:10:36.719Z","2.8.1":"2016-12-21T00:05:31.630Z","2.8.2":"2017-01-06T16:05:26.037Z","2.8.3":"2017-01-10T22:30:32.383Z","2.8.4":"2017-02-05T00:34:26.639Z","2.8.5":"2017-02-09T23:33:32.768Z","2.8.6":"2017-02-10T16:31:31.544Z","2.8.7":"2017-02-27T10:29:10.667Z","2.8.8":"2017-03-01T09:18:52.880Z","2.8.9":"2017-04-08T11:07:27.426Z","2.8.10":"2017-04-24T20:19:24.309Z","2.8.11":"2017-07-27T20:46:13.350Z","2.9.0":"2017-07-30T09:00:09.304Z","2.10.0":"2017-08-26T23:40:42.825Z","2.10.1":"2017-08-27T01:05:57.495Z","2.10.2":"2017-09-23T14:55:47.288Z","2.10.3":"2017-09-29T22:36:07.979Z","2.11.0":"2017-11-13T21:38:49.374Z","2.11.1":"2017-12-01T23:08:32.497Z","2.12.0":"2018-01-27T00:03:14.906Z","2.13.0":"2018-02-09T11:19:26.996Z","2.14.0":"2018-02-11T18:29:18.663Z","2.15.0":"2018-07-24T11:28:56.736Z","2.16.0":"2018-10-18T13:56:44.310Z","2.16.1":"2018-10-19T08:36:17.346Z","2.16.2":"2018-10-22T08:14:49.707Z","3.0.0-alpha.1":"2018-12-03T14:10:32.218Z","3.0.0":"2018-12-03T14:23:09.011Z","2.16.3":"2018-12-03T14:28:52.319Z","3.0.0-alpha.2":"2018-12-03T14:36:40.690Z","3.0.0-alpha.3":"2018-12-04T14:54:30.895Z","3.0.0-alpha.4":"2018-12-04T15:07:29.100Z","3.0.0-alpha.5":"2018-12-19T11:09:22.788Z","3.0.0-beta.1":"2018-12-20T12:01:34.205Z","3.0.0-beta.2":"2018-12-21T11:07:07.354Z","3.0.0-beta.3":"2019-03-18T10:00:21.896Z","3.0.0-beta.4":"2019-03-19T14:57:18.298Z","3.0.0-beta.6":"2020-01-22T10:50:40.866Z","3.0.0-beta.7":"2020-01-23T09:15:58.249Z","3.0.0-beta.8":"2020-02-19T10:51:34.713Z","3.0.1":"2020-09-19T15:15:13.866Z","3.0.2":"2020-09-20T11:29:37.433Z","3.0.3":"2020-09-21T16:23:51.288Z","3.0.4":"2020-09-23T16:22:53.972Z","3.1.0":"2021-09-02T19:54:56.558Z","3.1.1":"2021-09-06T15:33:40.100Z"},"homepage":"https://github.com/arqex/react-datetime","keywords":["react","react-component","datepicker","timepicker","datetimepicker","datetime"],"repository":{"type":"git","url":"git+https://github.com/arqex/react-datetime.git"},"author":{"name":"Javier Marquez"},"bugs":{"url":"https://github.com/arqex/react-datetime/issues"},"license":"MIT","readmeFilename":"README.md","users":{"ahmedelgabri":true,"simeg":true,"eimaj":true,"actionwolf":true,"awhmandan":true,"khorolets":true,"layneanderson":true,"reyronald":true}}