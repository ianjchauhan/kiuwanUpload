{"_id":"maintenance","_rev":"9-07c6caf62ade3621937c46a428a7afbf","name":"maintenance","description":"Express.js middleware for easy switching the app to maintenance mode.","dist-tags":{"latest":"0.0.2"},"versions":{"0.0.1":{"name":"maintenance","version":"0.0.1","description":"Express.js middleware for easy switching the app to maintenance mode.","main":"source/maintenance.js","scripts":{"test":"make test-once"},"config":{"blanket":{"pattern":"source","data-cover-never":"node_modules"}},"repository":{"type":"git","url":"git://github.com/likeastore/maintenance.git"},"keywords":["express.js","maintenance","mode","switch"],"author":{"name":"info@likeastore.com"},"license":"MIT","bugs":{"url":"https://github.com/likeastore/maintenance/issues"},"devDependencies":{"mocha":"~1.10.0","chai":"~1.6.1","sinon-chai":"~2.4.0","request":"~2.21.0","express":"~3.5.1","ejs":"~1.0.0"},"homepage":"https://github.com/likeastore/maintenance","_id":"maintenance@0.0.1","dist":{"shasum":"a3afade84195a7f2f40de15e1ea44bab5d5e2ff7","tarball":"https://registry.npmjs.org/maintenance/-/maintenance-0.0.1.tgz","integrity":"sha512-aMIoPyScGM5CEXe46PLf4adX3VhhMUgNC+nJ0tv2AxUaZRQvnfOyTPVqgEcC63KVGcJQlr5C0GhMun+HrX3vmg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCrodYgboIniaPdAfhb/KTqk/PYABJhT3CxDjpA6dotqQIhANeypqiBL/f+XbrxdvUK7xpA9SdYR8/4jLLOGyEReOuv"}]},"_from":".","_npmVersion":"1.3.21","_npmUser":{"name":"alexanderbeletsky","email":"alexander.beletsky@gmail.com"},"maintainers":[{"name":"alexanderbeletsky","email":"alexander.beletsky@gmail.com"}]},"0.0.2":{"name":"maintenance","version":"0.0.2","description":"Express.js middleware for easy switching the app to maintenance mode.","main":"source/maintenance.js","scripts":{"test":"make test-once"},"config":{"blanket":{"pattern":"source","data-cover-never":"node_modules"}},"repository":{"type":"git","url":"git://github.com/likeastore/maintenance.git"},"keywords":["express.js","maintenance","mode","switch"],"author":{"name":"info@likeastore.com"},"license":"MIT","bugs":{"url":"https://github.com/likeastore/maintenance/issues"},"devDependencies":{"mocha":"~1.10.0","chai":"~1.6.1","sinon-chai":"~2.4.0","request":"~2.21.0","express":"~3.5.1","ejs":"~1.0.0"},"homepage":"https://github.com/likeastore/maintenance","_id":"maintenance@0.0.2","dist":{"shasum":"657b5298f15b0d023f99e952125daeb27078af4a","tarball":"https://registry.npmjs.org/maintenance/-/maintenance-0.0.2.tgz","integrity":"sha512-d+kxrIF8MMAmhemUa4P83zyJjTSAvUoKqqvWzwnPAVGTQf6FbBdODCPVwEV41uxbMe8EoC1iQEsnHztsAGF5Jw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHTbZudJ/haaj2sbV6+oMVgBan45AyNbCPuNXkLPQHCxAiEA9grbudNYg90GoKUpwt7cI37xx8UEhcxje83v3OYCCOw="}]},"_from":".","_npmVersion":"1.3.21","_npmUser":{"name":"alexanderbeletsky","email":"alexander.beletsky@gmail.com"},"maintainers":[{"name":"alexanderbeletsky","email":"alexander.beletsky@gmail.com"}]}},"readme":"# Maintenance\n[![Build Status](https://api.travis-ci.org/likeastore/maintenance.png)](https://travis-ci.org/likeastore/maintenance)\n\nExpress.js middleware for easy switching the app to maintenance mode.\n\n## Description\n\nDeployment of new version of app or patching the database, could cause the need to put application to `maintenance` mode before all operations are completed. Typically, it's just a page with description of what's happening and when service is going to be restore.\n\nFor REST API's, it's required to send a meaningful HTTP code and description.\n\n`maintenance` provides middleware and http-endpoint for putting application to maintenance mode.\n\nIt supports 2 modes of work:\n\n* configuration-based (require redeployment of app)\n* hot-switch mode (put to maintenance without redeployment)\n\nIn configuration-based mode, you should provide the `flag` signaling the application on maintenance mode and restart the application:\n\n```js\nvar config = {\n\tmaintenance: true\n};\n\nmaintenance(app, config.maintenance);\n```\n\nHot-switch is could more convenient since doesn't require re-start. And could be controlled by HTTP:\n\n```bash\n# put app to maintanance\nHTTP POST http://youapp.com/maintenance?access_key=[SHARED_SECRET_KEY]\n\n# back to normal\nHTTP DELETE http://youapp.com/maintenance?access_key=[SHARED_SECRET_KEY]\n```\n\nBy default, if application in maintenance mode, it would render `views/maintenance.html` view.\n\n## Usage\n\nInstall `maintenance` from npm,\n\n```bash\n$ npm install maintenance\n```\n\nUpdate your application,\n\n```js\nvar maintenance = require('maintenance');\nvar app = express();\n\napp.get('/', function (req, res) {\n\tconsole.log(req.url);\n\tres.send(200);\n});\n\nmaintenance(app);\n```\n\nSpecifying the initial mode,\n\n```js\n// starts the app in maintenance mode\nmaintenance(app, true);\n```\n\nor take from config,\n\n```js\n// starts the app in maintenance mode\nmaintenance(app, config.maintenence.current);\n```\n\nor use options,\n\n```js\nmaintenance(app, {httpEndpoint: true, api: '/api'});\n```\n\n## Options\n\nInstead of initial you can customize `maintenance` with options object,\n\n```js\nvar options = {\n\tcurrent: true,\t\t\t\t\t\t// current state, default **false**\n\thttpEndpoint: true,\t\t\t\t\t// expose http endpoint for hot-switch, default **false**,\n\turl: '/app/mt',\t\t\t\t\t\t// if `httpEndpoint` is on, customize endpoint url, default **'/maintenance'**\n\taccessKey: 'xx4zUU8Cyy7',\t\t\t// token that client send to authorize, if not defined `access_key` is not used\n\tview: 'myview.html',\t\t\t\t// view to render on maintenance, default **'maintenance.html'**\n\tapi: '/api',\t\t\t\t\t\t// for rest API, species root URL to apply, default **undefined**\n\tstatus: 503,\t\t\t\t\t\t// status code for response, default **503**\n\tmessage: 'will be back'\t\t\t\t// response message, default **'sorry, we are on maintenance'**\n};\n\nmaintenance(app, options);\n```\n\n## Licence (MIT)\n\nCopyright (c) 2013, Likeastore.com info@likeastore.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","maintainers":[{"name":"alexanderbeletsky","email":"alexander.beletsky@gmail.com"}],"time":{"modified":"2022-06-19T15:30:01.992Z","created":"2014-04-06T13:39:34.193Z","0.0.1":"2014-04-06T13:39:34.193Z","0.0.2":"2014-06-21T15:02:08.646Z"},"homepage":"https://github.com/likeastore/maintenance","keywords":["express.js","maintenance","mode","switch"],"repository":{"type":"git","url":"git://github.com/likeastore/maintenance.git"},"author":{"name":"info@likeastore.com"},"bugs":{"url":"https://github.com/likeastore/maintenance/issues"},"license":"MIT","readmeFilename":"README.md","users":{"dearwish":true,"shoresh319":true,"ethanliew":true}}