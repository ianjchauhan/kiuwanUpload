{"_id":"simple-assign","_rev":"3-c290d748272d21fb67d4aebf1a97344b","name":"simple-assign","description":"Simple implementation of Object.assign","dist-tags":{"latest":"0.1.0"},"versions":{"0.1.0":{"name":"simple-assign","version":"0.1.0","description":"Simple implementation of Object.assign","repository":{"type":"git","url":"git+https://github.com/newoga/simple-assign.git"},"author":{"name":"Neil Gabbadon","email":"neil.gabbadon@gmail.com","url":"http://github.com/newoga"},"license":"MIT","main":"index.js","gitHead":"3df95ac1f0fca7ede30fc707dab121642507b969","bugs":{"url":"https://github.com/newoga/simple-assign/issues"},"homepage":"https://github.com/newoga/simple-assign#readme","_id":"simple-assign@0.1.0","scripts":{},"_shasum":"17fd3066a5f3d7738f50321bb0f14ca281cc4baa","_from":".","_npmVersion":"3.3.12","_nodeVersion":"5.1.1","_npmUser":{"name":"neilgabbadon","email":"neil.gabbadon@gmail.com"},"dist":{"shasum":"17fd3066a5f3d7738f50321bb0f14ca281cc4baa","tarball":"https://registry.npmjs.org/simple-assign/-/simple-assign-0.1.0.tgz","integrity":"sha512-otdSSQzuVsmDoe5MnSm4ZgHd5sl0ak6A1CTjW1R/DUHQ8xoZuU1NUzf9x6n9Dvp3nxpvW51WNMQ/7rQ9432xDg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAaOHapIpEN87MBcJwiSavHnwG6cWonGUdA5Vwang7BQAiARPQZpIcg9cBhVUzW4AEsA+41c7yz05mNE6yZ9XBGmuQ=="}]},"maintainers":[{"name":"neilgabbadon","email":"neil.gabbadon@gmail.com"}],"_npmOperationalInternal":{"host":"packages-6-west.internal.npmjs.com","tmp":"tmp/simple-assign-0.1.0.tgz_1454452883221_0.01859949785284698"}}},"readme":"## simple-assign\n\nThis is a simple implementation `Object.assign` that has been graciously stolen from [babel's extends helper](https://github.com/babel/babel/blob/v6.4.6/packages/babel-helpers/src/helpers.js#L165-L177).\n\n**Note:** This is just the function implementation. It is **not** a ponyfill and it  **does not** check for the existence of `Object.assign` for you. To make a true [ponyfill](https://kikobeats.com/polyfill-ponyfill-and-prollyfill/) that returns the native implementation if available, you can do something like this:\n\n**Example:**\n```js\nimport assign from 'simple-assign';\n\nexport default Object.assign || assign;\n```\n","maintainers":[{"name":"neilgabbadon","email":"neil.gabbadon@gmail.com"}],"time":{"modified":"2022-06-26T19:31:09.426Z","created":"2016-02-02T22:41:26.193Z","0.1.0":"2016-02-02T22:41:26.193Z"},"homepage":"https://github.com/newoga/simple-assign#readme","repository":{"type":"git","url":"git+https://github.com/newoga/simple-assign.git"},"author":{"name":"Neil Gabbadon","email":"neil.gabbadon@gmail.com","url":"http://github.com/newoga"},"bugs":{"url":"https://github.com/newoga/simple-assign/issues"},"license":"MIT","readmeFilename":"README.md"}