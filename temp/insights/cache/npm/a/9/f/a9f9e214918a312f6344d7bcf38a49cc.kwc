{"_id":"ar","_rev":"6-64b84339be250df285afeacfef51fe88","name":"ar","description":"ar - Read Unix archive files.","dist-tags":{"latest":"0.0.1"},"versions":{"0.0.1":{"name":"ar","description":"ar - Read Unix archive files.","version":"0.0.1","homepage":"https://github.com/jvilk/node-ar","author":{"name":"John Vilk","email":"jvilk@cs.umass.edu"},"licenses":[{"type":"MIT","url":"https://github.com/jvilk/node-ar/blob/master/LICENSE"}],"main":"lib/ar.js","devDependencies":{"grunt":"*","grunt-ts":"latest","grunt-shell":"~0.5.0","glob":"*"},"repository":{"type":"git","url":"https://github.com/jvilk/node-ar.git"},"scripts":{"test":"grunt test"},"readme":"ar\n=====\n\nA Node library for reading [Unix archive files](http://en.wikipedia.org/wiki/Ar_%28Unix%29).\n\nUsage\n=====\n```javascript\nvar ar = require('ar'),\n    fs = require('fs'),\n    path = require('path');\n\n\n// Extracts all of the files in \"some_archive.a\" to the folder \"./output\".\nvar outputDir = \"./output\";\nif (!fs.existsSync(outputDir)) fs.mkdirSync(outputDir);\n\nvar archive = new ar.Archive(fs.readFileSync('some_archive.a'));\nvar files = archive.getFiles();\nfor (var i = 0; i < files.length; i++) {\n  var file = files[i];\n  fs.writeFileSync(path.resolve(outputDir, file.name()), file.fileData());\n}\n```\n\nStatus\n======\n\n* Supports the BSD variant of the common archive format, which is used by BSD\n  `ar` and Debian packages.\n  * For some reason, GNU `ar` from GNU binutils (at least from Mac Homebrew)\n    also uses the BSD format.\n* Does not support AIX (big), AIX (small), GNU `ar`, and other archive variants.\n  If you want support for alternative formats, please make your case in a GitHub\n  issue, or implement it yourself in a PR!\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/jvilk/node-ar/issues"},"_id":"ar@0.0.1","dist":{"shasum":"ba80716fe5a450140c6fdb8f6a82b29ad946161c","tarball":"https://registry.npmjs.org/ar/-/ar-0.0.1.tgz","integrity":"sha512-zSVXXsH9AUILtPah3SpWn+V9SvBdYeyeq/Lo5NwkEMKsDMUpwlhDGmVLjBT6oq7U0adfIMGa09rLWo2KUiVdew==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCVfAFnWTN1SkcDyoqIvgTXpOFDsmAHScLDOUonzvk1QwIgeYIViexBNjANcytdDnisuhknW8r6dVy5HI2DhtB2TI8="}]},"_from":"node-ar/","_npmVersion":"1.3.14","_npmUser":{"name":"jvilk","email":"jvilk@cs.umass.edu"},"maintainers":[{"name":"jvilk","email":"jvilk@cs.umass.edu"}],"directories":{}}},"readme":"ar\n=====\n\nA Node library for reading [Unix archive files](http://en.wikipedia.org/wiki/Ar_%28Unix%29).\n\nUsage\n=====\n```javascript\nvar ar = require('ar'),\n    fs = require('fs'),\n    path = require('path');\n\n\n// Extracts all of the files in \"some_archive.a\" to the folder \"./output\".\nvar outputDir = \"./output\";\nif (!fs.existsSync(outputDir)) fs.mkdirSync(outputDir);\n\nvar archive = new ar.Archive(fs.readFileSync('some_archive.a'));\nvar files = archive.getFiles();\nfor (var i = 0; i < files.length; i++) {\n  var file = files[i];\n  fs.writeFileSync(path.resolve(outputDir, file.name()), file.fileData());\n}\n```\n\nStatus\n======\n\n* Supports the BSD variant of the common archive format, which is used by BSD\n  `ar` and Debian packages.\n  * For some reason, GNU `ar` from GNU binutils (at least from Mac Homebrew)\n    also uses the BSD format.\n* Does not support AIX (big), AIX (small), GNU `ar`, and other archive variants.\n  If you want support for alternative formats, please make your case in a GitHub\n  issue, or implement it yourself in a PR!\n","maintainers":[{"name":"jvilk","email":"jvilk@cs.umass.edu"}],"time":{"modified":"2022-06-13T03:20:30.722Z","created":"2013-12-19T02:43:11.336Z","0.0.1":"2013-12-19T02:43:12.950Z"},"author":{"name":"John Vilk","email":"jvilk@cs.umass.edu"},"repository":{"type":"git","url":"https://github.com/jvilk/node-ar.git"},"users":{"c-gyorfi":true}}