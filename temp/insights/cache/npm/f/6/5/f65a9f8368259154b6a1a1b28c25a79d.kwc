{"_id":"da","_rev":"13-019ba73c56b52af281fb055882c16265","name":"da","description":"First, last, or not argument getter for a given type","dist-tags":{"latest":"0.0.3"},"versions":{"0.0.1":{"author":{"name":"Beau Sorensen","email":"mail@beausorensen.com","url":"http://github.com/sorensen"},"name":"da","description":"First, last, or not argument getter for a given type","version":"0.0.1","repository":{"type":"git","url":"git://github.com/sorensen/defined-args.git"},"engines":{"node":"0.x"},"main":"index.js","scripts":{"test":"make test"},"devDependencies":{"mocha":"~1.8.1"},"readme":"\n","readmeFilename":"readme.md","_id":"da@0.0.1","dist":{"shasum":"81a3e602b226f001f12da3608807316a28701bfa","tarball":"https://registry.npmjs.org/da/-/da-0.0.1.tgz","integrity":"sha512-Uwiq8+NUYrQhwlg1djRpT/7Z+nk5UxBETuloE3i14BG+0DwH7Bxu11faMLABlKDcvUian52iZpRytK/rhp2GeQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIE87BeyC+OBSco3DoHQzaTYZbxdHsYge0nkbLuc4qRBaAiAQsjKYVqTJZNN9m87MiST247TpzT8A5YE6wy7oUTPSmg=="}]},"_npmVersion":"1.1.65","_npmUser":{"name":"sorensen","email":"mail@beausorensen.com"},"maintainers":[{"name":"sorensen","email":"mail@beausorensen.com"}],"directories":{}},"0.0.2":{"author":{"name":"Beau Sorensen","email":"mail@beausorensen.com","url":"http://github.com/sorensen"},"name":"da","description":"First, last, or not argument getter for a given type","version":"0.0.2","repository":{"type":"git","url":"git://github.com/sorensen/defined-args.git"},"engines":{"node":"0.x"},"main":"index.js","scripts":{"test":"make test"},"devDependencies":{"mocha":"~1.8.1"},"readme":"\nDefined Args\n============\n\nA small utility for grabing arguments of a specified type.\n\nUsage\n-----\n\nNode.js \n\n``` js\nvar da = require('da')\n```\n\nBrowser \n\n``` html\n<script src=\"da.js\"></script>\n```\n\nMethods\n-------\n\nIn all methods, `type`, can be matched against the following built in types: `null`, `undefined`, `boolean`, `array`, `function`, `date`, `regexp`, `number`, `string`, and `object`. The param is not case sensitive.\n\n### first(type, …)\n\nReturns the first argument of the specified type\n\n``` js\nda.first('string', 1, 2, 'a', 'b') // 'a'\nda.first.number('a', 'b', 1, 2) // 1\n```\n\n### last(type, …)\n\nReturns the last argument of the specified type\n\n``` js\nda.last('object', 1, null, 'a', {foo: 'bar'}, {}) // {foo: 'bar'}\nda.last.boolean(1, 2, true, false) // false\n```\n\n### not(type, …) \n\nReturns the first type that does not match the specified type\n\n``` js\nda.not('number', 1, 2, 'a', 3) // 'a'\nda.not.array([1], [2, 3], undefined, [4]) // undefined\n```\n\nAliases\n-------\n\nAll top level methods, (`first`, `last`, `not`), have an alias to the built in types checked against.\n\n* `method.null`\n* `method.string`\n* `method.undefined`\n* `method.number`\n* `method.function`\n* `method.boolean`\n* `method.date`\n* `method.regexp`\n* `method.object`\n* `method.array`\n\nInstall\n-------\n\nWith [npm](https://npmjs.org)\n\n```\nnpm install da\n```\n\n","readmeFilename":"readme.md","_id":"da@0.0.2","dist":{"shasum":"0e1272decb19d2daa7b6df2903541e3fa3bdf10e","tarball":"https://registry.npmjs.org/da/-/da-0.0.2.tgz","integrity":"sha512-jshLXhzQyIJu5VePs1BLli4lzjSTOVaQ8zXOzF1tdwMTTSClJht3FmMiOnfHI0sSii99O5Bs4aI26h/5g1+KqA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAVPe4xKTWzSUaB8gTUe4shNWbVlfuN7AH8wXdRokMn3AiAsKvX/MZgtavxT7ZTcXPpx7k/oauSlNxVRQT/f7asiSQ=="}]},"_npmVersion":"1.1.65","_npmUser":{"name":"sorensen","email":"mail@beausorensen.com"},"maintainers":[{"name":"sorensen","email":"mail@beausorensen.com"}],"directories":{}},"0.0.3":{"author":{"name":"Beau Sorensen","email":"mail@beausorensen.com","url":"http://github.com/sorensen"},"name":"da","description":"First, last, or not argument getter for a given type","version":"0.0.3","repository":{"type":"git","url":"git://github.com/sorensen/defined-args.git"},"engines":{"node":"0.x"},"main":"index.js","scripts":{"test":"make test"},"devDependencies":{"mocha":"~1.8.1"},"readme":"\nDefined Args\n============\n\n[![Build Status](https://secure.travis-ci.org/sorensen/defined-args.png)](http://travis-ci.org/sorensen/defined-args) \n\nA small utility for grabing arguments of a specified type.\n\nInspired from [tblobaum](https://github.com/tblobaum)'s [rconsole](https://github.com/tblobaum/rconsole)'s [defined](https://github.com/tblobaum/rconsole/blob/master/rconsole.js#L312-L316) method\n\nUsage\n-----\n\nNode.js\n\n``` js\nvar da = require('da')\n```\n\nBrowser\n\n``` html\n<script src=\"da.js\"></script>\n```\n\nMethods\n-------\n\nIn all methods, `type`, can be matched against the following built in types: `null`, `undefined`, `boolean`, `array`, `function`, `date`, `regexp`, `number`, `string`, and `object`. The param is not case sensitive.\n\n### first(type, …)\n\nReturns the first argument of the specified type\n\n``` js\nda.first('string', 1, 2, 'a', 'b') // 'a'\nda.first.number('a', 'b', 1, 2) // 1\n```\n\n### last(type, …)\n\nReturns the last argument of the specified type\n\n``` js\nda.last('object', 1, null, 'a', {foo: 'bar'}, {}) // {foo: 'bar'}\nda.last.boolean(1, 2, true, false) // false\n```\n\n### not(type, …) \n\nReturns the first type that does not match the specified type\n\n``` js\nda.not('number', 1, 2, 'a', 3) // 'a'\nda.not.array([1], [2, 3], undefined, [4]) // undefined\n```\n\nAliases\n-------\n\nAll top level methods, (`first`, `last`, `not`), have an alias to the built in types checked against.\n\n* `method.null`\n* `method.string`\n* `method.undefined`\n* `method.number`\n* `method.function`\n* `method.boolean`\n* `method.date`\n* `method.regexp`\n* `method.object`\n* `method.array`\n\nInstall\n-------\n\nWith [npm](https://npmjs.org)\n\n```\nnpm install da\n```\n\n","readmeFilename":"readme.md","_id":"da@0.0.3","dist":{"shasum":"9d36dd233da767547fce05cefe3a358e2c637242","tarball":"https://registry.npmjs.org/da/-/da-0.0.3.tgz","integrity":"sha512-W022psYY1mKc4SLYK7GxZNqe6OkGyqVvVKjcbAL++FHaHmcmZKdhK8X5vTelWvenZDnh+Z6DH1jyGPJm6Nkkxw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGeo48CarBAcmBmgSF006zbrJvhHvnZsYsRPz8C6/pnwAiBskSkd4gV5I8LEDUDmJZiyeb6ye23FBWYePHAS5D9obQ=="}]},"_npmVersion":"1.1.65","_npmUser":{"name":"sorensen","email":"mail@beausorensen.com"},"maintainers":[{"name":"sorensen","email":"mail@beausorensen.com"}]}},"readme":"\n","maintainers":[{"name":"sorensen","email":"mail@beausorensen.com"}],"time":{"modified":"2022-06-14T08:06:10.504Z","created":"2013-01-28T22:01:47.160Z","0.0.1":"2013-01-28T22:01:49.108Z","0.0.2":"2013-01-29T06:19:41.097Z","0.0.3":"2013-01-30T05:45:17.891Z"},"author":{"name":"Beau Sorensen","email":"mail@beausorensen.com","url":"http://github.com/sorensen"},"repository":{"type":"git","url":"git://github.com/sorensen/defined-args.git"}}